antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component","keyword"],"fieldVectors":[["title/1-1",[0,28.799,1,28.284,2,20.925]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["keyword/1-1",[]],["title/1-2",[3,51.371,4,48.906]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["keyword/1-2",[]],["title/1-3",[5,39.848,6,19.662]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["keyword/1-3",[]],["title/1-4",[7,8.295,8,17.699,9,22.224,10,18.878,11,17.351,12,18.46,13,20.9,14,12.442,15,15.591]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["keyword/1-4",[]],["title/1-5",[6,15.43,7,12.759,16,12.517,17,26.181]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["keyword/1-5",[]],["title/1",[7,14.298,18,39.658,19,26.441]],["name/1",[20,1.354]],["text/1",[0,4.545,1,1.732,2,2.909,3,2.767,4,2.634,5,2.146,6,2.404,7,2.186,8,3.5,9,2.346,10,1.993,11,3.432,12,3.651,13,3.393,14,2.461,15,1.646,16,2.424,17,3.779,18,2.429,21,1.702,22,1.702,23,3.156,24,2.273,25,1.907,26,2.712,27,2.511,28,3.494,29,3.215,30,3.199,31,2.531,32,3.156,33,2.573,34,2.767,35,3.156,36,4.05,37,3.156,38,2.531,39,2.524,40,3.618,41,2.767,42,4.852,43,3.882,44,2.146,45,2.634,46,3.156,47,2.634,48,2.524,49,3.156,50,2.617,51,2.091,52,2.524,53,2.413,54,2.091,55,2.933,56,2.634,57,2.763,58,1.702,59,2.146,60,2.483,61,3.493,62,1.949,63,3.156,64,2.677,65,2.644,66,1.546,67,2.933,68,2.763,69,3.156,70,2.524,71,3.493,72,2.634,73,1.732,74,3.493,75,1.797,76,2.429,77,3.493,78,5.912,79,2.767,80,2.767,81,3.156,82,2.401,83,2.146,84,4.55,85,2.273,86,1.775,87,3.156,88,4.254,89,2.091,90,5.912,91,2.429,92,1.673,93,2.401,94,2.273,95,1.546,96,1.764,97,2.429,98,2.933,99,2.346,100,2.933,101,3.156,102,1.832,103,2.524,104,1.949,105,2.429,106,1.33,107,2.767,108,1.764,109,1.673,110,2.524,111,2.243,112,2.524,113,3.88,114,2.346,115,3.156,116,2.273,117,3.156,118,2.146,119,1.594,120,1.993,121,2.04,122,2.634,123,2.429,124,2.04,125,1.732,126,1.949,127,3.156,128,2.429,129,2.634,130,1.619,131,1.949,132,1.569,133,2.634,134,2.634,135,2.273,136,1.907,137,2.04,138,3.493,139,2.907,140,2.617,141,2.04,142,2.346,143,4.021,144,2.664,145,2.997,146,4.011,147,1.868,148,2.429,149,2.273,150,3.156,151,2.933,152,2.933,153,3.034,154,3.709,155,4.05,156,2.767,157,3.156,158,4.254,159,2.401,160,2.933,161,2.206,162,2.206,163,1.868,164,2.997,165,1.993,166,1.797,167,2.767,168,2.02,169,1.993,170,2.146,171,2.933,172,3.156,173,2.273,174,3.493,175,2.206,176,3.156,177,1.702]],["component/1",[7,0.337,16,0.33]],["keyword/1",[]],["title/2-1",[6,13.93,82,16.858,106,17.495,178,21.651,179,19.464]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["keyword/2-1",[]],["title/2-2",[43,30.068,180,42.194]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["keyword/2-2",[]],["title/2-3",[30,23.794,93,21.199]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["keyword/2-3",[]],["title/2-4",[14,24.386,136,35.414]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["keyword/2-4",[]],["title/2-5",[6,15.43,82,18.673,106,19.378,181,22.524]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["keyword/2-5",[]],["title/2-6",[43,30.068,180,42.194]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["keyword/2-6",[]],["title/2-7",[30,23.794,93,21.199]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["keyword/2-7",[]],["title/2-8",[14,24.386,136,35.414]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["keyword/2-8",[]],["title/2",[6,19.662,82,23.794]],["name/2",[182,1.499]],["text/2",[0,2.538,2,2.693,6,2.653,7,1.26,11,1.682,14,1.89,15,4.056,16,2.239,17,2.586,19,1.487,21,3.42,22,3.577,26,2.135,27,2.889,28,2.087,29,1.92,30,3.21,31,1.511,33,3.182,38,1.511,43,2.33,44,1.97,50,2.06,57,2.586,58,3.714,59,1.97,60,1.699,64,1.607,65,1.524,66,0.823,75,1.65,82,2.08,83,3.088,84,3.943,86,2.426,93,2.763,95,1.871,96,2.538,103,3.632,104,1.789,105,2.23,106,3.277,108,2.538,109,1.536,110,3.632,111,2.368,116,3.27,119,2.587,120,1.83,122,2.418,123,2.23,124,1.873,125,0.923,131,3.163,136,2.745,137,3.879,139,0.736,140,0.907,142,2.154,146,0.891,147,0.995,149,1.21,153,0.862,159,1.844,164,1.789,168,1.589,175,1.175,178,3.129,179,2.813,181,3.105,183,4.93,184,3.175,185,2.45,186,3.819,187,1.562,188,2.087,189,2.087,190,2.087,191,1.873,192,1.562,193,1.562,194,1.873,195,2.087,196,2.154,197,2.897,198,2.186,199,1.861,200,1.294,201,2.06,202,1.474,203,1.751,204,0.995,205,1.83,206,2.54,207,5.205,208,1.751,209,2.418,210,2.693,211,3.009,212,2.154,213,5.205,214,2.23,215,1.92,216,3.175,217,3.251,218,5.304,219,5.046,220,2.317,221,2.418,222,2.026,223,4.91,224,1.92,225,3.208,226,3.632,227,4.033,228,2.586,229,3.208,230,5.205,231,3.294,232,2.096,233,2.317,234,3.27,235,3.64,236,2.317,237,1.97,238,3.088,239,2.531,240,2.693,241,3.088,242,1.65,243,3.495,244,2.67,245,1.789,246,1.398,247,3.495,248,4.675,249,3.632,250,1.97,251,3.581,252,2.06,253,1.938,254,2.154,255,2.412,256,2.23,257,2.693,258,2.54,259,2.418,260,2.693,261,1.441,262,2.693,263,2.693,264,2.693,265,2.693,266,2.693,267,1.789,268,2.54,269,3.208,270,2.54,271,2.897,272,2.693,273,2.317,274,2.54,275,2.23,276,1.619,277,2.154,278,1.061,279,3.495,280,2.317,281,1.97,282,1.25,283,2.026,284,1.21,285,2.154,286,1.038,287,1.403,288,1.25,289,1.175,290,2.693,291,2.54,292,2.54,293,2.54,294,1.562,295,1.681,296,1.681,297,1.681,298,1.861,299,1.294,300,1.25,301,1.038,302,1.403,303,1.114,304,1.016,305,0.891,306,1.294,307,1.038,308,1.562,309,3.809,310,1.681,311,3.55,312,1.016,313,0.923,314,1.403,315,2.418,316,1.061,317,1.562,318,1.789,319,1.294,320,1.061,321,1.143,322,2.693,323,1.143,324,1.114,325,0.891,326,1.562,327,1.681,328,1.861,329,1.681]],["component/2",[7,0.337,16,0.33]],["keyword/2",[]],["title/3-1",[17,29.339,82,20.925,85,37.105]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["keyword/3-1",[]],["title/3-2",[43,30.068,180,42.194]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["keyword/3-2",[]],["title/3-3",[30,23.794,93,21.199]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["keyword/3-3",[]],["title/3-4",[14,24.386,261,29.141]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["keyword/3-4",[]],["title/3-5",[14,19.137,82,18.673,83,31.27,278,29.036]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["keyword/3-5",[]],["title/3",[82,23.794,85,42.194]],["name/3",[330,1.499]],["text/3",[0,2.438,2,1.771,6,2.254,7,0.764,11,1.598,14,2.255,15,2.825,16,2.114,17,3.825,19,1.413,21,3.324,22,3.324,26,1.539,27,3.265,28,1.983,29,1.824,30,3.395,31,1.436,33,1.46,38,1.436,40,2.203,43,2.238,44,1.872,50,1.485,53,1.369,54,3.59,57,3.825,58,2.353,59,1.872,60,3.065,64,2.378,65,2.254,66,1.349,68,1.568,73,1.511,75,1.568,76,2.119,82,3.327,83,2.967,84,3.357,85,6.123,86,2.739,93,2.586,95,1.349,103,3.488,104,1.7,105,2.119,106,1.838,108,2.438,109,1.46,110,3.488,116,3.141,119,2.203,120,1.739,122,2.298,123,2.119,124,1.78,131,1.7,136,1.664,137,1.78,141,1.78,142,2.047,159,3.327,168,1.815,177,2.922,181,2.137,184,4.309,185,2.353,188,1.983,189,1.983,190,1.983,191,1.78,198,1.175,201,1.485,203,1.664,205,1.739,206,2.414,207,5.035,208,1.664,209,2.298,210,2.559,211,2.89,212,3.243,213,6.243,214,2.119,215,1.824,216,3.05,217,2.532,218,4.728,219,4.509,220,2.202,221,2.298,222,1.925,223,4.75,224,3.59,226,4.332,235,1.511,238,1.872,239,1.824,240,2.559,241,2.967,242,1.568,244,1.925,246,1.329,247,3.357,248,4.522,249,3.488,250,1.872,251,3.05,252,1.485,253,1.862,254,3.243,255,1.739,256,2.119,257,2.559,258,2.414,259,2.298,260,2.559,261,1.369,262,2.559,263,2.559,264,2.559,265,2.559,266,2.559,267,1.7,272,2.559,277,2.047,278,2.755,279,4.17,281,1.872,290,4.054,291,3.824,292,3.824,293,3.824,294,4.054,304,1.664,307,3.806,313,1.511,320,1.739,331,2.532,332,1.78,333,2.202,334,2.414,335,3.141,336,1.983,337,1.983,338,3.243,339,3.048,340,3.048,341,1.824,342,2.414,343,2.532,344,1.872,345,1.872,346,2.298,347,1.925,348,4.054,349,1.539,350,2.202,351,3.684,352,3.274,353,3.048,354,3.048,355,2.119,356,2.753,357,2.119,358,2.559,359,2.202,360,3.048,361,5.417,362,3.048,363,2.119,364,3.048,365,4.362,366,2.047,367,5.035,368,2.753,369,2.414,370,2.753,371,2.753,372,2.753]],["component/3",[7,0.337,16,0.33]],["keyword/3",[]],["title/4-1",[132,22.868,177,24.802,325,24.383,373,45.978]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["keyword/4-1",[]],["title/4-2",[7,8.919,16,8.75,132,24.476,325,17.045,374,19.427,375,21.298,376,19.031]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["keyword/4-2",[]],["title/4-3",[7,8.919,16,8.75,132,24.476,242,18.302,325,17.045,375,21.298,376,19.031]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["keyword/4-3",[]],["title/4",[325,36.01]],["name/4",[325,0.718]],["text/4",[1,3.601,2,3.279,6,2.516,7,1.324,9,3.547,10,3.013,11,2.77,12,2.947,13,3.336,14,2.731,15,3.422,16,1.299,21,3.539,25,2.884,27,2.483,30,3.045,38,2.489,50,2.574,82,2.664,86,1.746,93,3.063,94,3.436,95,2.337,96,2.667,102,2.77,106,2.765,111,2.206,119,3.314,130,4.684,168,3.121,178,2.489,179,3.516,181,3.214,183,3.547,185,2.574,188,3.436,189,3.436,190,3.436,191,3.085,198,2.037,204,2.825,219,3.539,233,3.816,243,3.673,246,3.166,247,5.05,249,3.816,261,2.373,301,2.947,309,4.462,313,2.619,337,5.399,343,2.77,344,3.245,377,6.56,378,5.282,379,5.282,380,5.282,381,3.245,382,4.771,383,3.816,384,6.003,385,4.771,386,2.77,387,3.162,388,3.245,389,4.771,390,3.547,391,3.436,392,3.013,393,3.983,394,3.816,395,6.098,396,5.246,397,4.771,398,4.771,399,4.435,400,4.435,401,3.436,402,4.771,403,4.435,404,2.947,405,3.983,406,4.435,407,4.435,408,4.435,409,4.435,410,4.435,411,4.771,412,4.435,413,4.771,414,4.183]],["component/4",[7,0.337,16,0.33]],["keyword/4",[]],["title/5",[415,51.371,416,48.906]],["name/5",[416,1.13]],["text/5",[6,2.81,7,0.888,14,2.042,16,2.155,21,3.217,22,3.217,27,2.878,30,2.715,48,3.923,50,2.646,57,4.769,60,1.197,62,5.172,64,3.367,65,3.192,66,3.275,68,3.807,75,4.951,83,2.177,86,3.064,96,1.789,143,2.177,144,2.693,154,1.789,159,2.928,163,1.895,164,5.715,168,1.332,170,4.056,177,1.726,191,2.069,201,3.889,204,3.959,208,4.041,211,3.952,228,1.822,252,3.889,253,2.854,261,1.592,276,1.789,283,2.238,289,3.43,313,1.757,323,4.056,331,1.858,336,3.533,338,2.379,381,2.177,417,2.672,418,2.975,419,4.301,420,3.533,421,4.77,422,3.2,423,5.229,424,5.964,425,2.806,426,5.347,427,4.905,428,2.559,429,7.914,430,3.2,431,4.559,432,2.238,433,3.43,434,4.301,435,2.975,436,2.379,437,3.2,438,2.672,439,2.672,440,3.2,441,3.533,442,2.305,443,5,444,2.672,445,2.559,446,3.923,447,4.559,448,3.2,449,2.975,450,3.2,451,1.935,452,3.2,453,2.806,454,2.069,455,2.806,456,2.463,457,2.672,458,3.2,459,2.559,460,3.2,461,2.672,462,3.2,463,2.463,464,3.2,465,2.806,466,1.895,467,3.2,468,2.463,469,2.975,470,2.559,471,2.069]],["component/5",[7,0.337,16,0.33]],["keyword/5",[]],["title/6-1",[243,39.658,261,25.626,472,43.008]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["keyword/6-1",[]],["title/6",[246,32.773]],["name/6",[246,0.653]],["text/6",[0,1.785,2,2.712,14,1.329,15,1.666,16,2.069,21,1.723,22,1.723,27,2.726,30,2.712,31,3.964,39,2.554,41,2.8,43,1.639,50,1.723,53,2.436,58,4.756,60,1.195,64,1.131,65,1.072,66,3.723,82,2.419,93,2.606,95,1.565,96,2.737,99,4.429,106,2.064,112,3.917,113,2.554,125,1.753,131,1.972,132,1.589,165,4.218,178,3.107,179,2.793,181,2.399,195,2.3,198,3.244,217,4.592,219,5.248,222,2.233,231,1.753,232,1.753,234,5.473,236,2.554,237,3.331,243,6.09,244,3.424,245,4.448,246,4.432,273,6.078,274,6.664,275,4.585,276,4.248,300,2.375,324,2.116,349,1.785,376,1.891,403,2.969,405,2.666,420,2.3,451,1.931,466,1.891,473,3.329,474,3.194,475,2.017,476,3.093,477,3.194,478,5.355,479,2.3,480,7.064,481,3.77,482,1.723,483,3.194,484,5.223,485,4.294,486,5.957,487,5.141,488,2.3,489,6.327,490,5.856,491,5.76,492,5.65,493,2.3,494,4.088,495,2.375,496,5.536,497,2.554,498,4.899,499,4.764,500,2.458,501,2.8,502,3.194,503,3.536,504,3.194,505,2.666,506,2.3,507,2.3,508,2.8,509,3.77,510,3.194,511,4.972,512,3.536]],["component/6",[7,0.337,16,0.33]],["keyword/6",[]],["title/7-1",[513,50.484]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["keyword/7-1",[]],["title/7-2",[178,26.874,179,24.159,514,29.339]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["keyword/7-2",[]],["title/7-3",[179,31.839]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["keyword/7-3",[]],["title/7-4",[386,39.415]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["keyword/7-4",[]],["title/7-5",[104,28.394,178,23.981,179,21.559,386,26.688]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["keyword/7-5",[]],["title/7-6",[475,37.001,515,33.362]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["keyword/7-6",[]],["title/7",[178,26.874,179,24.159,198,21.992]],["name/7",[516,1.499]],["text/7",[0,1.433,1,0.802,2,3.018,5,0.994,6,1.383,7,1.864,14,1.427,16,2.548,17,0.832,19,1.759,22,1.849,25,2.072,26,2.623,27,2.812,30,2.404,31,1.338,33,1.36,38,1.788,40,1.732,43,0.75,44,0.994,45,2.141,50,1.849,53,2.944,58,1.383,60,2.832,62,1.584,64,2.577,65,2.494,66,3.927,68,0.832,73,0.802,82,2.526,86,1.508,89,0.968,91,1.124,92,2.488,93,3.019,95,1.256,96,2.304,99,3.488,102,1.489,105,1.124,106,1.445,111,0.675,114,1.086,118,0.994,119,0.738,120,0.923,121,0.944,124,1.658,125,1.882,130,0.75,131,1.584,132,1.705,139,0.64,142,1.086,144,0.802,145,0.902,146,0.775,147,2.03,154,0.817,159,0.593,163,0.865,164,0.902,165,0.923,166,0.832,168,1.427,175,1.021,178,4.074,179,4.182,185,1.849,196,1.086,198,2.378,200,3.173,201,1.849,202,1.281,203,2.072,204,1.519,208,1.55,218,3.519,219,3.498,220,1.168,224,1.699,228,0.832,231,2.837,232,0.802,235,0.802,237,1.744,238,1.744,239,0.968,242,0.832,246,1.238,250,0.994,251,1.021,252,2.788,253,2.768,254,1.086,255,0.923,259,1.219,261,2.334,276,1.916,278,0.923,279,1.974,280,3.296,281,0.994,282,1.086,283,2.397,284,1.052,285,3.842,286,1.584,287,1.219,288,1.086,289,4.843,304,1.55,305,1.36,307,1.584,320,1.62,321,0.994,323,0.994,325,0.775,331,0.848,335,1.052,341,0.968,344,0.994,345,2.332,346,2.141,347,1.793,352,2.072,356,1.461,357,1.124,358,1.358,374,0.883,376,0.865,383,1.168,384,1.086,386,4.653,387,4.713,388,4.41,393,2.141,404,0.902,420,2.969,432,1.793,433,1.021,442,1.052,451,0.883,454,1.658,456,1.124,463,1.124,466,0.865,471,2.665,473,0.817,475,2.165,476,1.62,478,1.086,479,2.469,482,3.836,488,1.052,495,1.086,498,0.994,507,1.847,514,3.371,515,1.46,517,1.358,518,2.141,519,1.793,520,4.531,521,2.862,522,2.862,523,1.658,524,1.62,525,2.051,526,2.565,527,4.133,528,3.752,529,1.168,530,1.461,531,2.565,532,2.862,533,2.051,534,1.168,535,0.902,536,2.565,537,1.281,538,1.281,539,1.021,540,1.052,541,2.731,542,1.086,543,1.219,544,2.332,545,3.006,546,1.358,547,1.281,548,1.461,549,2.141,550,1.358,551,1.55,552,1.62,553,1.461,554,1.124,555,1.219,556,2.249,557,1.461,558,2.249,559,1.699,560,1.358,561,1.281,562,1.617,563,4.563,564,3.614,565,2.141,566,3.614,567,1.699,568,5.502,569,2.249,570,1.219,571,1.461,572,2.839,573,4.022,574,1.358,575,1.124,576,1.124,577,2.141,578,2.862,579,3.441,580,1.281,581,1.358,582,4.314,583,2.862,584,1.461,585,1.907,586,1.124,587,2.249,588,1.281,589,3.488,590,1.021,591,1.052,592,1.281,593,1.086,594,2.565,595,2.565,596,1.461,597,1.461,598,1.461,599,2.141,600,1.461,601,0.944,602,1.461,603,1.461,604,2.565,605,1.358,606,1.281,607,1.461,608,2.249,609,4.563,610,4.563,611,2.839,612,1.617,613,1.168,614,1.281,615,1.461,616,1.461,617,2.272,618,1.617,619,2.249,620,1.021,621,1.086,622,1.168,623,1.281,624,1.461,625,1.617,626,1.617,627,1.461,628,1.461,629,1.281,630,1.358,631,2.862,632,2.051,633,4.122,634,1.219,635,1.168,636,1.281,637,1.358,638,1.461,639,1.124,640,1.086,641,2.141,642,1.281,643,1.021,644,1.617,645,1.358,646,1.168,647,2.384,648,1.461,649,1.461,650,1.358,651,1.168,652,1.281,653,1.461,654,1.461,655,1.461]],["component/7",[7,0.337,16,0.33]],["keyword/7",[]],["title/8-1",[198,25.008,542,43.56]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["keyword/8-1",[]],["title/8-2",[86,21.435,111,27.089]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["keyword/8-2",[]],["title/8-3",[2,23.794,497,30.559]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["keyword/8-3",[]],["title/8",[106,21.715,181,25.24,198,21.992]],["name/8",[656,1.354]],["text/8",[2,3.646,6,2.427,7,2.176,16,2.444,19,2.289,21,2.406,30,2.542,31,2.327,33,2.365,38,4.091,50,3.902,53,3.114,58,3.377,60,2.706,82,1.811,86,2.29,89,2.956,106,3.481,111,2.895,112,3.567,119,2.253,131,2.755,132,2.219,139,1.954,147,2.641,165,2.817,168,3.264,181,4.047,194,2.884,198,3.526,231,2.449,232,3.971,235,2.449,241,3.034,284,3.212,302,3.723,309,3.034,311,5.819,312,2.696,313,2.449,314,3.723,315,6.038,316,3.954,317,4.146,318,3.866,319,4.819,320,2.817,321,3.034,322,7.29,323,3.034,324,2.956,325,3.32,326,4.146,337,3.212,343,2.589,352,2.696,390,3.316,394,5.007,454,2.884,473,3.499,476,2.817,482,3.377,497,4.308,514,2.54,518,3.723,523,2.884,533,3.567,542,5.378,552,2.817,559,2.956,586,3.433,588,3.911,657,5.226,658,4.461,659,3.433,660,5.819,661,4.146,662,4.461,663,4.146,664,3.567,665,4.461,666,4.938,667,3.212,668,3.911,669,4.146,670,4.938,671,4.938,672,4.938,673,3.433]],["component/8",[7,0.337,16,0.33]],["keyword/8",[]],["title/9-1",[6,13.93,106,17.495,178,21.651,179,19.464,198,17.718]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["keyword/9-1",[]],["title/9-2",[6,15.43,106,19.378,181,22.524,198,19.625]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["keyword/9-2",[]],["title/9-3",[106,19.378,168,19.137,181,22.524,198,19.625]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["keyword/9-3",[]],["title/9",[391,48.901]],["name/9",[391,0.975]],["text/9",[2,2.292,5,3.118,6,2.663,7,2.128,8,1.736,16,2.221,19,1.505,21,4.137,22,3.96,25,1.772,27,3.389,30,1.191,33,1.555,40,4.121,44,1.994,50,3.735,53,2.807,60,3.122,64,3.01,65,2.853,66,1.436,68,3.634,73,3.098,82,1.191,86,2.533,92,2.431,95,1.436,97,2.257,106,2.918,111,1.356,119,1.481,120,1.852,121,1.896,126,3.941,130,2.896,132,2.807,136,1.772,139,3.215,141,1.896,144,1.61,145,1.811,146,1.555,147,1.736,159,1.191,165,1.852,166,1.67,168,2.656,173,3.301,177,2.473,178,4,179,3.247,181,3.126,184,2.05,194,2.964,195,2.112,196,2.18,198,3.561,201,1.582,203,2.771,205,1.852,215,1.943,219,3.044,245,2.831,251,2.05,252,1.582,253,3.388,276,1.639,278,1.852,304,2.771,305,2.431,313,1.61,320,1.852,324,1.943,336,3.301,341,1.943,344,1.994,349,1.639,350,2.345,352,1.772,355,2.257,374,1.772,375,1.943,386,2.661,390,2.18,425,2.571,443,1.852,444,2.448,466,2.714,471,4.476,473,1.639,476,2.895,481,2.257,488,4.595,493,2.112,500,2.257,513,3.408,514,1.67,521,2.448,524,1.852,527,2.345,528,3.666,532,4.711,535,2.831,539,2.05,540,2.112,542,4.196,543,3.826,549,3.826,601,1.896,643,2.05,659,2.257,660,5.245,663,2.726,667,2.112,674,2.18,675,2.257,676,2.932,677,2.571,678,4.584,679,2.18,680,3.666,681,2.257,682,2.932,683,2.932,684,2.932,685,2.448,686,2.571,687,2.726,688,2.571,689,2.932,690,2.726,691,2.448,692,2.932,693,2.18,694,2.932,695,2.448,696,2.932,697,2.932,698,2.345,699,3.246,700,3.246,701,2.726,702,2.726,703,1.943,704,2.726,705,1.994,706,2.571,707,2.112,708,3.246,709,2.345,710,2.345,711,2.18,712,2.112,713,2.257,714,2.726,715,2.448,716,2.571,717,2.932,718,2.726]],["component/9",[7,0.337,16,0.33]],["keyword/9",[]],["title/10-1",[200,52.265]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["keyword/10-1",[]],["title/10-2",[188,29.894,189,29.894,190,29.894,191,26.837,414,36.396]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["keyword/10-2",[]],["title/10-3",[719,67.902]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["keyword/10-3",[]],["title/10",[15,26.874,18,39.658,313,28.284]],["name/10",[720,1.499]],["text/10",[2,2.964,6,1.877,7,1.058,15,3.455,16,1.038,17,3.185,18,4.305,26,2.131,27,2.762,28,2.746,29,2.526,31,1.989,40,2.825,52,3.049,53,2.782,57,2.171,58,3.017,60,2.73,62,4.507,64,1.35,65,2.223,73,2.093,75,2.171,82,2.272,83,2.593,85,2.746,86,1.395,95,1.868,102,2.213,104,2.354,106,3.275,118,2.593,119,1.926,128,2.935,136,2.304,137,2.465,145,2.354,161,2.666,162,3.911,168,2.328,177,3.017,178,3.455,179,3.644,188,5.85,189,4.771,190,4.771,191,5.251,198,2.387,200,4.305,202,3.343,204,4.321,222,2.666,231,3.637,241,3.804,242,4.155,246,1.84,250,2.593,261,2.782,278,2.408,301,2.354,307,5.016,312,2.304,313,4.006,318,2.354,332,2.465,343,4.236,345,2.593,352,2.304,365,5.593,374,2.304,376,3.923,383,3.049,386,2.213,387,2.526,388,2.593,414,3.343,423,3.343,454,2.465,466,2.257,479,4.028,580,4.904,591,2.746,593,2.835,598,3.813,621,2.835,680,4.473,693,2.835,705,2.593,719,3.813,721,2.526,722,6.192,723,2.666,724,5.199,725,6.192,726,6.192,727,4.221,728,4.221,729,5.809,730,4.221,731,4.221,732,5.099,733,2.746,734,4.221,735,4.221,736,6.192,737,6.192,738,5.53,739,3.343,740,3.813,741,3.813,742,4.221,743,3.813,744,4.221,745,4.221,746,4.221,747,5.593,748,4.221,749,4.221,750,4.221,751,4.221,752,4.221,753,4.221,754,2.835,755,3.544,756,4.221,757,3.813]],["component/10",[7,0.337,16,0.33]],["keyword/10",[]],["title/11-1",[108,25.699,251,32.147,252,24.802,253,19.625]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["keyword/11-1",[]],["title/11",[30,20.925,51,34.141,248,43.008]],["name/11",[758,1.499]],["text/11",[1,3.71,4,4.159,9,3.705,14,2.813,16,2.616,27,2.557,30,3.681,38,2.599,51,3.302,53,2.478,62,4.173,68,2.837,82,3.599,93,2.445,96,2.785,102,3.922,108,5.282,109,4.957,119,2.517,120,3.147,205,3.147,232,2.735,246,2.405,247,5.201,248,6.863,249,3.985,251,5.748,252,4.636,253,3.668,254,3.705,255,4.267,256,3.835,258,4.369,276,3.777,277,5.024,306,3.835,375,3.302,426,3.985,478,3.705,479,3.588,541,3.302,554,3.835,577,4.159,659,3.835,759,3.302,760,5.516,761,4.983,762,4.983,763,4.159,764,4.983,765,5.516,766,3.705,767,7.668,768,5.516,769,5.516,770,5.516]],["component/11",[7,0.337,16,0.33]],["keyword/11",[]],["title/12",[14,24.386,497,30.559]],["name/12",[771,1.354]],["text/12",[1,2.991,6,2.86,7,1.99,12,3.364,14,2.268,16,1.953,19,2.796,24,3.924,27,3.035,30,2.213,33,2.889,52,4.357,53,2.71,60,2.038,62,3.364,72,4.548,82,2.913,86,2.624,89,3.61,95,2.669,111,2.519,119,2.752,121,3.522,130,2.796,139,3.142,140,2.939,141,3.522,143,3.705,144,2.991,154,3.045,158,4.777,159,3.596,163,3.226,164,3.364,166,4.084,167,4.777,168,2.268,169,4.53,170,3.705,203,3.293,204,4.247,224,3.61,228,3.102,231,2.991,235,2.991,276,3.045,278,3.441,304,3.293,305,2.889,307,3.364,352,3.293,404,3.364,421,4.357,453,4.777,468,4.193,482,2.939,519,3.809,601,3.522,772,4.357,773,5.448,774,5.064,775,4.777,776,7.453,777,6.031,778,5.448,779,6.031,780,4.777,781,4.777,782,4.548,783,6.031,784,5.448,785,3.809,786,4.051,787,4.357,788,5.064]],["component/12",[7,0.337,16,0.33]],["keyword/12",[]],["title/13-1",[43,30.068,180,42.194]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["keyword/13-1",[]],["title/13-2",[14,24.386,136,35.414]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["keyword/13-2",[]],["title/13-3",[86,16.821,111,21.258,392,29.036,789,35.39]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["keyword/13-3",[]],["title/13-4",[86,16.821,111,21.258,183,34.184,789,35.39]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["keyword/13-4",[]],["title/13-5",[1,22.788,2,16.858,82,16.858,95,20.335,404,25.635]],["name/13-5",[]],["text/13-5",[]],["component/13-5",[]],["keyword/13-5",[]],["title/13",[1,32.163,82,23.794]],["name/13",[790,1.499]],["text/13",[0,1.134,1,2.82,2,2.324,6,1.141,7,1.426,8,1.202,9,1.509,11,1.178,14,2.985,15,2.984,16,1.878,17,1.156,19,1.745,26,2.454,27,2.947,30,2.912,31,2.68,33,2.724,38,3.229,40,1.025,43,1.041,51,1.345,53,1.009,57,1.156,58,2.771,60,2.847,64,1.554,65,1.473,66,0.994,68,1.937,70,1.623,73,1.114,82,3.284,83,2.313,86,3.291,88,1.779,89,1.345,91,1.562,92,1.804,93,2.379,94,1.461,95,3.222,100,1.886,104,2.1,106,1.433,108,2.871,109,1.076,111,3.189,121,1.312,126,1.253,128,1.562,132,1.009,135,2.449,136,3.458,137,2.199,145,1.253,159,2.671,165,2.148,166,2.925,167,2.982,168,0.845,177,1.835,178,1.058,181,0.994,183,4.603,184,3.07,185,1.835,198,2.193,201,1.095,203,1.227,205,4.153,211,2.254,212,1.509,214,1.562,215,1.345,216,3.592,217,2.982,218,5.018,219,4.927,223,2.982,224,2.254,226,3.511,227,3.162,228,2.5,231,4.677,232,1.114,235,3.399,236,1.623,237,1.38,238,1.38,241,2.313,243,1.562,244,1.419,245,1.253,246,2.119,247,1.562,250,1.38,251,3.07,252,1.835,253,2.193,255,1.282,261,1.009,268,1.779,270,4.504,273,3.511,276,1.134,278,2.773,283,1.419,286,3.173,289,1.419,291,1.779,292,1.779,293,1.779,306,2.618,313,1.114,318,2.1,320,1.282,324,2.254,331,1.178,332,1.312,335,1.461,338,1.509,341,2.254,343,1.974,344,1.38,352,1.227,355,1.562,359,1.623,361,3.401,367,1.886,381,1.38,392,3.244,395,1.886,396,1.623,403,4.081,404,2.711,405,1.694,406,1.886,407,1.886,408,1.886,409,1.886,410,1.886,428,1.623,436,1.509,442,3.162,451,1.227,459,2.72,471,1.312,476,3.244,482,1.835,489,4.951,491,1.623,493,1.461,494,5.168,496,3.161,497,1.774,498,2.313,499,1.623,507,1.461,559,1.345,577,1.694,585,1.509,592,1.779,593,1.509,674,1.509,685,2.839,686,2.982,703,2.254,704,1.886,723,1.419,757,2.029,761,2.029,762,2.029,766,1.509,774,1.886,775,5.766,776,1.886,787,1.623,789,3.379,791,2.247,792,2.247,793,2.029,794,5.721,795,2.247,796,3.765,797,2.247,798,3.161,799,2.029,800,2.247,801,2.247,802,1.886,803,2.247,804,2.247,805,2.247,806,4.776,807,2.247,808,1.694,809,1.886,810,2.247,811,2.247,812,1.886,813,3.665,814,2.247,815,1.886,816,2.029,817,4.39,818,3.401,819,1.312,820,1.779,821,3.849,822,1.694,823,1.694,824,1.886,825,1.886,826,1.694,827,3.401,828,3.161,829,3.401,830,4.39,831,3.401,832,3.161,833,3.765,834,2.029,835,3.765,836,2.247,837,2.247,838,2.247,839,2.029,840,1.623,841,1.779,842,2.029,843,2.029,844,4.081,845,1.694,846,1.694]],["component/13",[7,0.337,16,0.33]],["keyword/13",[]],["title/14-1",[27,17.4,40,23.225,253,19.625,678,45.978]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["keyword/14-1",[]],["title/14-2",[6,22.787]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["keyword/14-2",[]],["title/14-3",[6,17.291,168,21.445,351,35.042]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["keyword/14-3",[]],["title/14-4",[159,20.925,332,33.31,349,28.799]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["keyword/14-4",[]],["title/14-5",[159,23.794,332,37.879]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["keyword/14-5",[]],["title/14-6",[6,15.43,168,19.137,349,25.699,351,31.27]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["keyword/14-6",[]],["title/14-7",[159,20.925,332,33.31,349,28.799]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["keyword/14-7",[]],["title/14-8",[159,23.794,332,37.879]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["keyword/14-8",[]],["title/14-9",[27,17.4,40,23.225,253,19.625,488,33.112]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["keyword/14-9",[]],["title/14-10",[6,22.787]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["keyword/14-10",[]],["title/14-11",[6,17.291,168,21.445,351,35.042]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["keyword/14-11",[]],["title/14-12",[159,20.925,332,33.31,349,28.799]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["keyword/14-12",[]],["title/14-13",[159,23.794,332,37.879]],["name/14-13",[]],["text/14-13",[]],["component/14-13",[]],["keyword/14-13",[]],["title/14-14",[6,15.43,168,19.137,349,25.699,351,31.27]],["name/14-14",[]],["text/14-14",[]],["component/14-14",[]],["keyword/14-14",[]],["title/14-15",[159,20.925,332,33.31,349,28.799]],["name/14-15",[]],["text/14-15",[]],["component/14-15",[]],["keyword/14-15",[]],["title/14-16",[159,23.794,332,37.879]],["name/14-16",[]],["text/14-16",[]],["component/14-16",[]],["keyword/14-16",[]],["title/14",[58,31.605,82,23.794]],["name/14",[82,0.55]],["text/14",[1,1.005,2,1.953,6,2.632,7,1.628,8,1.084,14,1.695,15,1.626,16,2.402,17,4.732,19,0.94,27,3.34,30,1.953,33,2.55,38,2.124,40,3.475,54,1.213,57,2.738,58,1.682,60,2.935,64,2.435,65,2.308,66,3.49,75,1.043,79,1.605,82,3.713,84,1.409,85,4.51,86,2.87,92,2.86,95,1.528,96,2.687,102,1.81,106,3.784,109,0.971,119,0.925,121,4.866,125,1.005,126,1.131,139,2.362,140,1.682,144,3.221,149,2.933,153,2.09,154,1.023,159,2.794,162,2.18,168,2.442,177,2.909,178,3.828,179,3.608,181,3.909,185,0.988,186,4.808,187,4.469,188,4.51,189,4.51,190,4.51,191,4.049,192,2.898,193,2.898,194,1.184,198,3.457,200,4.151,201,3.557,203,2.461,204,1.084,205,3.405,208,1.107,239,3.573,246,1.505,250,1.245,252,2.909,253,3.213,255,2.572,261,1.551,279,2.4,281,2.77,297,1.831,301,2.515,302,3.399,303,2.698,304,2.461,305,3.112,306,3.135,307,3.867,308,1.702,313,2.236,321,1.245,331,1.063,332,2.016,333,1.464,334,1.605,343,3.13,347,1.28,348,5.454,350,2.494,351,3.667,352,2.461,355,2.4,357,1.409,370,3.118,371,3.118,381,1.245,384,3.028,386,2.791,387,2.698,388,2.77,390,1.361,395,1.702,396,1.464,420,1.319,432,2.847,443,1.156,456,1.409,471,2.016,473,2.276,475,1.969,492,3.028,500,2.4,505,2.603,515,1.776,520,1.605,523,2.016,528,2.494,539,1.28,540,1.319,541,1.213,551,2.461,552,2.572,554,1.409,556,1.605,559,2.698,567,1.213,590,1.28,591,2.933,621,2.318,640,1.361,681,1.409,693,1.361,698,1.464,701,1.702,705,1.245,706,1.605,707,2.933,711,1.361,772,2.494,840,1.464,847,1.831,848,2.027,849,2.494,850,3.118,851,1.464,852,1.831,853,2.027,854,1.831,855,1.831,856,1.409,857,1.831,858,1.605,859,1.605,860,3.118,861,3.118,862,2.494,863,1.702,864,1.831,865,1.831,866,1.702,867,4.808,868,1.605,869,2.734,870,4.808,871,1.605,872,1.605,873,1.702]],["component/14",[7,0.337,16,0.33]],["keyword/14",[]],["title/15-1",[242,33.362,391,42.194]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["keyword/15-1",[]],["title/15-2",[399,47.889,415,45.175,874,51.523]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["keyword/15-2",[]],["title/15-3",[875,64.863,876,46.855]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["keyword/15-3",[]],["title/15-4",[153,26.441,376,30.507,877,41.204]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["keyword/15-4",[]],["title/15-5",[60,19.278,878,51.523,879,41.204]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["keyword/15-5",[]],["title/15-6",[175,32.147,879,36.769,880,45.978,881,40.313]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["keyword/15-6",[]],["title/15-7",[153,23.596,882,45.978,883,45.978,884,45.978]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["keyword/15-7",[]],["title/15-8",[60,17.203,153,23.596,885,45.978,886,40.313]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["keyword/15-8",[]],["title/15-9",[16,9.462,68,19.791,153,26.799,887,34.756,888,30.474,889,27.795]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["keyword/15-9",[]],["title/15-10",[232,28.284,613,41.204,890,51.523]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["keyword/15-10",[]],["title/15-11",[60,15.532,153,21.303,232,22.788,891,41.51,892,36.396]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["keyword/15-11",[]],["title/15-12",[153,26.441,303,34.141,893,51.523]],["name/15-12",[]],["text/15-12",[]],["component/15-12",[]],["keyword/15-12",[]],["title/15-13",[153,19.416,303,25.07,551,22.869,894,37.834,895,37.834,896,31.581]],["name/15-13",[]],["text/15-13",[]],["component/15-13",[]],["keyword/15-13",[]],["title/15-14",[24,27.247,153,19.416,590,26.453,897,37.834,898,33.173,899,33.173]],["name/15-14",[]],["text/15-14",[]],["component/15-14",[]],["keyword/15-14",[]],["title/15-15",[16,12.517,139,20.139,374,27.791,673,35.39]],["name/15-15",[]],["text/15-15",[]],["component/15-15",[]],["keyword/15-15",[]],["title/15-16",[139,18.182,673,31.951,900,38.583,901,36.396,902,36.396]],["name/15-16",[]],["text/15-16",[]],["component/15-16",[]],["keyword/15-16",[]],["title/15-17",[126,31.818,903,51.523,904,51.523]],["name/15-17",[]],["text/15-17",[]],["component/15-17",[]],["keyword/15-17",[]],["title/15-18",[877,41.204,905,51.523,906,45.175]],["name/15-18",[]],["text/15-18",[]],["component/15-18",[]],["keyword/15-18",[]],["title/15-19",[6,11.664,65,11.664,139,15.224,140,18.748,733,25.03,907,32.305,908,17.556]],["name/15-19",[]],["text/15-19",[]],["component/15-19",[]],["keyword/15-19",[]],["title/15-20",[159,15.365,169,23.893,170,25.732,909,37.834,910,30.256,911,30.256]],["name/15-20",[]],["text/15-20",[]],["component/15-20",[]],["keyword/15-20",[]],["title/15-21",[6,11.664,27,13.153,65,11.664,733,25.03,912,34.756,913,29.012,914,29.012]],["name/15-21",[]],["text/15-21",[]],["component/15-21",[]],["keyword/15-21",[]],["title/15-22",[27,14.318,145,23.364,159,15.365,166,21.544,915,37.834,916,30.256]],["name/15-22",[]],["text/15-22",[]],["component/15-22",[]],["keyword/15-22",[]],["title/15-23",[159,15.365,169,23.893,366,28.129,917,37.834,918,33.173,919,31.581]],["name/15-23",[]],["text/15-23",[]],["component/15-23",[]],["keyword/15-23",[]],["title/15-24",[159,15.365,164,23.364,169,23.893,366,28.129,721,25.07,920,37.834]],["name/15-24",[]],["text/15-24",[]],["component/15-24",[]],["keyword/15-24",[]],["title/15-25",[27,12.163,161,22.473,162,22.473,401,23.147,908,16.235,921,32.141,922,28.181,923,28.181]],["name/15-25",[]],["text/15-25",[]],["component/15-25",[]],["keyword/15-25",[]],["title/15-26",[2,10.649,60,9.811,64,9.282,65,8.8,66,12.846,299,20.184,335,18.884,497,13.677,908,13.246,924,26.222,925,16.953]],["name/15-26",[]],["text/15-26",[]],["component/15-26",[]],["keyword/15-26",[]],["title/15-27",[6,11.664,60,13.004,125,19.08,363,26.752,466,20.579,908,17.556,926,34.756]],["name/15-27",[]],["text/15-27",[]],["component/15-27",[]],["keyword/15-27",[]],["title/15-28",[25,22.869,43,19.416,125,20.769,482,20.409,908,19.111,927,37.834]],["name/15-28",[]],["text/15-28",[]],["component/15-28",[]],["keyword/15-28",[]],["title/15-29",[211,25.07,544,25.732,551,22.869,908,19.111,928,37.834,929,33.173]],["name/15-29",[]],["text/15-29",[]],["component/15-29",[]],["keyword/15-29",[]],["title/15-30",[19,16.495,64,11.378,65,10.786,276,17.965,401,23.147,544,21.86,908,16.235,930,32.141]],["name/15-30",[]],["text/15-30",[]],["component/15-30",[]],["keyword/15-30",[]],["title/15-31",[60,12.026,163,19.031,307,19.849,341,21.298,523,20.779,908,16.235,925,20.779,931,32.141]],["name/15-31",[]],["text/15-31",[]],["component/15-31",[]],["keyword/15-31",[]],["title/15-32",[10,21.949,169,21.949,305,18.432,712,25.03,713,26.752,908,17.556,932,34.756]],["name/15-32",[]],["text/15-32",[]],["component/15-32",[]],["keyword/15-32",[]],["title/15-33",[217,34.009,933,58.589]],["name/15-33",[]],["text/15-33",[]],["component/15-33",[]],["keyword/15-33",[]],["title/15-34",[228,33.362,934,58.589]],["name/15-34",[]],["text/15-34",[]],["component/15-34",[]],["keyword/15-34",[]],["title/15-35",[10,20.298,146,17.045,204,19.031,305,17.045,343,18.657,732,24.739,925,20.779,935,32.141]],["name/15-35",[]],["text/15-35",[]],["component/15-35",[]],["keyword/15-35",[]],["title/15-36",[10,20.298,60,12.026,64,11.378,65,10.786,146,17.045,305,17.045,936,32.141,937,25.704]],["name/15-36",[]],["text/15-36",[]],["component/15-36",[]],["keyword/15-36",[]],["title/15-37",[108,17.965,109,17.045,712,23.147,713,24.739,908,16.235,938,32.141,939,23.896,940,23.896]],["name/15-37",[]],["text/15-37",[]],["component/15-37",[]],["keyword/15-37",[]],["title/15-38",[60,11.184,64,10.581,65,10.031,108,16.708,109,15.852,146,15.852,937,23.905,939,22.224,941,29.892]],["name/15-38",[]],["text/15-38",[]],["component/15-38",[]],["keyword/15-38",[]],["title/15-39",[60,12.026,108,17.965,109,17.045,146,17.045,154,17.965,939,23.896,942,32.141,943,28.181]],["name/15-39",[]],["text/15-39",[]],["component/15-39",[]],["keyword/15-39",[]],["title/15-40",[108,21.147,109,20.064,146,20.064,589,28.129,940,28.129,944,37.834]],["name/15-40",[]],["text/15-40",[]],["component/15-40",[]],["keyword/15-40",[]],["title/15-41",[551,22.869,721,25.07,763,31.581,908,19.111,945,37.834,946,31.581]],["name/15-41",[]],["text/15-41",[]],["component/15-41",[]],["keyword/15-41",[]],["title/15-42",[114,25.84,139,15.224,908,17.556,947,34.756,948,34.756,949,34.756,950,30.474]],["name/15-42",[]],["text/15-42",[]],["component/15-42",[]],["keyword/15-42",[]],["title/15-43",[62,28.394,232,25.24,300,34.184,316,29.036]],["name/15-43",[]],["text/15-43",[]],["component/15-43",[]],["keyword/15-43",[]],["title/15",[139,22.568,140,27.793,141,33.31]],["name/15",[139,0.593]],["text/15",[0,1.261,1,0.217,2,2.302,5,0.269,6,2.685,7,1.121,8,1.618,10,1.26,11,1.833,12,0.244,14,0.317,15,0.206,16,2.165,18,0.304,19,1.816,21,0.595,22,0.411,24,0.549,25,2.027,26,0.221,27,2.771,30,1.703,31,0.397,33,1.675,36,0.636,38,0.397,39,0.609,40,3.027,43,1.515,44,1.168,47,1.884,48,1.136,50,0.926,51,2.572,53,1.847,54,0.941,55,0.708,56,0.33,57,2.831,58,0.595,59,0.966,60,3.321,62,1.232,64,2.147,65,2.715,66,2.435,68,3.177,73,1.734,75,1.425,76,1.536,82,1.871,86,1.227,89,0.941,92,1.327,94,0.285,95,0.841,96,1.398,97,0.586,99,0.82,102,0.824,104,0.47,106,0.321,107,1.978,108,2.714,109,2.51,111,0.183,114,1.86,118,0.75,119,0.717,120,1.726,121,1.11,123,0.304,124,0.492,125,2.96,126,1.545,128,0.304,130,1.024,132,0.379,133,0.636,134,0.92,135,0.549,137,1.459,139,2.624,140,1.35,142,0.566,143,1.357,144,2.039,145,1.061,146,2.695,147,1.182,148,0.849,149,1.023,153,4.057,154,1.528,155,3.5,156,0.346,159,1.923,161,1.578,162,2.064,163,1.182,166,0.434,168,1.473,169,3.066,170,2.007,173,0.285,175,1.749,177,1.909,178,0.206,180,0.285,181,0.373,185,0.766,191,0.492,195,0.549,196,0.294,201,1.704,203,2.442,204,2.568,205,0.481,208,1.784,209,0.33,211,2.778,212,1.484,214,0.586,215,0.731,216,0.771,217,0.64,218,1.425,219,3.772,222,0.771,224,0.731,228,0.628,231,2.131,232,1.943,234,0.794,235,1.095,237,0.966,238,1.168,239,0.731,241,0.518,242,0.225,245,0.47,246,0.686,250,0.966,252,3.349,253,0.963,255,1.085,261,2.226,267,0.244,275,1.322,276,1.528,278,1.994,282,1.484,283,0.993,284,0.794,286,0.244,288,0.294,289,0.276,299,1.322,300,1.484,301,2.071,303,2.345,304,0.46,305,3.521,307,2.294,309,0.518,312,0.666,313,0.217,314,0.33,315,0.33,316,0.25,318,1.232,319,0.304,320,1.085,321,0.518,324,0.262,325,0.911,331,1.587,333,0.316,334,0.346,335,2.795,336,0.794,337,0.549,341,1.495,342,0.668,343,2.434,344,0.518,345,0.269,346,0.33,347,0.276,349,0.616,355,0.849,359,0.316,363,2.431,366,1.484,369,0.668,374,0.239,381,0.75,384,0.566,401,3.019,415,0.668,417,0.636,419,1.245,421,0.316,426,0.316,428,0.882,432,0.533,433,0.276,434,0.346,436,0.294,438,0.33,439,0.92,442,0.285,443,2.451,445,0.609,446,0.882,451,1.038,457,1.666,459,0.316,465,0.967,466,3.303,468,0.586,470,0.316,471,1.11,472,0.33,473,1.65,476,1.726,478,2.032,481,0.304,482,2.18,485,0.346,487,1.737,488,0.549,489,2.186,490,6.547,492,0.82,493,1.968,494,1.186,496,0.367,497,2.262,500,0.304,501,1.245,505,0.33,506,0.794,507,0.549,509,0.304,511,1.186,513,0.566,515,0.434,517,0.367,519,0.533,522,0.33,523,0.713,524,2.91,525,1.805,527,0.609,533,0.316,534,0.316,535,0.681,537,0.346,538,2.588,539,2.064,540,2.675,541,0.505,543,0.33,544,1.535,545,0.346,546,1.32,547,0.668,550,1.596,551,4.492,552,0.897,554,1.322,555,0.92,559,0.505,565,0.636,567,1.658,583,0.33,585,0.82,589,0.294,590,2.597,591,1.023,593,0.294,601,0.918,606,1.978,608,0.967,613,0.316,619,0.668,620,0.276,621,3.52,622,1.596,623,0.346,635,0.316,636,0.668,639,0.849,641,0.33,642,0.346,643,0.993,645,0.367,646,0.316,651,0.609,652,0.346,657,0.92,659,0.304,667,0.549,668,0.967,669,0.708,673,3.912,674,0.294,677,0.346,679,2.194,685,0.636,691,0.33,693,0.294,695,0.636,698,0.316,702,0.708,703,0.262,705,0.966,707,0.285,709,0.316,710,0.316,711,2.762,712,1.023,713,2.272,721,0.941,723,0.771,724,0.367,732,2.431,733,3.019,738,0.33,739,0.967,754,0.294,759,1.658,763,1.186,766,0.294,772,0.316,780,0.668,782,0.33,785,0.771,786,0.566,787,1.373,789,0.304,802,0.708,806,0.33,812,1.025,813,0.33,820,0.346,823,0.636,826,0.636,840,0.609,844,1.32,845,0.92,849,2.525,851,0.609,858,2.194,862,1.136,863,3.117,868,1.245,869,1.506,871,1.75,872,0.346,876,0.316,877,0.609,879,0.316,881,1.506,886,0.668,888,0.668,889,2.001,892,0.967,896,1.186,898,0.346,899,0.346,901,1.245,902,1.506,906,0.668,908,0.717,910,0.316,911,1.136,913,1.884,914,0.92,916,0.316,918,0.668,919,2.282,922,0.668,923,1.978,925,2.71,929,1.245,937,1.136,939,1.056,940,1.277,943,0.668,946,0.33,950,1.75,951,0.395,952,1.103,953,0.395,954,3.123,955,2.326,956,0.367,957,1.506,958,1.737,959,1.182,960,3.289,961,1.103,962,1.75,963,1.103,964,6.065,965,1.42,966,0.395,967,1.717,968,0.395,969,0.762,970,1.103,971,0.367,972,0.395,973,0.395,974,0.395,975,0.395,976,2.502,977,0.762,978,1.103,979,1.103,980,0.762,981,0.346,982,1.103,983,0.668,984,0.438,985,0.438,986,0.438,987,0.395,988,0.92,989,0.395,990,0.668,991,0.346,992,2.541,993,0.367,994,1.75,995,0.346,996,0.367,997,1.625,998,1.103,999,2.682,1000,0.395,1001,0.395,1002,0.395,1003,0.367,1004,0.395,1005,0.762,1006,0.395,1007,0.668,1008,0.367,1009,0.395,1010,0.395,1011,1.103,1012,0.668,1013,0.762,1014,0.367,1015,0.762,1016,0.395,1017,3.714,1018,0.395,1019,2.952,1020,0.395,1021,1.855,1022,0.762,1023,0.367,1024,0.395,1025,0.395,1026,0.395,1027,0.395,1028,0.395,1029,0.395,1030,0.762,1031,0.762,1032,0.762,1033,0.762,1034,1.025,1035,0.762,1036,0.762,1037,1.103,1038,1.103,1039,0.762,1040,0.395,1041,1.42,1042,0.762,1043,0.762,1044,0.395,1045,0.395,1046,0.395,1047,1.103,1048,1.42,1049,0.395,1050,1.103,1051,0.395,1052,0.92,1053,0.762,1054,0.395,1055,0.395,1056,0.762,1057,0.395,1058,0.395,1059,0.708,1060,0.882,1061,0.395,1062,0.395,1063,0.395,1064,0.395,1065,0.395,1066,0.395,1067,1.855,1068,0.708,1069,1.103,1070,0.304,1071,0.395,1072,0.395,1073,0.395,1074,0.708,1075,0.708,1076,3.353,1077,0.395,1078,2.257,1079,0.708,1080,0.395,1081,0.762,1082,1.596,1083,1.596,1084,0.762,1085,0.395,1086,0.395,1087,0.395,1088,0.395,1089,0.395,1090,1.717,1091,0.395,1092,0.395,1093,0.708,1094,1.103,1095,1.484,1096,0.395,1097,1.995,1098,2.326,1099,0.708,1100,1.103,1101,0.395,1102,0.609,1103,0.395,1104,0.395,1105,1.103,1106,0.346,1107,1.596,1108,0.762,1109,0.762,1110,1.42,1111,0.395,1112,1.103,1113,0.395,1114,0.762,1115,1.42,1116,0.762,1117,1.32,1118,1.103,1119,1.536,1120,0.395,1121,0.762,1122,0.395,1123,0.395,1124,0.762,1125,0.395,1126,1.103,1127,0.25,1128,0.395,1129,1.717,1130,0.395,1131,0.762,1132,1.103,1133,0.395,1134,0.395,1135,1.103,1136,1.103,1137,0.395,1138,0.395,1139,0.395,1140,0.395,1141,0.395,1142,0.395,1143,0.395,1144,0.395,1145,0.395,1146,0.395,1147,0.395,1148,0.395,1149,0.395,1150,0.395,1151,0.609,1152,0.762,1153,0.367,1154,0.762,1155,0.395,1156,0.967,1157,0.395,1158,0.395,1159,0.395,1160,2.733,1161,0.395,1162,2.733,1163,1.103,1164,1.103,1165,0.762,1166,0.762,1167,0.395,1168,0.395,1169,0.395,1170,0.395,1171,0.395,1172,0.395,1173,0.346,1174,0.395,1175,0.395,1176,0.395,1177,0.395,1178,0.395,1179,0.395,1180,0.304,1181,0.533,1182,0.395,1183,0.395,1184,0.395,1185,0.395,1186,0.395,1187,0.395,1188,0.395,1189,0.609,1190,0.304,1191,0.395,1192,0.395,1193,0.762,1194,0.395,1195,0.395,1196,0.395,1197,0.395,1198,0.395,1199,0.395,1200,0.762,1201,0.395,1202,1.103,1203,1.717,1204,0.395,1205,0.395,1206,0.708,1207,1.103,1208,0.367,1209,0.395,1210,0.395,1211,0.762,1212,0.762,1213,0.395,1214,1.717,1215,0.33,1216,0.367,1217,0.708,1218,0.609,1219,0.762,1220,0.346,1221,0.395,1222,0.367,1223,0.762,1224,0.762,1225,0.395,1226,1.103,1227,0.367,1228,1.596,1229,0.395,1230,0.395,1231,0.395,1232,1.025,1233,0.395,1234,0.304,1235,0.395,1236,0.395,1237,0.762,1238,0.762,1239,0.762,1240,0.708,1241,0.708,1242,1.717,1243,0.586,1244,0.395,1245,0.395,1246,1.103,1247,1.025,1248,0.395,1249,1.42,1250,0.395,1251,0.395,1252,0.395,1253,0.395,1254,0.395,1255,0.367,1256,0.395,1257,0.762,1258,0.395,1259,0.395,1260,0.395,1261,0.395,1262,0.762,1263,0.762,1264,0.367,1265,0.367,1266,0.395,1267,0.967,1268,0.346,1269,0.395,1270,0.395,1271,0.762,1272,1.025,1273,0.395,1274,0.33,1275,0.395,1276,0.395,1277,0.395,1278,0.395,1279,0.346,1280,0.367,1281,0.367,1282,0.367,1283,0.346,1284,0.395,1285,0.395,1286,0.346,1287,0.395,1288,0.566,1289,1.42,1290,0.762,1291,0.395,1292,0.395,1293,0.367,1294,0.395,1295,0.395,1296,0.395,1297,0.395,1298,0.395,1299,0.395,1300,1.42,1301,1.42,1302,1.103,1303,0.367,1304,0.395,1305,0.367,1306,0.395,1307,0.395,1308,3.158,1309,1.103,1310,1.103,1311,0.762,1312,1.596,1313,0.395,1314,0.367,1315,0.708,1316,0.762,1317,0.395,1318,0.762,1319,0.395,1320,0.367,1321,0.395,1322,0.304,1323,0.395,1324,0.395,1325,0.395,1326,0.395,1327,0.367,1328,0.395,1329,0.395,1330,0.762,1331,0.762,1332,0.762,1333,0.395,1334,0.762,1335,0.762,1336,0.762,1337,0.762,1338,1.103,1339,0.395,1340,0.367,1341,0.395,1342,0.395,1343,0.762,1344,0.395,1345,0.395,1346,0.395,1347,0.395,1348,0.395,1349,0.762,1350,0.762,1351,0.395,1352,0.395,1353,0.395,1354,0.367,1355,0.395,1356,0.762,1357,0.346,1358,0.395,1359,0.395,1360,0.269,1361,0.395,1362,0.395,1363,0.395,1364,0.395,1365,0.395,1366,0.395,1367,0.395,1368,0.395,1369,1.103,1370,0.762,1371,0.346,1372,0.395,1373,0.395,1374,0.395,1375,0.395,1376,0.395,1377,0.395,1378,0.395,1379,0.395,1380,0.395,1381,0.395,1382,0.395,1383,0.395,1384,0.395,1385,0.395,1386,0.395,1387,0.395,1388,0.395,1389,0.395,1390,0.395]],["component/15",[7,0.337,16,0.33]],["keyword/15",[]],["title/16-1",[82,16.858,86,15.187,106,17.495,178,21.651,179,19.464]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["keyword/16-1",[]],["title/16-2",[43,30.068,180,42.194]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["keyword/16-2",[]],["title/16-3",[30,23.794,93,21.199]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["keyword/16-3",[]],["title/16-4",[14,24.386,136,35.414]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["keyword/16-4",[]],["title/16-5",[82,18.673,86,16.821,106,19.378,181,22.524]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["keyword/16-5",[]],["title/16-6",[43,30.068,180,42.194]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["keyword/16-6",[]],["title/16-7",[30,23.794,93,21.199]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["keyword/16-7",[]],["title/16-8",[14,24.386,136,35.414]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["keyword/16-8",[]],["title/16",[82,23.794,86,21.435]],["name/16",[1391,1.499]],["text/16",[0,2.392,2,2.59,6,0.902,7,1.48,11,1.56,14,1.781,15,3.946,16,2.188,17,1.53,19,2.196,21,3.581,22,3.704,26,1.997,27,2.96,28,1.935,29,1.781,30,3.177,31,1.402,33,3.041,38,0.804,40,0.778,43,2.196,44,1.828,50,1.928,57,2.436,58,3.814,59,1.828,60,2.146,62,0.952,64,1.718,65,1.629,66,0.755,73,1.475,75,1.53,82,2.59,83,3.626,84,3.293,85,1.11,86,3.138,89,1.021,93,2.737,95,2.096,96,2.392,103,3.422,104,1.659,105,2.068,106,2.98,108,2.392,109,1.425,110,3.422,111,1.652,116,3.081,119,2.452,120,1.697,122,2.243,123,2.068,124,1.737,125,0.846,131,2.997,136,1.624,137,3.707,139,0.675,140,0.831,142,1.998,146,0.817,147,0.912,149,1.11,153,0.791,159,2.59,164,1.659,168,2.02,177,1.45,178,2.781,179,2.5,181,2.612,184,3.728,185,2.308,187,1.432,188,1.935,189,1.935,190,1.935,191,1.737,192,1.432,194,2.766,195,1.935,196,1.998,197,2.687,198,1.826,201,2.308,205,0.973,206,2.356,207,4.955,208,1.624,209,2.243,210,2.498,211,2.835,212,2.657,213,5.651,214,2.068,215,1.781,216,2.992,217,3.529,218,5.192,219,5.039,220,2.149,221,2.243,222,1.879,223,4.675,224,2.835,226,4.264,227,3.84,228,1.53,230,4.955,231,3.148,232,0.846,233,2.149,234,3.081,235,3.501,236,2.149,237,1.828,238,2.91,239,2.368,240,2.498,241,2.91,242,1.53,243,3.293,244,2.498,245,1.659,246,1.297,247,3.293,248,4.45,249,3.422,250,1.828,251,3.394,252,1.928,253,2.276,254,1.998,255,2.257,256,3.293,257,2.498,258,2.356,259,2.243,260,2.498,261,1.337,262,2.498,263,2.498,264,2.498,265,2.498,266,2.498,267,1.659,270,2.356,272,2.498,273,2.149,274,2.356,275,2.068,276,2.392,279,3.293,280,2.149,281,1.828,282,1.146,283,2.498,284,1.11,285,1.998,286,0.952,287,1.286,288,1.146,289,1.077,290,1.432,291,1.351,292,1.351,293,1.351,294,1.432,295,1.541,296,1.541,301,0.952,302,1.286,303,1.021,304,0.931,305,0.817,306,1.186,307,1.659,308,1.432,309,3.626,310,1.541,311,3.321,312,0.931,313,0.846,314,1.286,315,2.243,316,0.973,317,1.432,318,1.659,319,1.186,320,0.973,321,1.048,322,2.498,323,1.048,324,1.021,325,0.817,326,1.432,327,1.541,329,1.541,336,1.11,337,1.11,338,2.657,343,1.56,347,1.077,359,1.232,366,1.998,367,3.321,368,1.541,369,1.351,372,2.687,381,1.048,383,1.232,392,4.028,394,2.149,404,0.952,421,1.232,429,1.351,473,0.861,480,2.498,491,2.149,511,2.243,650,1.432,667,1.11,707,1.11,718,2.498,721,1.021,723,1.077,759,1.021,819,2.766,832,2.498,845,1.286,846,1.286,851,1.232,867,1.541,870,2.687,946,1.286,959,0.912,1012,1.351,1075,1.432,1274,2.243,1392,1.541,1393,1.706,1394,2.975,1395,1.706,1396,1.706,1397,1.706,1398,1.706,1399,1.706,1400,1.706]],["component/16",[7,0.337,16,0.33]],["keyword/16",[]],["title/17-1",[86,18.85,111,23.822,183,38.306]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["keyword/17-1",[]],["title/17-2",[86,18.85,111,23.822,392,32.538]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["keyword/17-2",[]],["title/17-3",[31,26.874,86,18.85,228,29.339]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["keyword/17-3",[]],["title/17-4",[228,33.362,601,37.879]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["keyword/17-4",[]],["title/17",[86,21.435,111,27.089]],["name/17",[1401,1.187]],["text/17",[6,2.358,7,1.257,8,1.255,11,3.894,14,3.036,15,2.362,16,2.228,19,1.088,24,1.526,26,3.749,27,2.988,30,2.724,31,3.3,33,2.402,34,1.858,38,2.754,40,1.781,45,1.769,50,1.143,52,3.622,53,1.754,58,2.848,64,0.75,65,0.711,68,1.207,73,1.163,80,3.092,82,2.724,86,3.478,91,1.631,92,1.124,93,2.427,96,1.185,104,1.309,106,1.486,111,3.57,121,1.37,123,1.631,124,2.28,130,1.088,131,1.309,132,1.054,136,1.281,139,1.984,147,1.255,154,1.185,161,2.466,163,2.682,164,2.797,166,3.603,168,3.036,183,4.704,184,1.482,194,1.37,201,2.443,203,1.281,211,1.404,216,3.691,217,3.403,218,4.606,219,4.889,227,3.262,228,4.99,231,4.418,232,1.163,234,1.526,235,3.474,237,2.399,238,3.591,241,3.08,242,2.008,268,5.548,270,5.882,271,2.119,286,4.504,287,1.769,289,2.466,304,1.281,312,1.281,313,2.486,318,2.178,321,2.399,331,2.047,337,1.526,344,1.441,352,2.132,376,1.255,392,4.236,431,1.97,436,2.622,442,1.526,443,3.702,444,2.944,445,1.695,451,2.738,454,3.413,455,3.971,466,1.255,471,1.37,479,3.262,482,3.619,488,1.526,497,1.839,506,1.526,507,1.526,514,3.006,523,1.37,539,1.482,541,1.404,552,1.338,567,1.404,569,1.858,575,5.163,576,3.486,582,1.769,591,1.526,592,1.858,593,1.576,601,3.79,631,1.769,635,1.695,640,1.576,675,3.486,723,1.482,747,2.119,766,1.576,781,1.858,789,4.064,818,2.119,819,4.715,820,1.858,821,5.14,822,1.769,823,2.944,824,1.97,825,1.97,826,2.944,830,2.119,831,3.527,832,4.21,1095,1.576,1099,1.97,1156,3.971,1173,1.858,1180,1.631,1283,1.858,1402,2.346,1403,2.346,1404,2.346,1405,2.346,1406,3.278,1407,1.526,1408,1.97,1409,2.346,1410,2.119,1411,2.346,1412,1.97,1413,2.346,1414,1.97,1415,2.346,1416,5.014,1417,1.97,1418,1.97,1419,2.346,1420,2.346,1421,2.346,1422,1.97,1423,2.119,1424,5.014,1425,5.014,1426,5.014,1427,5.014,1428,5.014,1429,5.014,1430,5.014,1431,2.346,1432,2.346,1433,5.014,1434,2.346,1435,4.21,1436,2.346,1437,2.346,1438,2.346]],["component/17",[7,0.337,16,0.33]],["keyword/17",[]],["title/18-1",[0,28.799,1,28.284,2,20.925]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["keyword/18-1",[]],["title/18-2",[3,51.371,4,48.906]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["keyword/18-2",[]],["title/18-3",[5,39.848,6,19.662]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["keyword/18-3",[]],["title/18-4",[7,8.295,8,17.699,9,22.224,10,18.878,11,17.351,12,18.46,13,20.9,14,12.442,15,15.591]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["keyword/18-4",[]],["title/18-5",[6,15.43,7,12.759,16,12.517,17,26.181]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["keyword/18-5",[]],["title/18",[7,14.298,217,29.907,323,35.042]],["name/18",[20,1.354]],["text/18",[0,4.487,1,1.828,2,2.482,3,2.919,4,2.779,5,2.264,6,2.694,7,2.036,8,2.993,9,2.475,10,2.102,11,3.547,12,3.774,13,3.534,14,2.543,15,1.736,16,2.39,17,3.885,18,2.562,21,1.796,22,1.796,23,3.329,24,2.397,25,2.012,26,2.825,27,2.313,28,3.64,29,3.349,30,3.44,31,1.736,32,3.329,33,2.681,34,2.919,35,3.329,36,4.219,37,3.329,38,2.636,39,2.662,40,3.706,41,2.919,42,5.055,43,3.765,44,2.264,45,2.779,46,3.329,47,2.779,48,2.662,49,3.329,50,2.727,53,1.656,60,2.286,64,2.415,65,2.462,68,1.896,73,1.828,78,3.329,81,3.329,82,2.482,83,2.264,84,4.703,86,2.236,87,3.329,88,4.432,90,5.055,91,2.562,92,1.765,93,2.655,94,2.397,95,1.631,96,2.825,97,2.562,98,3.094,99,2.475,100,3.094,101,3.329,102,1.932,103,4.042,104,2.056,105,2.562,106,1.403,107,2.919,108,1.861,109,1.765,110,2.662,111,2.337,112,2.662,113,4.042,114,2.475,115,3.329,116,2.397,117,3.329,118,2.264,119,1.682,120,2.102,121,2.152,125,1.828,126,2.056,127,3.329,128,2.562,129,2.779,130,1.708,131,2.056,132,1.656,133,2.779,134,2.779,135,2.397,136,2.012,139,2.989,140,2.727,141,2.152,142,2.475,143,4.156,144,2.775,145,3.122,146,4.096,147,2.993,148,2.562,149,2.397,150,3.329,151,3.094,152,4.698,153,3.136,154,3.814,155,4.219,156,2.919,157,3.329,158,4.432,159,2.482,160,3.094,161,2.328,162,2.328,163,1.971,164,3.122,165,2.102,166,1.896,167,2.919,168,2.104,169,2.102,170,2.264,171,3.094,172,3.329,173,2.397,175,2.328,176,3.329,177,1.796,201,2.727,231,1.828,235,1.828,281,2.264,451,3.055,466,1.971,482,1.796,498,3.438,591,2.397,959,1.971,1288,2.475,1439,5.055,1440,2.475]],["component/18",[7,0.337,16,0.33]],["keyword/18",[]],["title/19-1",[7,14.298,21,27.793,22,27.793]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["keyword/19-1",[]],["title/19",[54,38.824,1441,51.371]],["name/19",[1442,1.499]],["text/19",[0,1.031,2,1.274,7,1.634,8,1.092,14,0.767,19,0.946,21,2.208,22,2.208,30,1.274,54,2.079,57,1.05,64,1.71,65,1.817,66,4.666,73,1.012,86,0.675,93,0.667,106,0.777,109,2.871,111,0.853,125,1.012,130,0.946,137,4.46,139,0.808,140,1.692,141,1.192,165,1.165,177,2.605,179,2.946,181,0.903,185,3.177,198,1.339,217,1.07,219,5.41,237,1.254,242,2.331,246,0.89,253,1.339,256,2.414,277,4.026,313,2.247,318,2.528,319,1.419,323,1.254,325,0.978,373,1.844,374,1.115,376,1.857,391,2.948,416,1.539,433,2.193,441,1.328,475,1.165,478,1.371,484,3.589,489,1.475,495,1.371,497,0.962,509,2.414,513,1.371,514,1.05,515,2.331,524,1.165,535,1.139,544,1.254,561,2.75,573,1.192,617,1.222,629,3.589,631,2.618,785,1.289,789,3.151,806,1.539,841,1.617,954,2.259,958,1.419,959,1.857,991,6.049,997,2.259,999,1.475,1119,1.419,1189,3.274,1215,3.417,1241,2.916,1243,1.419,1265,1.714,1267,1.617,1268,1.617,1340,3.805,1392,1.844,1441,2.75,1443,2.041,1444,1.714,1445,1.475,1446,3.473,1447,2.041,1448,2.041,1449,2.041,1450,2.041,1451,2.041,1452,2.041,1453,2.041,1454,3.473,1455,2.041,1456,1.844,1457,2.041,1458,2.041,1459,10.826,1460,8.501,1461,6.034,1462,2.041,1463,7.545,1464,1.844,1465,2.041,1466,5.415,1467,1.844,1468,2.041,1469,3.137,1470,2.041,1471,2.041,1472,2.041,1473,2.041,1474,1.844,1475,2.041,1476,2.041,1477,2.041,1478,3.137,1479,2.041,1480,2.041,1481,6.412,1482,3.473,1483,4.532,1484,3.473,1485,2.041,1486,3.137,1487,2.041,1488,2.041,1489,1.844,1490,2.041,1491,1.844,1492,4.532,1493,2.041,1494,4.83,1495,3.473,1496,3.473,1497,6.284,1498,2.041,1499,3.137,1500,2.041,1501,9.106,1502,3.137,1503,2.041,1504,1.844,1505,1.844,1506,2.041,1507,2.041,1508,2.041,1509,2.041,1510,2.041,1511,2.041,1512,2.041,1513,2.041,1514,2.041,1515,2.041,1516,7.909,1517,2.041,1518,1.844,1519,2.041,1520,2.041,1521,1.844,1522,3.473,1523,4.532,1524,2.041,1525,6.284,1526,3.473,1527,2.041,1528,2.041,1529,3.137,1530,2.041,1531,4.747,1532,2.041,1533,2.041,1534,2.041,1535,3.137,1536,2.041,1537,2.041,1538,4.093,1539,3.473,1540,5.025,1541,2.041,1542,2.041,1543,3.473,1544,2.041,1545,2.041,1546,2.041,1547,3.473,1548,3.473,1549,5.994,1550,2.041,1551,5.347,1552,2.916,1553,2.041,1554,2.041,1555,2.041,1556,1.844,1557,2.041,1558,3.473,1559,2.041,1560,2.041,1561,2.041,1562,2.041,1563,2.041,1564,3.473,1565,2.041,1566,2.041,1567,2.041,1568,2.041,1569,2.041]],["component/19",[7,0.337,16,0.33]],["keyword/19",[]],["title/20-1",[93,21.199,573,37.879]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["keyword/20-1",[]],["title/20-2",[93,21.199,573,37.879]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["keyword/20-2",[]],["title/20-3",[93,21.199,285,43.56]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["keyword/20-3",[]],["title/20-4",[93,21.199,1570,51.371]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["keyword/20-4",[]],["title/20-5",[93,21.199,227,42.194]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["keyword/20-5",[]],["title/20-6",[93,18.642,819,33.31,1440,38.306]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["keyword/20-6",[]],["title/20-7",[93,21.199,116,42.194]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["keyword/20-7",[]],["title/20-8",[93,21.199,1571,51.371]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["keyword/20-8",[]],["title/20-9",[93,21.199,246,28.278]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["keyword/20-9",[]],["title/20-10",[93,21.199,1572,46.855]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["keyword/20-10",[]],["title/20-11",[93,21.199,1573,54.457]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["keyword/20-11",[]],["title/20-12",[166,29.339,570,43.008,573,33.31]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["keyword/20-12",[]],["title/20-13",[219,24.802,375,30.467,514,26.181,573,29.725]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["keyword/20-13",[]],["title/20-14",[95,33.264]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["keyword/20-14",[]],["title/20",[514,33.362,573,37.879]],["name/20",[573,0.875]],["text/20",[0,0.18,2,0.173,6,0.782,7,0.118,11,1.273,12,0.729,13,0.152,15,0.057,16,0.849,19,0.166,21,0.174,22,0.174,26,0.981,27,2.196,28,0.722,29,1.588,30,0.681,33,0.171,34,0.19,36,0.181,38,0.326,40,0.46,43,0.515,44,0.075,47,0.092,52,0.174,53,0.407,54,0.144,58,0.117,59,0.148,60,0.121,64,1.9,65,1.801,66,0.307,68,0.062,73,0.119,75,1.209,82,1.31,86,0.993,88,0.096,89,0.073,91,0.084,92,0.226,93,1.278,95,0.258,96,0.294,98,0.102,102,0.064,105,0.328,106,0.092,111,0.1,116,0.851,118,0.682,119,0.507,124,3.435,125,0.551,128,0.167,129,0.269,130,1.126,131,0.068,132,2.359,135,0.079,137,0.208,144,1.166,145,0.134,147,0.191,151,0.3,154,0.121,159,0.833,163,3.254,164,0.619,166,0.356,168,0.046,173,0.232,179,0.894,183,0.24,185,0.819,194,3.766,198,0.876,205,0.137,218,5.716,219,5.503,227,4.36,231,1.49,234,0.156,235,0.234,241,0.148,242,0.184,244,0.438,246,3.351,253,0.814,256,0.167,261,1.551,267,0.563,277,0.746,278,0.204,280,3.257,281,0.148,285,3.76,286,2.969,288,0.24,299,0.167,300,0.082,301,0.263,304,0.066,305,0.171,306,0.167,312,0.131,313,0.06,316,0.069,318,0.199,325,0.171,331,0.247,337,0.307,338,0.537,347,0.152,349,0.294,374,0.066,375,0.214,376,0.065,381,0.075,386,1.503,387,1.798,388,1.846,392,1.863,400,2.348,433,0.826,449,0.202,451,0.131,454,0.071,479,0.379,482,0.174,484,0.19,487,0.084,492,0.082,495,0.392,498,1.396,500,0.084,506,0.232,514,2.295,515,0.124,519,0.077,523,0.14,524,0.395,540,0.079,552,3.285,558,0.096,559,0.144,560,0.102,561,0.096,564,3.814,565,2.109,566,1.671,567,0.84,568,0.102,569,0.096,570,0.837,573,4.106,574,3.191,575,0.084,576,0.084,578,1.058,579,3.958,585,0.24,589,0.608,595,0.911,596,0.911,599,0.092,600,0.217,601,0.071,605,0.102,617,0.665,622,0.088,629,1.923,631,1.267,632,0.088,634,0.181,635,0.088,639,0.084,640,0.082,643,0.077,646,0.088,667,0.079,674,0.082,675,0.248,680,0.174,681,0.328,703,0.073,705,0.426,706,0.096,707,0.079,716,0.462,723,0.505,754,0.082,755,0.102,759,0.282,764,0.11,766,0.161,785,0.077,808,1.199,809,0.102,819,3.862,823,0.092,824,0.932,825,0.102,840,0.34,845,0.181,851,0.174,852,0.11,856,1.793,873,0.202,889,0.088,907,0.102,913,0.092,940,0.082,954,0.379,959,3.75,981,0.096,991,1.736,997,0.232,1023,0.396,1059,0.102,1060,0.729,1070,2.865,1095,0.082,1107,0.847,1173,0.096,1181,2.602,1189,1.082,1190,1.58,1215,0.761,1216,0.396,1240,3.144,1267,0.19,1268,0.19,1288,0.082,1293,0.672,1322,1.58,1360,0.219,1371,0.19,1401,3.343,1407,1.629,1418,0.3,1423,0.217,1440,2.589,1456,0.11,1460,3.675,1461,5.501,1463,1.268,1464,0.217,1466,1.831,1467,0.322,1469,0.723,1474,0.11,1478,0.426,1481,0.76,1486,0.626,1489,0.11,1491,0.626,1494,0.527,1497,0.527,1499,0.217,1502,0.11,1504,0.217,1505,0.11,1518,0.11,1521,0.217,1525,0.322,1529,0.322,1531,0.096,1535,0.426,1538,0.426,1540,5.976,1552,0.202,1556,0.322,1570,5.028,1571,1.036,1572,5.022,1573,6.253,1574,0.11,1575,1.268,1576,1.528,1577,6.956,1578,0.121,1579,0.24,1580,2.407,1581,0.121,1582,0.49,1583,0.102,1584,2.166,1585,1.21,1586,1.009,1587,1.098,1588,1.003,1589,1.003,1590,1.888,1591,1.809,1592,1.809,1593,1.888,1594,1.888,1595,1.888,1596,1.809,1597,3.145,1598,3.107,1599,2.648,1600,2.648,1601,1.772,1602,2.227,1603,5.868,1604,4.872,1605,5.802,1606,4.872,1607,3.627,1608,4.281,1609,4.281,1610,5.802,1611,5.116,1612,2.526,1613,5.802,1614,5.464,1615,3.813,1616,1.677,1617,1.009,1618,0.911,1619,3.813,1620,1.559,1621,4.031,1622,4.031,1623,4.072,1624,4.899,1625,5.664,1626,0.911,1627,1.009,1628,2.055,1629,1.888,1630,1.888,1631,1.009,1632,1.486,1633,1.888,1634,4.825,1635,1.009,1636,0.932,1637,1.009,1638,1.591,1639,1.888,1640,5.888,1641,1.009,1642,0.911,1643,1.009,1644,1.009,1645,1.009,1646,1.677,1647,1.009,1648,2.653,1649,1.009,1650,1.009,1651,1.736,1652,1.862,1653,1.857,1654,1.857,1655,1.857,1656,4.599,1657,5.394,1658,1.857,1659,1.857,1660,0.626,1661,0.911,1662,1.009,1663,1.857,1664,1.009,1665,2.579,1666,1.857,1667,1.009,1668,1.009,1669,3.745,1670,1.009,1671,1.857,1672,1.857,1673,1.857,1674,1.009,1675,1.11,1676,1.009,1677,1.009,1678,0.847,1679,2.797,1680,1.009,1681,3.266,1682,1.11,1683,0.121,1684,1.857,1685,1.009,1686,1.009,1687,3.382,1688,1.009,1689,1.009,1690,1.009,1691,0.911,1692,1.036,1693,0.121,1694,1.605,1695,1.11,1696,0.879,1697,1.003,1698,1.009,1699,1.009,1700,1.009,1701,1.009,1702,0.911,1703,1.009,1704,1.009,1705,1.009,1706,1.009,1707,1.009,1708,2.052,1709,1.11,1710,0.121,1711,0.911,1712,1.009,1713,1.009,1714,1.009,1715,1.009,1716,1.009,1717,1.009,1718,1.009,1719,1.009,1720,2.348,1721,0.911,1722,1.009,1723,1.009,1724,1.009,1725,1.009,1726,1.178,1727,0.847,1728,1.11,1729,0.121,1730,1.009,1731,1.009,1732,1.009,1733,1.009,1734,0.847,1735,0.847,1736,1.11,1737,1.009,1738,1.009,1739,1.009,1740,1.009,1741,1.11,1742,1.009,1743,0.799,1744,1.009,1745,0.693,1746,1.11,1747,0.121,1748,0.121,1749,0.121,1750,0.121,1751,0.693,1752,0.121,1753,0.121,1754,0.121,1755,0.121,1756,2.526,1757,0.693,1758,0.121,1759,0.121,1760,0.121,1761,0.121,1762,0.693,1763,1.003,1764,0.121,1765,0.121,1766,0.121,1767,0.121,1768,1.11,1769,1.11,1770,0.24,1771,0.11,1772,0.11,1773,2.526,1774,0.626,1775,0.121,1776,0.121,1777,0.121,1778,0.121,1779,0.693,1780,1.11,1781,0.121,1782,0.121,1783,0.121,1784,0.121,1785,0.693,1786,1.11,1787,0.121,1788,0.121,1789,0.121,1790,0.121,1791,0.102,1792,0.283,1793,0.24,1794,0.102,1795,0.102,1796,0.11,1797,0.11,1798,0.121,1799,0.24,1800,0.8,1801,0.11,1802,0.24,1803,0.3,1804,0.121,1805,0.11,1806,0.121,1807,0.121,1808,0.121,1809,0.24,1810,0.471,1811,0.217,1812,0.121,1813,0.121,1814,0.121,1815,0.357,1816,0.121,1817,0.121,1818,0.121,1819,0.24,1820,0.121,1821,0.121,1822,0.217,1823,0.217,1824,0.121,1825,0.121,1826,0.121,1827,0.121,1828,0.121,1829,0.121,1830,0.121,1831,0.24,1832,0.121,1833,0.121,1834,0.121,1835,0.121,1836,0.121,1837,0.357,1838,0.121,1839,0.121,1840,0.121,1841,0.24,1842,0.121,1843,0.121,1844,0.121,1845,0.121,1846,0.121,1847,0.121,1848,0.121,1849,0.121,1850,0.121,1851,0.121,1852,0.121,1853,0.102,1854,0.121,1855,0.24,1856,0.217,1857,0.24,1858,0.471,1859,1.497,1860,0.24,1861,0.24,1862,0.693,1863,0.471,1864,0.24,1865,0.24,1866,0.24,1867,0.24,1868,0.24,1869,0.24,1870,0.11,1871,0.121,1872,4.113,1873,3.063,1874,2.33,1875,2.33,1876,2.33,1877,2.165,1878,0.357,1879,0.357,1880,1.677,1881,1.677,1882,1.677,1883,1.677,1884,0.357,1885,0.322,1886,0.24,1887,0.322,1888,0.322,1889,0.322,1890,0.322,1891,0.322,1892,0.357,1893,0.357,1894,0.357,1895,0.121,1896,0.357,1897,0.879,1898,0.357,1899,0.121,1900,0.121,1901,0.11,1902,0.396,1903,0.426,1904,0.11,1905,0.11,1906,0.11,1907,0.121,1908,0.11,1909,0.11,1910,0.11,1911,0.121,1912,0.121,1913,0.121,1914,0.121,1915,0.121,1916,2.351,1917,0.121,1918,0.121,1919,0.357,1920,0.121,1921,0.121,1922,0.471,1923,0.121,1924,0.121,1925,1.009,1926,0.121,1927,0.121,1928,0.121,1929,0.121,1930,0.121,1931,0.357,1932,0.357,1933,0.11,1934,0.121,1935,0.121,1936,0.8,1937,0.357,1938,0.583,1939,0.24,1940,0.24,1941,0.121,1942,0.8,1943,0.471,1944,0.24,1945,0.121,1946,0.357,1947,0.121,1948,0.121,1949,0.906,1950,0.121,1951,0.583,1952,0.8,1953,0.8,1954,0.693,1955,0.24,1956,0.357,1957,0.24,1958,0.121,1959,0.357,1960,0.217,1961,0.121,1962,0.121,1963,0.24,1964,0.121,1965,0.121,1966,0.121,1967,0.121,1968,0.121,1969,0.357,1970,0.121,1971,0.121,1972,0.121,1973,0.121,1974,0.121,1975,0.121,1976,0.121,1977,0.121,1978,0.121,1979,0.121,1980,0.121,1981,0.121,1982,0.121,1983,0.121,1984,0.121,1985,0.24,1986,0.121,1987,0.121,1988,0.121,1989,0.121,1990,0.121,1991,0.121,1992,0.121,1993,0.121,1994,0.121,1995,0.357,1996,0.121,1997,0.121,1998,0.121,1999,0.24,2000,0.8,2001,0.121,2002,0.121,2003,0.121,2004,0.121,2005,0.121,2006,0.121,2007,0.24,2008,0.121,2009,0.24,2010,0.24,2011,0.121,2012,0.121,2013,0.121,2014,0.121,2015,0.24,2016,0.121,2017,0.24,2018,0.121,2019,0.121,2020,0.121,2021,0.121,2022,0.121,2023,0.24,2024,0.121,2025,0.121,2026,0.121,2027,0.121,2028,0.121,2029,0.357,2030,0.121,2031,0.24,2032,0.121,2033,0.121,2034,0.121,2035,0.121,2036,0.121,2037,0.24,2038,0.121,2039,0.121,2040,0.121,2041,0.121,2042,0.121,2043,0.121,2044,0.121,2045,0.357,2046,0.121,2047,0.121,2048,0.121,2049,0.121,2050,0.121,2051,0.24,2052,0.121,2053,0.121,2054,0.121,2055,0.121,2056,0.121,2057,0.121,2058,0.121,2059,0.121,2060,0.121,2061,0.121,2062,0.121,2063,0.121,2064,0.121,2065,0.121,2066,0.357,2067,0.121,2068,0.24,2069,0.121,2070,0.121,2071,0.121,2072,0.121,2073,0.24,2074,0.121,2075,0.121,2076,0.121,2077,0.121,2078,0.24,2079,0.121,2080,0.121,2081,0.121,2082,0.121,2083,0.121,2084,0.121,2085,0.121,2086,0.121,2087,0.121,2088,0.121,2089,0.121,2090,0.121,2091,0.121,2092,0.121,2093,0.357,2094,0.471,2095,0.24,2096,0.121,2097,0.24,2098,0.121,2099,0.121,2100,0.357,2101,0.24,2102,0.121,2103,0.24,2104,0.121,2105,0.357,2106,0.121,2107,0.357,2108,0.24,2109,0.357,2110,0.24,2111,0.24,2112,0.24,2113,0.121,2114,0.121,2115,0.121,2116,0.121,2117,0.357,2118,0.471,2119,0.24,2120,0.121,2121,0.24,2122,0.357,2123,0.121,2124,0.121,2125,0.121,2126,0.471,2127,0.121,2128,0.24,2129,0.121,2130,0.121,2131,0.121,2132,0.121,2133,0.121,2134,0.121,2135,0.121,2136,0.24,2137,0.357,2138,1.21,2139,1.21,2140,0.121,2141,0.121,2142,0.121,2143,0.121,2144,0.121,2145,0.121,2146,0.24,2147,0.121,2148,0.121,2149,0.357,2150,0.24,2151,0.471,2152,0.24,2153,0.121,2154,0.121,2155,0.121,2156,0.693,2157,0.121,2158,0.121,2159,0.121,2160,0.357,2161,0.121,2162,0.121,2163,0.121,2164,0.471,2165,0.8,2166,0.24,2167,0.24,2168,0.357,2169,0.357,2170,0.121,2171,0.121,2172,0.24,2173,0.121,2174,0.24,2175,0.24,2176,0.121,2177,0.121,2178,0.121,2179,0.357,2180,0.121,2181,0.357,2182,0.121,2183,0.121,2184,0.121,2185,0.121,2186,0.121,2187,0.121,2188,0.121,2189,0.121,2190,0.121,2191,0.121,2192,0.121]],["component/20",[7,0.337,16,0.33]],["keyword/20",[]],["title/21-1",[185,27.793,387,34.141,617,34.141]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["keyword/21-1",[]],["title/21-2",[305,27.324,341,34.141,675,39.658]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["keyword/21-2",[]],["title/21-3",[185,27.793,388,35.042,617,34.141]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["keyword/21-3",[]],["title/21-4",[185,27.793,261,25.626,617,34.141]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["keyword/21-4",[]],["title/21-5",[303,38.824,2193,58.589]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["keyword/21-5",[]],["title/21",[185,31.605,617,38.824]],["name/21",[2194,1.499]],["text/21",[0,1.199,6,2.459,7,2.097,14,3.145,15,2.775,16,2.529,17,2.029,19,1.101,26,3.558,27,2.013,30,1.855,33,2.423,38,2.775,40,2.308,51,2.361,53,3.166,57,1.222,58,1.157,60,2.965,64,0.759,65,0.72,66,3.798,72,2.974,80,4.006,82,3.468,86,2.159,92,1.889,93,2.555,95,1.745,109,1.138,111,0.992,113,3.653,118,2.423,119,1.8,120,1.355,130,2.345,135,2.566,139,2.001,140,1.157,141,1.387,143,4.33,145,2.821,147,2.109,154,3.558,159,0.871,168,2.214,173,1.545,179,2.142,185,4.872,198,3.383,201,1.922,203,2.761,205,1.355,224,1.422,228,2.029,231,1.956,235,1.178,238,3.618,239,1.422,252,1.157,253,1.521,254,2.649,255,2.25,276,1.991,281,2.423,282,2.649,283,1.5,285,3.955,289,5.742,303,2.361,305,3.376,307,3.285,312,3.215,318,3.285,345,2.423,349,1.991,387,3.525,388,3.618,404,1.325,433,1.5,438,3.813,473,1.991,476,1.355,482,1.922,497,3.822,498,1.459,506,2.566,515,2.601,519,5.123,521,1.791,527,2.849,529,1.716,533,1.716,541,3.525,551,4.964,559,1.422,567,3.525,575,4.9,576,4.9,578,5.894,601,2.303,616,5.319,617,5.948,619,1.881,620,1.5,623,1.881,640,1.595,643,1.5,668,1.881,679,2.649,680,2.849,686,3.124,705,3.618,710,2.849,711,4.388,715,1.791,766,2.649,767,5.902,786,2.649,787,1.716,788,1.994,819,3.439,911,2.849,957,3.124,959,2.705,1060,1.716,1095,2.649,1180,2.742,1215,1.791,1357,3.124,1572,4.254,1608,4.246,1609,1.994,1792,3.124,1856,3.563,2193,3.563,2195,2.375,2196,2.145,2197,2.375,2198,5.319,2199,3.311,2200,3.311,2201,2.375,2202,2.375,2203,5.319,2204,3.563,2205,3.944,2206,3.311,2207,2.145,2208,2.375,2209,2.145,2210,2.375,2211,2.375,2212,2.145,2213,1.881,2214,2.375,2215,2.375,2216,2.145]],["component/21",[7,0.337,16,0.33]],["keyword/21",[]],["title/22-1",[7,8.919,16,8.75,132,24.476,325,17.045,374,19.427,375,21.298,900,29.874]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["keyword/22-1",[]],["title/22-2",[7,8.919,16,8.75,132,24.476,325,17.045,374,19.427,375,21.298,376,19.031]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["keyword/22-2",[]],["title/22-3",[7,8.919,16,8.75,132,24.476,242,18.302,325,17.045,375,21.298,376,19.031]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["keyword/22-3",[]],["title/22",[325,36.01]],["name/22",[325,0.718]],["text/22",[1,3.583,2,3.033,6,2.506,7,1.959,9,2.273,10,1.931,11,1.775,12,1.888,13,3.311,14,2.716,15,2.47,16,2.298,17,1.741,21,2.555,25,1.848,26,1.709,27,1.792,30,3.491,31,1.595,38,2.47,50,3.126,51,2.026,53,1.521,58,1.649,70,6.607,76,3.645,82,2.354,85,2.202,86,2.583,93,2.912,94,2.202,95,2.32,96,2.647,102,1.775,103,3.787,106,2.751,111,3.017,119,2.392,129,2.552,130,4.24,132,2.355,146,1.621,159,2.354,168,2.412,178,2.47,179,3.774,181,3.197,183,4.309,185,3.126,188,2.202,189,2.202,190,2.202,191,1.977,198,3.014,204,1.81,216,2.138,219,2.555,228,1.741,233,2.445,243,3.645,244,2.138,246,3.15,247,3.645,249,2.445,253,3.014,261,2.883,268,2.681,273,2.445,281,2.08,286,1.888,301,1.888,309,4.439,313,1.678,318,2.924,325,2.511,331,1.775,337,4.7,343,1.775,344,2.08,345,2.08,374,1.848,375,2.026,377,4.736,381,2.08,382,3.058,383,2.445,384,4.852,385,3.058,386,1.775,387,3.841,388,3.942,389,3.058,390,2.273,391,2.202,392,1.931,393,2.552,394,2.445,399,2.842,400,4.402,401,2.202,402,3.058,404,2.924,405,2.552,406,2.842,407,2.842,408,2.842,409,2.842,410,2.842,411,3.058,412,2.842,413,3.058,414,2.681,451,1.848,482,2.555,491,2.445,497,1.595,498,4.439,499,2.445,514,1.741,541,2.026,567,3.138,573,1.977,575,2.353,601,1.977,617,2.026,681,2.353,688,2.681,693,2.273,743,3.058,759,3.841,817,3.058,821,2.681,854,3.058,1232,2.842,1288,2.273,1320,2.842,1439,3.058,1440,4.309,1570,2.681,1572,2.445,1584,3.41,2206,2.842,2217,7.816,2218,3.058,2219,3.058,2220,3.385,2221,5.796,2222,3.385,2223,3.385,2224,4.736,2225,3.385,2226,4.402,2227,3.385,2228,3.385,2229,3.385,2230,3.385,2231,3.385,2232,3.385,2233,3.385,2234,3.385,2235,3.385,2236,3.385]],["component/22",[7,0.337,16,0.33]],["keyword/22",[]],["title/23-1",[179,24.159,253,21.992,514,29.339]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["keyword/23-1",[]],["title/23-2",[92,27.324,198,21.992,253,21.992]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["keyword/23-2",[]],["title/23-3",[2,15.365,178,19.734,198,16.149,253,16.149,386,21.961,1360,25.732]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["keyword/23-3",[]],["title/23-4",[93,18.642,179,24.159,253,21.992]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["keyword/23-4",[]],["title/23-5",[93,21.199,132,29.141]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["keyword/23-5",[]],["title/23-6",[93,21.199,280,46.855]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["keyword/23-6",[]],["title/23-7",[93,21.199,1872,54.457]],["name/23-7",[]],["text/23-7",[]],["component/23-7",[]],["keyword/23-7",[]],["title/23-8",[93,21.199,564,51.371]],["name/23-8",[]],["text/23-8",[]],["component/23-8",[]],["keyword/23-8",[]],["title/23-9",[93,21.199,566,51.371]],["name/23-9",[]],["text/23-9",[]],["component/23-9",[]],["keyword/23-9",[]],["title/23-10",[93,21.199,579,48.906]],["name/23-10",[]],["text/23-10",[]],["component/23-10",[]],["keyword/23-10",[]],["title/23-11",[93,21.199,573,37.879]],["name/23-11",[]],["text/23-11",[]],["component/23-11",[]],["keyword/23-11",[]],["title/23-12",[93,21.199,1264,54.457]],["name/23-12",[]],["text/23-12",[]],["component/23-12",[]],["keyword/23-12",[]],["title/23-13",[104,28.394,179,21.559,253,19.625,386,26.688]],["name/23-13",[]],["text/23-13",[]],["component/23-13",[]],["keyword/23-13",[]],["title/23-14",[475,37.001,515,33.362]],["name/23-14",[]],["text/23-14",[]],["component/23-14",[]],["keyword/23-14",[]],["title/23",[179,24.159,198,21.992,253,21.992]],["name/23",[2237,1.499]],["text/23",[0,0.836,1,0.575,2,2.694,5,0.375,6,1.172,7,0.969,12,0.647,14,0.623,16,2.088,17,0.596,19,0.768,22,1.027,25,0.333,26,0.836,27,2.226,29,0.365,30,1.615,31,0.993,33,1.389,38,0.546,40,0.962,43,0.283,45,0.874,50,0.565,53,1.459,58,0.807,60,2.014,62,0.647,64,1.687,65,1.656,66,2.637,73,0.303,75,0.852,79,0.483,82,2.476,83,0.375,85,0.397,86,1.073,89,0.694,92,1.985,93,2.455,95,0.513,96,1.065,99,1.693,102,0.869,104,0.647,106,1.104,116,0.397,118,0.712,119,1.15,120,0.348,125,1.611,130,0.283,131,0.924,132,3.965,136,0.333,137,0.356,139,0.241,143,0.712,144,0.575,145,0.34,146,0.292,147,0.886,154,0.585,159,1.192,163,2.482,164,0.647,165,0.348,166,0.314,168,0.436,178,2.945,179,3.852,185,2.474,194,2.842,196,0.41,198,2.237,200,1.753,201,1.027,202,0.483,203,0.905,204,0.62,208,0.633,217,0.32,218,5.383,219,5.451,220,0.441,224,0.365,227,0.754,228,0.314,231,2.878,235,1.046,237,1.018,239,0.365,242,0.596,246,1.099,250,0.375,251,0.385,252,1.583,253,3.342,254,0.41,255,0.348,259,0.46,261,2.37,276,0.585,279,0.806,280,5.991,281,0.375,282,0.41,283,0.732,284,1.078,285,1.693,286,0.34,287,0.46,288,0.41,289,2.78,301,0.34,304,0.905,305,0.555,307,0.647,312,0.333,316,0.348,319,0.806,320,0.945,323,0.375,325,0.555,331,0.32,335,0.397,341,0.694,344,0.375,345,0.712,347,0.385,349,0.836,350,0.838,352,1.151,357,0.424,358,0.512,374,0.333,376,0.886,386,4.523,387,4.447,388,3.753,393,0.46,404,0.34,420,1.372,432,0.732,442,0.397,451,0.905,454,0.356,456,0.424,463,0.424,471,0.967,473,0.836,475,1.203,476,0.348,479,1.372,482,2.262,488,0.754,497,0.288,498,1.782,506,1.078,507,0.754,509,0.424,514,1.836,515,1.671,518,0.874,519,0.732,520,3.063,521,1.249,522,0.874,523,1.897,524,1.203,525,0.838,526,1.047,527,2.346,528,2.095,529,0.441,530,0.551,531,1.047,532,0.874,533,0.838,534,0.441,535,0.34,536,0.551,540,0.397,541,0.694,542,1.113,544,1.018,545,0.918,547,0.483,548,0.551,549,0.46,551,0.333,552,0.661,553,0.551,554,0.424,555,0.46,556,1.312,558,1.312,559,0.992,560,0.512,561,0.918,564,6.526,565,4.712,566,5.95,567,0.992,568,0.512,570,1.59,573,4.932,574,0.512,577,0.46,578,0.46,579,6.655,580,0.918,581,0.974,582,2.691,583,1.249,584,1.496,585,1.416,586,0.424,587,0.918,588,0.483,589,1.416,590,0.385,591,0.397,592,0.483,593,0.41,594,0.551,597,0.551,599,0.46,602,0.551,603,0.551,604,1.047,605,0.974,606,0.483,607,0.551,608,1.312,613,0.441,614,0.483,615,0.551,617,2.137,621,0.41,627,0.551,628,0.551,629,0.483,630,0.512,631,1.249,632,1.197,633,1.905,634,0.874,635,0.441,636,0.483,637,0.512,638,0.551,639,0.424,640,0.41,641,0.874,642,0.483,643,1.332,646,0.441,647,0.974,648,0.551,649,0.551,650,0.512,651,0.441,652,0.483,654,0.551,655,0.551,657,0.46,679,0.41,681,0.424,693,0.779,712,0.397,723,0.385,759,1.736,782,0.46,808,1.249,809,0.512,813,0.874,819,0.677,822,0.46,846,0.46,856,4.035,925,0.356,959,1.737,1003,0.974,1070,2.016,1181,1.831,1190,1.152,1281,0.512,1322,1.152,1360,0.712,1407,1.078,1412,0.974,1440,0.41,1461,4.305,1540,4.072,1571,0.483,1572,0.441,1573,1.391,1574,0.551,1576,0.46,1577,0.551,1587,0.974,1590,1.249,1591,1.197,1592,1.197,1593,1.249,1594,1.249,1595,1.249,1596,1.197,1597,2.187,1598,2.187,1599,1.901,1600,1.901,1610,5.767,1611,1.905,1612,1.047,1613,5.882,1628,1.249,1629,1.249,1630,1.249,1633,1.249,1634,4.118,1636,0.512,1638,1.249,1639,1.249,1640,4.494,1660,3.493,1687,4.192,1702,1.496,1743,0.483,1756,0.551,1763,0.551,1772,0.551,1773,0.551,1774,3.493,1791,0.512,1797,0.551,1805,0.551,1872,6.964,1873,6.292,1874,5.384,1875,5.384,1876,5.646,1877,5.004,1880,4.192,1881,4.192,1882,4.192,1883,4.192,1885,1.496,1887,1.047,1888,1.047,1889,1.047,1890,1.047,1891,1.047,1897,4.72,1901,1.047,1902,2.997,1903,2.934,1904,1.047,1905,1.047,1906,1.047,1908,0.551,1909,1.905,1910,1.047,1933,0.551,2199,0.512,2200,0.512,2207,0.551,2212,0.551,2238,0.551,2239,0.61,2240,0.61,2241,0.61,2242,1.16,2243,0.61,2244,0.61,2245,6.512,2246,1.16,2247,0.61,2248,2.109,2249,1.16,2250,3.743,2251,1.16,2252,0.61,2253,1.16,2254,1.16,2255,1.16,2256,1.16,2257,0.61,2258,0.61,2259,0.61,2260,0.61,2261,0.61,2262,1.16,2263,3.57,2264,0.61,2265,0.61,2266,0.61,2267,2.521,2268,0.61,2269,0.61,2270,0.61,2271,0.61,2272,0.61,2273,0.551,2274,0.61,2275,0.551,2276,0.61,2277,0.61,2278,0.61]],["component/23",[7,0.337,16,0.33]],["keyword/23",[]],["title/24",[416,56.68]],["name/24",[416,1.13]],["text/24",[2,2.061,6,2.825,7,1.408,14,1.678,16,2.292,21,2.737,22,2.737,27,3.232,30,2.597,40,3.23,48,3.225,50,2.175,57,4.526,60,2.56,62,4.908,64,3.321,65,3.192,66,4.058,68,4.267,75,4.716,82,1.013,83,1.697,86,3.03,92,2.138,96,1.395,97,1.921,106,1.052,119,2.037,126,1.541,143,1.697,144,2.214,154,1.395,159,2.597,163,1.478,164,5.453,168,1.039,170,3.451,177,2.175,178,1.302,181,1.975,191,2.607,198,1.721,201,3.45,203,1.508,204,3.45,208,3.522,211,3.362,228,1.421,246,1.204,252,4.175,253,3.469,261,1.241,276,1.395,283,1.745,289,3.548,305,2.138,309,1.697,313,1.37,316,1.576,323,3.451,331,1.449,336,2.904,338,1.855,343,1.449,381,1.697,386,1.449,417,3.366,418,3.748,419,3.535,420,2.904,421,4.058,422,2.496,423,4.449,424,5.074,425,2.188,426,4.659,427,4.032,428,1.996,429,7.488,430,2.496,431,3.748,432,1.745,433,2.819,434,3.535,435,2.32,436,1.855,437,2.496,438,2.083,439,2.083,440,2.496,441,2.904,442,1.797,443,4.887,444,2.083,445,1.996,446,3.225,447,3.748,448,2.496,449,2.32,450,2.496,451,1.508,452,2.496,453,2.188,454,1.613,455,2.188,456,1.921,457,2.083,458,2.496,459,3.225,460,2.496,461,2.083,462,2.496,463,1.921,464,2.496,465,2.188,466,2.388,467,2.496,468,1.921,469,2.32,470,1.996,471,3.28,473,1.395,497,2.103,524,2.547,535,1.541,537,3.535,538,2.188,551,3.067,586,1.921,954,3.654,964,5.944,987,2.496,988,3.366,989,2.496,990,2.188,991,2.188,992,2.32,1360,1.697,2213,2.188]],["component/24",[7,0.337,16,0.33]],["keyword/24",[]],["title/25-1",[15,26.874,144,28.284,246,24.868]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["keyword/25-1",[]],["title/25-2",[125,25.24,487,35.39,996,42.735,2279,42.735]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["keyword/25-2",[]],["title/25-3",[26,28.799,246,24.868,286,31.818]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["keyword/25-3",[]],["title/25-4",[246,24.868,261,25.626,472,43.008]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["keyword/25-4",[]],["title/25",[246,32.773]],["name/25",[246,0.653]],["text/25",[0,0.781,2,1.002,6,1.111,7,0.684,11,1.432,13,2.793,14,1.027,15,1.727,16,1.575,17,0.796,21,0.754,22,0.754,25,3.042,26,3.909,27,2.058,29,0.926,30,1.622,31,2.378,38,1.286,39,1.117,41,1.225,43,0.717,50,0.754,51,0.926,53,2.267,54,1.634,58,4.217,60,1.494,64,1.414,65,1.34,66,3.114,73,1.354,75,0.796,82,1.851,86,0.511,92,1.308,93,2.53,95,1.208,96,1.85,99,1.834,102,0.811,106,2.121,112,1.972,113,4.025,119,0.706,124,0.903,125,2.985,131,0.863,132,0.695,133,1.166,144,2.193,163,2.365,165,4.297,166,0.796,168,1.027,177,0.754,178,0.729,179,3.091,181,2.233,194,2.582,195,4.167,198,2.985,201,0.754,215,0.926,216,0.977,217,4.792,218,4.297,219,5.259,222,0.977,231,2.193,232,0.767,234,5.271,236,1.117,237,0.95,242,0.796,244,2.793,245,3.108,246,4.386,252,0.754,253,2.321,261,2.503,273,4.348,274,6.131,275,3.074,276,4.572,282,1.039,284,1.006,286,4.202,301,2.044,304,0.845,309,1.677,313,0.767,316,1.558,324,0.926,345,0.95,349,0.781,363,1.076,374,0.845,376,1.46,401,1.006,405,1.166,420,1.006,451,2.001,466,0.827,470,2.647,473,2.232,474,1.397,475,0.882,476,1.558,477,1.397,478,2.461,479,1.006,480,6.802,481,1.898,482,0.754,483,1.397,484,2.162,485,1.225,486,2.466,487,4.454,488,1.006,489,6.407,490,4.768,491,4.348,492,2.969,493,3.916,494,2.059,495,1.039,497,1.286,498,2.716,499,2.647,501,1.225,502,1.397,504,1.397,507,1.006,508,1.225,509,1.898,510,1.397,511,3.334,514,2.866,523,1.594,529,1.117,539,0.977,552,0.882,558,1.225,567,4.035,573,2.14,614,1.225,634,1.166,640,1.039,643,0.977,651,1.117,679,1.834,705,3.101,715,1.166,759,0.926,766,1.039,786,1.039,799,1.397,808,1.166,819,1.594,839,1.397,846,1.166,849,1.972,862,1.117,910,1.117,911,1.117,955,1.299,959,3.426,962,1.225,971,1.299,1012,1.225,1060,1.117,1070,1.898,1082,1.299,1095,1.039,1098,2.292,1181,1.724,1190,1.076,1282,1.299,1288,1.039,1303,1.299,1314,1.299,1322,1.076,1354,3.712,1357,1.225,1407,1.006,1461,1.972,1540,2.647,1580,1.299,1584,1.776,1590,1.166,1591,1.117,1592,1.117,1593,1.166,1594,1.166,1595,1.166,1596,1.117,1597,2.059,1598,2.059,1599,2.059,1600,2.059,1607,2.292,1628,1.166,1629,1.166,1630,1.166,1632,1.299,1633,1.166,1634,2.763,1638,1.166,1639,1.166,1640,2.059,1651,2.162,1652,2.162,1692,1.225,1694,2.903,1696,1.225,1726,1.299,1794,1.299,1795,1.299,1796,1.397,1803,1.299,1811,2.466,1960,1.397,2209,1.397,2213,1.225,2226,1.299,2279,2.292,2280,1.547,2281,1.547,2282,1.397,2283,1.397,2284,1.547,2285,1.547,2286,1.547,2287,2.466,2288,1.547,2289,1.547,2290,1.547,2291,1.547,2292,1.547,2293,1.547,2294,1.547,2295,2.73,2296,6.02,2297,6.02,2298,5.786,2299,1.547,2300,1.547,2301,1.547,2302,2.73,2303,1.547,2304,2.73,2305,1.547,2306,4.559,2307,1.547,2308,1.547,2309,1.547,2310,2.73,2311,1.547,2312,1.547,2313,1.547,2314,1.547,2315,1.547,2316,1.547,2317,1.397,2318,1.397,2319,1.547,2320,1.547,2321,2.466,2322,1.547,2323,1.547,2324,1.547,2325,2.73,2326,1.547,2327,2.73,2328,3.665,2329,1.547,2330,1.547,2331,1.547,2332,1.547,2333,1.547,2334,1.547,2335,3.665,2336,1.547,2337,1.547,2338,1.547,2339,1.547,2340,1.547,2341,1.547,2342,1.547,2343,1.547,2344,1.547,2345,1.547,2346,1.547,2347,1.547,2348,1.547,2349,1.547,2350,1.547,2351,1.547,2352,1.547,2353,1.547,2354,6.406,2355,3.994,2356,4.422,2357,1.547,2358,1.547]],["component/25",[7,0.337,16,0.33]],["keyword/25",[]],["title/26-1",[7,14.298,16,14.026,664,41.204]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["keyword/26-1",[]],["title/26-2",[177,36.629]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["keyword/26-2",[]],["title/26",[391,48.901]],["name/26",[391,0.975]],["text/26",[2,1.838,5,3.077,6,2.305,7,2.252,8,1.708,16,2.304,17,1.642,19,1.48,21,4.111,22,3.932,27,3.342,30,1.171,33,1.529,40,3.986,50,3.012,51,1.911,53,1.434,60,3.107,64,3.045,65,2.887,66,2.217,68,3.912,73,1.583,82,1.171,86,2.789,92,3.866,95,1.413,97,2.22,102,1.674,104,1.781,106,1.907,111,1.333,119,1.457,120,1.821,121,1.865,125,1.583,126,4.242,130,1.48,132,2.777,136,1.743,137,1.865,139,3.009,140,1.556,141,2.925,144,1.583,146,1.529,147,2.679,154,1.612,159,1.171,166,1.642,168,2.324,173,3.259,177,3.012,178,2.36,179,3.574,181,2.217,184,3.164,194,2.925,195,2.077,196,3.364,198,3.111,201,1.556,203,1.743,205,1.821,208,1.743,215,1.911,219,3.012,222,2.016,236,2.306,245,2.794,251,2.016,252,1.556,253,3.613,276,1.612,278,1.821,304,1.743,305,2.4,312,2.735,313,1.583,320,1.821,324,1.911,341,2.998,349,2.529,350,2.306,352,1.743,355,2.22,374,1.743,375,1.911,386,2.626,390,2.144,425,2.529,428,2.306,443,3.526,444,2.407,445,2.306,466,2.679,471,4.088,473,1.612,476,2.857,481,2.22,482,1.556,487,2.22,493,2.077,500,2.22,514,1.642,521,2.407,524,1.821,528,3.618,532,4.661,535,2.794,543,3.777,544,1.961,549,3.777,559,1.911,586,2.22,589,4.701,601,2.925,643,2.016,659,2.22,667,2.077,674,2.144,675,2.22,676,2.884,677,2.529,679,2.144,680,2.306,682,2.884,683,2.884,684,2.884,685,2.407,686,2.529,687,4.206,688,2.529,689,2.884,690,2.681,691,2.407,692,2.884,693,2.144,694,2.884,695,2.407,696,2.884,697,2.884,698,2.306,701,2.681,703,1.911,704,2.681,705,1.961,707,2.077,709,3.618,710,3.618,711,2.144,714,2.681,715,2.407,716,2.529,717,2.884,718,2.681,846,2.407,954,2.077,959,3.306,1153,2.681,1286,2.529,1360,1.961,1576,2.407,2359,3.193,2360,3.193,2361,3.193,2362,3.193,2363,3.193,2364,3.193,2365,3.193,2366,3.193,2367,2.884,2368,3.193]],["component/26",[7,0.337,16,0.33]],["keyword/26",[]],["title/27-1",[198,25.008,542,43.56]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["keyword/27-1",[]],["title/27-2",[86,21.435,111,27.089]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["keyword/27-2",[]],["title/27-3",[2,18.673,6,15.43,30,18.673,497,23.981]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["keyword/27-3",[]],["title/27-4",[2,18.673,30,18.673,86,16.821,497,23.981]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["keyword/27-4",[]],["title/27",[106,21.715,181,25.24,198,21.992]],["name/27",[656,1.354]],["text/27",[2,2.785,6,2.063,7,1.413,16,2.006,19,1.027,21,1.079,25,1.209,26,1.118,27,2.472,29,2.227,30,2.653,31,1.044,33,1.061,38,2.656,50,2.344,53,2.532,58,1.079,60,2.124,64,0.708,65,0.671,66,1.647,75,1.139,82,1.365,86,2.249,89,1.326,95,4.063,106,3.006,111,2.009,118,2.286,119,1.698,124,4.224,125,2.386,130,1.725,131,1.236,139,0.876,144,1.845,154,1.118,159,0.813,163,3.015,168,2.119,179,1.576,181,3.359,184,1.399,194,3.67,198,2.789,218,4.33,219,5.383,231,1.845,232,1.098,235,1.098,242,2.475,244,1.399,252,1.079,253,1.435,261,1.672,277,1.488,284,1.441,286,3.144,305,1.782,309,3.86,316,2.123,321,1.361,324,1.326,325,1.061,343,1.161,352,1.209,363,1.54,376,3.361,390,1.488,394,2.688,404,1.236,418,1.86,443,1.264,451,1.209,457,2.806,473,1.879,482,1.813,497,3.408,498,1.361,514,2.475,518,1.67,534,1.6,542,3.785,552,1.264,559,1.326,570,2.806,575,2.587,576,3.919,586,1.54,588,1.754,599,1.67,641,1.67,657,1.67,658,2.001,659,1.54,660,4.039,661,1.86,662,2.001,663,3.124,664,2.688,665,2.001,712,1.441,754,1.488,793,2.001,819,2.173,925,1.294,959,4.484,1007,1.754,1014,1.86,1060,1.6,1070,2.587,1181,2.35,1189,2.688,1190,1.54,1312,1.86,1322,1.54,1407,1.441,1408,1.86,1410,2.001,1440,3.785,1461,4.539,1540,4.539,1576,1.67,1590,1.67,1591,1.6,1592,1.6,1593,1.67,1594,1.67,1595,1.67,1596,1.6,1597,2.806,1598,2.806,1599,2.806,1600,2.806,1601,1.86,1602,5.713,1620,1.86,1628,1.67,1629,1.67,1630,1.67,1633,1.67,1634,1.67,1638,1.67,1639,1.67,1640,5.131,1651,2.947,1652,2.947,1678,1.86,1691,2.001,1692,1.754,1694,2.947,1696,1.754,1697,2.001,1720,3.124,1727,1.86,1734,1.86,1735,1.86,1743,3.81,1801,2.001,1902,3.124,2213,2.947,2275,2.001,2369,2.215,2370,2.215,2371,2.215,2372,2.215,2373,2.215,2374,2.215,2375,2.215,2376,2.215,2377,2.215,2378,2.215,2379,2.215,2380,7.233,2381,3.721,2382,3.361,2383,3.721,2384,7.233,2385,5.092,2386,3.361,2387,2.215,2388,2.001,2389,2.215,2390,6.805,2391,2.215,2392,5.637,2393,3.721,2394,3.721,2395,3.721,2396,3.721,2397,2.215,2398,2.215,2399,6.805,2400,2.215,2401,2.215,2402,2.215,2403,2.001,2404,2.215,2405,2.215,2406,3.721,2407,2.215,2408,3.361,2409,2.215,2410,5.637,2411,2.215,2412,2.215,2413,2.215,2414,4.811,2415,2.215,2416,2.215,2417,2.215,2418,2.001,2419,2.215,2420,3.721,2421,2.215,2422,2.215,2423,2.215,2424,2.215,2425,2.001,2426,2.215,2427,2.215,2428,2.215,2429,3.721,2430,2.215,2431,2.215,2432,2.215,2433,2.001,2434,2.215,2435,2.215,2436,2.215,2437,2.215,2438,2.215,2439,2.215,2440,2.215,2441,2.215,2442,2.215,2443,2.215,2444,2.215,2445,2.215,2446,2.215,2447,2.215,2448,2.215,2449,2.215,2450,2.215,2451,2.215,2452,2.215,2453,2.215,2454,3.721,2455,2.215,2456,2.215,2457,2.215,2458,2.215]],["component/27",[7,0.337,16,0.33]],["keyword/27",[]],["title/28-1",[27,17.4,40,23.225,253,19.625,1360,31.27]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["keyword/28-1",[]],["title/28-2",[27,17.4,40,23.225,92,24.383,253,19.625]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["keyword/28-2",[]],["title/28-3",[6,22.787]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["keyword/28-3",[]],["title/28-4",[6,17.291,106,21.715,181,25.24]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["keyword/28-4",[]],["title/28-5",[168,28.262]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["keyword/28-5",[]],["title/28-6",[6,13.93,64,14.694,65,13.93,168,17.278,351,28.232]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["keyword/28-6",[]],["title/28-7",[6,11.664,64,12.303,65,11.664,106,14.648,168,14.466,181,17.026,351,23.638]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["keyword/28-7",[]],["title/28-8",[6,12.697,64,13.393,65,12.697,168,15.747,349,21.147,351,25.732]],["name/28-8",[]],["text/28-8",[]],["component/28-8",[]],["keyword/28-8",[]],["title/28-9",[6,10.786,64,11.378,65,10.786,106,13.546,168,13.378,181,15.745,349,17.965,351,21.86]],["name/28-9",[]],["text/28-9",[]],["component/28-9",[]],["keyword/28-9",[]],["title/28",[513,50.484]],["name/28",[513,1.006]],["text/28",[1,0.874,2,2.206,6,2.566,7,1.215,12,0.983,14,1.151,15,1.442,16,2.256,17,4.982,19,0.817,21,0.859,22,1.492,27,3.438,30,2.012,33,2.628,38,0.83,40,3.27,53,2.464,54,2.428,57,1.574,58,1.492,60,3.209,64,2.534,65,2.463,66,3.298,75,0.907,82,3.628,84,3.814,86,2.619,89,1.055,92,3.69,93,0.576,95,1.355,96,0.89,102,1.605,106,3.665,109,0.844,112,1.273,121,3.772,125,1.518,126,0.983,131,0.983,135,1.147,139,2.38,140,0.859,143,1.083,144,2.72,146,1.466,149,1.147,153,0.817,154,0.89,159,3.366,161,1.113,162,2.562,168,2.694,173,1.991,177,3.492,178,0.83,179,3.887,181,3.595,185,0.859,188,3.152,189,3.152,190,3.152,191,2.83,193,3.406,194,2.369,195,1.147,198,3.133,200,3.814,201,3.492,203,2.995,204,1.637,205,2.764,208,1.671,215,1.055,216,1.113,239,1.055,246,1.769,250,1.083,252,2.673,253,3.661,261,1.823,279,2.128,301,0.983,302,1.329,303,1.055,304,2.215,305,2.628,306,1.226,307,3.603,309,2.977,312,1.671,313,2.403,321,1.881,331,1.605,332,1.029,333,1.273,343,4.584,344,1.881,347,3.464,348,4.068,351,2.492,352,1.671,357,2.821,381,1.083,384,3.684,386,2.541,387,1.832,388,1.881,390,1.184,396,1.273,404,0.983,420,1.147,432,2.562,443,1.006,456,1.226,471,1.788,473,2.048,475,1.006,476,1.006,492,1.184,498,4.991,499,1.273,505,1.329,515,2.087,520,1.396,523,1.029,528,2.211,529,2.211,532,1.329,539,1.113,540,1.147,541,1.055,542,2.056,544,2.977,551,2.215,552,1.006,554,1.226,555,1.329,556,1.396,559,2.428,583,1.329,586,3.369,590,1.113,591,2.639,593,2.725,617,1.055,621,1.184,622,1.273,630,1.48,640,2.056,647,1.48,667,1.147,680,2.211,681,1.226,698,1.273,703,1.055,705,1.083,707,3.152,709,1.273,710,1.273,711,1.184,714,1.48,715,1.329,729,1.396,772,1.273,784,1.592,840,1.273,847,1.592,849,2.211,850,2.765,851,1.273,855,2.765,856,1.226,857,1.592,858,1.396,859,3.213,860,2.765,861,1.592,862,1.273,864,1.592,865,1.592,866,1.48,869,1.396,871,1.396,872,1.396,873,1.48,925,1.029,940,1.184,959,2.17,1034,1.48,1217,1.48,1247,1.48,1327,1.48,1360,1.083,1441,2.424,2199,1.48,2204,1.592,2218,2.765,2273,1.592,2282,1.592,2459,1.763,2460,1.763,2461,3.061,2462,3.061,2463,1.763,2464,1.763,2465,1.763,2466,1.763,2467,1.763,2468,1.763,2469,1.592,2470,1.763,2471,1.763,2472,1.763,2473,4.057,2474,3.061,2475,3.061,2476,1.763,2477,1.763,2478,1.763,2479,3.061,2480,3.061,2481,3.061,2482,1.763,2483,3.061,2484,1.763,2485,1.763,2486,1.763,2487,1.763,2488,1.763,2489,1.763]],["component/28",[7,0.337,16,0.33]],["keyword/28",[]],["title/29-1",[14,21.445,497,26.874,519,36.024]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["keyword/29-1",[]],["title/29",[14,24.386,497,30.559]],["name/29",[771,1.354]],["text/29",[1,1.892,2,0.597,6,2.546,7,0.956,12,2.91,13,1.803,14,2.159,15,1.797,16,1.283,19,0.755,21,1.391,22,1.391,26,2.633,27,2.819,28,1.059,29,1.709,30,0.597,33,1.827,38,1.797,40,1.303,50,0.793,51,0.974,52,2.756,53,2.343,54,3.122,56,1.227,58,1.859,59,1,60,2.092,64,2.524,65,2.588,67,1.367,70,1.176,75,0.837,76,1.985,82,3.222,86,2.669,91,3.627,93,1.247,94,1.059,95,2.542,96,0.822,102,0.853,104,2.91,111,1.193,113,2.063,114,1.918,118,2.816,119,0.743,120,2.615,121,0.951,124,2.228,126,2.91,130,1.324,131,1.593,134,1.227,135,2.481,139,1.509,140,0.793,141,0.951,143,3.803,144,1.892,145,4.403,154,4.078,158,1.289,159,3.848,160,1.367,162,1.028,163,1.527,164,3.453,166,3.184,168,2.472,169,2.975,170,4.423,171,2.397,180,1.059,185,2.799,198,1.768,201,2.799,203,2.083,204,2.79,205,0.929,208,1.559,212,1.918,218,3.532,219,1.391,224,3.706,226,2.756,227,1.059,228,2.683,231,2.273,232,1.892,234,2.481,235,2.273,241,1,242,1.469,246,0.71,252,0.793,255,2.176,256,1.132,261,0.731,276,1.442,277,1.093,278,2.176,281,1,285,1.093,286,1.593,288,1.093,300,1.093,301,0.908,305,0.78,307,2.91,312,3.136,316,0.929,318,2.128,320,0.929,321,1,338,3.503,345,1,347,2.895,350,3.768,352,2.083,375,0.974,376,0.871,383,1.176,387,2.283,388,2.343,392,1.629,404,4.506,426,2.063,432,1.028,436,1.093,443,2.176,446,1.176,447,6.626,451,0.889,453,3.631,466,0.871,468,1.132,469,1.367,473,0.822,475,0.929,478,1.918,479,1.858,482,0.793,493,1.059,497,2.917,506,1.059,508,1.289,514,2.683,515,2.683,519,4.152,522,1.227,524,0.929,534,2.756,541,0.974,551,1.559,552,0.929,557,1.47,567,3.438,569,1.289,571,1.47,575,3.187,576,1.985,577,1.227,578,3.457,585,1.093,599,1.227,601,3.615,617,3.122,621,1.093,643,1.028,661,1.367,667,1.059,674,1.093,675,1.132,690,2.397,691,1.227,703,0.974,705,2.816,706,3.631,707,1.059,709,1.176,711,1.093,721,3.122,723,1.028,729,1.289,732,1.132,733,1.059,772,1.176,773,1.47,774,1.367,775,1.289,776,2.397,778,4.141,780,4.549,781,1.289,782,1.227,785,4.152,786,1.093,787,1.176,788,1.367,798,1.367,806,2.153,813,1.227,816,1.47,819,2.677,822,1.227,826,1.227,828,1.367,842,1.47,859,2.262,862,2.063,866,1.367,889,3.312,910,1.176,916,4.149,919,4.668,956,1.367,957,2.262,958,1.985,959,1.527,981,2.262,999,2.063,1008,1.367,1074,1.367,1083,1.367,1095,1.093,1102,1.176,1106,4.549,1117,1.367,1127,1.629,1156,4.131,1180,1.132,1206,1.367,1208,4.822,1218,2.756,1220,1.289,1234,1.985,1305,1.367,1315,1.367,1406,2.397,1414,1.367,1422,1.367,1435,2.397,1531,1.289,1552,1.367,1582,1.367,1583,1.367,1584,1.858,1636,1.367,1791,1.367,1792,4.131,2198,2.579,2203,2.579,2216,1.47,2221,1.47,2224,1.47,2283,1.47,2367,1.47,2490,2.856,2491,2.856,2492,1.628,2493,1.628,2494,2.856,2495,4.141,2496,2.856,2497,1.628,2498,1.628,2499,1.628,2500,1.628,2501,1.628,2502,3.815,2503,1.628,2504,1.628,2505,1.47,2506,1.47,2507,1.628,2508,2.856,2509,1.628,2510,3.815,2511,2.856,2512,1.628,2513,2.856,2514,1.628,2515,1.628,2516,1.628,2517,1.628,2518,1.628,2519,2.856,2520,1.628,2521,2.856,2522,2.856,2523,2.397,2524,1.628,2525,1.628,2526,1.628,2527,1.628,2528,1.628,2529,1.628,2530,1.628,2531,1.628,2532,1.628,2533,1.628,2534,1.628,2535,2.579,2536,1.628,2537,1.628,2538,1.47,2539,1.628,2540,1.628,2541,1.628,2542,1.628,2543,1.628,2544,1.47]],["component/29",[7,0.337,16,0.33]],["keyword/29",[]],["title/30-1",[242,33.362,391,42.194]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["keyword/30-1",[]],["title/30-2",[874,58.589,876,46.855]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["keyword/30-2",[]],["title/30-3",[153,26.441,376,30.507,877,41.204]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["keyword/30-3",[]],["title/30-4",[60,19.278,878,51.523,879,41.204]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["keyword/30-4",[]],["title/30-5",[175,32.147,879,36.769,880,45.978,881,40.313]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["keyword/30-5",[]],["title/30-6",[153,23.596,882,45.978,883,45.978,884,45.978]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["keyword/30-6",[]],["title/30-7",[60,17.203,153,23.596,885,45.978,886,40.313]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["keyword/30-7",[]],["title/30-8",[16,9.462,68,19.791,153,26.799,887,34.756,888,30.474,889,27.795]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["keyword/30-8",[]],["title/30-9",[232,28.284,613,41.204,890,51.523]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["keyword/30-9",[]],["title/30-10",[60,15.532,153,21.303,232,22.788,891,41.51,892,36.396]],["name/30-10",[]],["text/30-10",[]],["component/30-10",[]],["keyword/30-10",[]],["title/30-11",[153,26.441,303,34.141,893,51.523]],["name/30-11",[]],["text/30-11",[]],["component/30-11",[]],["keyword/30-11",[]],["title/30-12",[153,19.416,303,25.07,551,22.869,894,37.834,895,37.834,896,31.581]],["name/30-12",[]],["text/30-12",[]],["component/30-12",[]],["keyword/30-12",[]],["title/30-13",[24,27.247,153,19.416,590,26.453,897,37.834,898,33.173,899,33.173]],["name/30-13",[]],["text/30-13",[]],["component/30-13",[]],["keyword/30-13",[]],["title/30-14",[16,12.517,139,20.139,374,27.791,673,35.39]],["name/30-14",[]],["text/30-14",[]],["component/30-14",[]],["keyword/30-14",[]],["title/30-15",[139,18.182,673,31.951,900,38.583,901,36.396,902,36.396]],["name/30-15",[]],["text/30-15",[]],["component/30-15",[]],["keyword/30-15",[]],["title/30-16",[126,31.818,903,51.523,904,51.523]],["name/30-16",[]],["text/30-16",[]],["component/30-16",[]],["keyword/30-16",[]],["title/30-17",[877,41.204,905,51.523,906,45.175]],["name/30-17",[]],["text/30-17",[]],["component/30-17",[]],["keyword/30-17",[]],["title/30-18",[6,11.664,65,11.664,139,15.224,140,18.748,733,25.03,907,32.305,908,17.556]],["name/30-18",[]],["text/30-18",[]],["component/30-18",[]],["keyword/30-18",[]],["title/30-19",[159,15.365,169,23.893,170,25.732,909,37.834,910,30.256,911,30.256]],["name/30-19",[]],["text/30-19",[]],["component/30-19",[]],["keyword/30-19",[]],["title/30-20",[6,11.664,27,13.153,65,11.664,733,25.03,912,34.756,913,29.012,914,29.012]],["name/30-20",[]],["text/30-20",[]],["component/30-20",[]],["keyword/30-20",[]],["title/30-21",[27,14.318,145,23.364,159,15.365,166,21.544,915,37.834,916,30.256]],["name/30-21",[]],["text/30-21",[]],["component/30-21",[]],["keyword/30-21",[]],["title/30-22",[159,15.365,169,23.893,366,28.129,917,37.834,918,33.173,919,31.581]],["name/30-22",[]],["text/30-22",[]],["component/30-22",[]],["keyword/30-22",[]],["title/30-23",[159,15.365,164,23.364,169,23.893,366,28.129,721,25.07,920,37.834]],["name/30-23",[]],["text/30-23",[]],["component/30-23",[]],["keyword/30-23",[]],["title/30-24",[27,12.163,161,22.473,162,22.473,401,23.147,908,16.235,921,32.141,922,28.181,923,28.181]],["name/30-24",[]],["text/30-24",[]],["component/30-24",[]],["keyword/30-24",[]],["title/30-25",[2,10.649,60,9.811,64,9.282,65,8.8,66,12.846,299,20.184,335,18.884,497,13.677,908,13.246,924,26.222,925,16.953]],["name/30-25",[]],["text/30-25",[]],["component/30-25",[]],["keyword/30-25",[]],["title/30-26",[6,11.664,60,13.004,125,19.08,363,26.752,466,20.579,908,17.556,926,34.756]],["name/30-26",[]],["text/30-26",[]],["component/30-26",[]],["keyword/30-26",[]],["title/30-27",[25,22.869,43,19.416,125,20.769,482,20.409,908,19.111,927,37.834]],["name/30-27",[]],["text/30-27",[]],["component/30-27",[]],["keyword/30-27",[]],["title/30-28",[211,25.07,544,25.732,551,22.869,908,19.111,928,37.834,929,33.173]],["name/30-28",[]],["text/30-28",[]],["component/30-28",[]],["keyword/30-28",[]],["title/30-29",[19,16.495,64,11.378,65,10.786,276,17.965,401,23.147,544,21.86,908,16.235,930,32.141]],["name/30-29",[]],["text/30-29",[]],["component/30-29",[]],["keyword/30-29",[]],["title/30-30",[60,12.026,163,19.031,307,19.849,341,21.298,523,20.779,908,16.235,925,20.779,931,32.141]],["name/30-30",[]],["text/30-30",[]],["component/30-30",[]],["keyword/30-30",[]],["title/30-31",[10,21.949,169,21.949,305,18.432,712,25.03,713,26.752,908,17.556,932,34.756]],["name/30-31",[]],["text/30-31",[]],["component/30-31",[]],["keyword/30-31",[]],["title/30-32",[217,34.009,933,58.589]],["name/30-32",[]],["text/30-32",[]],["component/30-32",[]],["keyword/30-32",[]],["title/30-33",[228,33.362,934,58.589]],["name/30-33",[]],["text/30-33",[]],["component/30-33",[]],["keyword/30-33",[]],["title/30-34",[10,20.298,146,17.045,204,19.031,305,17.045,343,18.657,732,24.739,925,20.779,935,32.141]],["name/30-34",[]],["text/30-34",[]],["component/30-34",[]],["keyword/30-34",[]],["title/30-35",[10,20.298,60,12.026,64,11.378,65,10.786,146,17.045,305,17.045,936,32.141,937,25.704]],["name/30-35",[]],["text/30-35",[]],["component/30-35",[]],["keyword/30-35",[]],["title/30-36",[108,17.965,109,17.045,712,23.147,713,24.739,908,16.235,938,32.141,939,23.896,940,23.896]],["name/30-36",[]],["text/30-36",[]],["component/30-36",[]],["keyword/30-36",[]],["title/30-37",[60,11.184,64,10.581,65,10.031,108,16.708,109,15.852,146,15.852,937,23.905,939,22.224,941,29.892]],["name/30-37",[]],["text/30-37",[]],["component/30-37",[]],["keyword/30-37",[]],["title/30-38",[60,12.026,108,17.965,109,17.045,146,17.045,154,17.965,939,23.896,942,32.141,943,28.181]],["name/30-38",[]],["text/30-38",[]],["component/30-38",[]],["keyword/30-38",[]],["title/30-39",[108,21.147,109,20.064,146,20.064,589,28.129,940,28.129,944,37.834]],["name/30-39",[]],["text/30-39",[]],["component/30-39",[]],["keyword/30-39",[]],["title/30-40",[551,22.869,721,25.07,763,31.581,908,19.111,945,37.834,946,31.581]],["name/30-40",[]],["text/30-40",[]],["component/30-40",[]],["keyword/30-40",[]],["title/30-41",[114,25.84,139,15.224,908,17.556,947,34.756,948,34.756,949,34.756,950,30.474]],["name/30-41",[]],["text/30-41",[]],["component/30-41",[]],["keyword/30-41",[]],["title/30-42",[62,28.394,232,25.24,300,34.184,316,29.036]],["name/30-42",[]],["text/30-42",[]],["component/30-42",[]],["keyword/30-42",[]],["title/30",[139,22.568,140,27.793,141,33.31]],["name/30",[139,0.593]],["text/30",[0,1.285,1,0.222,2,2.327,5,0.275,6,2.685,7,1.047,8,1.648,10,1.285,11,1.864,12,0.25,14,0.324,15,0.211,16,2.151,18,0.311,19,1.845,21,0.42,22,0.218,24,0.561,25,2.061,26,0.226,27,2.763,30,1.728,31,0.406,33,1.703,36,0.65,38,0.406,39,0.623,40,3.019,43,1.541,44,1.192,47,1.92,48,1.16,50,0.945,51,2.612,53,1.877,54,0.961,55,0.724,56,0.338,57,2.801,58,0.608,59,0.986,60,3.318,62,1.082,64,2.116,65,2.685,66,2.223,68,2.867,73,1.763,75,1.31,76,1.566,82,1.897,86,1.099,89,0.961,92,1.352,94,0.291,95,0.858,96,1.425,97,0.311,99,0.838,102,0.842,104,0.481,106,0.328,107,2.016,108,2.749,109,2.544,111,0.187,114,1.895,118,0.766,119,0.733,120,1.757,121,1.133,123,0.311,124,0.504,125,2.995,126,1.42,128,0.311,130,1.044,132,0.387,133,0.65,134,0.941,135,0.561,137,1.487,139,2.652,140,1.375,142,0.579,143,1.384,144,2.071,145,1.082,146,2.729,147,1.205,148,0.867,149,1.045,153,4.068,154,1.555,155,3.551,156,0.355,159,1.948,161,1.608,162,2.1,163,1.205,166,0.444,168,1.497,169,3.106,170,2.043,173,0.291,175,1.782,177,1.839,178,0.211,180,0.291,181,0.382,185,0.782,191,0.262,195,0.561,196,0.301,201,1.501,203,2.382,204,2.605,205,0.492,208,1.815,209,0.338,211,2.819,212,1.513,214,0.6,215,0.747,216,0.788,217,0.654,218,1.452,219,3.802,222,0.788,224,0.747,228,0.642,231,2.164,232,1.974,234,0.811,235,1.117,237,0.986,238,1.192,239,0.747,241,0.53,242,0.23,245,0.481,246,0.544,250,0.986,252,3.224,253,0.869,255,1.107,261,2.257,267,0.25,275,1.349,276,1.555,278,1.897,282,1.513,283,1.014,284,0.811,286,0.25,288,0.301,299,1.349,300,1.513,301,2.105,303,2.383,304,0.471,305,3.522,307,2.33,309,0.53,312,0.681,313,0.222,314,0.338,315,0.338,316,0.255,318,1.257,319,0.311,320,1.107,321,0.53,324,0.268,325,0.929,331,1.615,333,0.324,334,0.355,335,2.838,336,0.811,337,0.561,341,1.524,342,0.683,343,2.469,344,0.53,345,0.275,346,0.338,347,0.283,349,0.63,355,0.867,359,0.324,363,2.472,366,1.513,369,0.683,374,0.245,381,0.766,384,0.579,401,3.063,415,0.683,417,0.338,419,1.272,421,0.324,426,0.324,428,0.901,432,0.545,433,0.283,434,0.355,436,0.301,438,0.338,439,0.941,442,0.291,443,2.271,445,0.623,446,0.623,451,1.059,457,1.699,465,0.988,466,3.287,468,0.6,470,0.324,471,0.728,472,0.338,473,1.679,476,1.757,478,2.069,481,0.311,482,2.212,485,0.355,487,1.77,488,0.561,489,2.225,490,6.592,492,0.838,493,2.004,494,1.211,497,2.294,499,0.324,500,0.311,501,1.272,505,0.338,506,0.811,507,0.561,509,0.311,511,1.211,513,0.579,515,0.444,517,0.376,519,0.545,522,0.338,523,0.728,524,2.949,525,1.839,527,0.623,533,0.324,534,0.324,535,0.481,537,0.355,538,2.633,539,2.1,540,2.717,541,0.516,543,0.338,544,1.564,545,0.355,546,1.348,547,0.683,550,1.629,551,4.436,552,0.916,554,1.349,555,0.941,559,0.516,565,0.65,567,1.689,583,0.338,585,0.838,589,0.301,590,2.638,591,1.045,593,0.301,601,0.938,606,2.016,608,0.988,613,0.324,619,0.683,620,0.283,621,3.567,622,1.627,623,0.355,635,0.324,636,0.683,639,0.867,641,0.338,642,0.355,643,1.014,645,0.376,646,0.324,651,0.623,652,0.355,657,0.941,659,0.311,667,0.561,668,0.988,669,0.724,673,3.961,674,0.301,677,0.355,679,2.233,685,0.65,691,0.338,693,0.301,695,0.65,698,0.324,702,0.724,703,0.268,705,0.986,707,0.291,709,0.324,710,0.324,711,2.805,712,1.045,713,2.312,721,0.961,723,0.788,724,0.376,732,2.472,733,3.063,738,0.338,739,0.988,754,0.301,759,1.689,763,1.211,766,0.301,772,0.324,780,0.683,782,0.338,785,0.788,786,0.579,787,1.401,789,0.311,802,0.724,806,0.338,812,1.047,813,0.338,820,0.355,823,0.65,826,0.65,840,0.623,844,1.348,845,0.941,849,2.569,851,0.623,858,2.235,862,1.16,863,3.169,868,1.272,869,1.537,871,1.784,872,0.355,876,0.324,877,0.623,879,0.324,881,1.537,886,0.683,888,0.683,889,2.038,892,0.988,896,1.211,898,0.355,899,0.355,901,1.272,902,1.537,906,0.683,908,0.733,910,0.324,911,1.16,913,1.92,914,0.941,916,0.324,918,0.683,919,2.323,922,0.683,923,2.016,925,2.75,929,1.272,937,1.16,939,1.078,940,1.303,943,0.683,946,0.338,950,1.784,951,0.405,952,1.127,953,0.405,954,2.717,955,2.369,956,0.376,957,1.537,958,1.77,959,1.362,960,3.342,961,1.127,962,1.784,963,1.127,964,5.827,965,1.45,966,0.405,967,1.752,968,0.405,969,0.405,970,1.127,971,0.376,972,0.405,973,0.405,974,0.405,975,0.405,976,2.549,977,0.779,978,1.127,979,1.127,980,0.779,981,0.355,982,0.405,983,0.355,988,0.338,990,0.355,992,2.369,993,0.376,994,1.784,995,0.355,996,0.376,997,1.656,998,1.127,999,2.726,1000,0.405,1001,0.405,1002,0.405,1003,0.376,1004,0.405,1005,0.779,1006,0.405,1007,0.683,1008,0.376,1009,0.405,1010,0.405,1011,1.127,1012,0.683,1013,0.779,1014,0.376,1015,0.779,1016,0.405,1017,3.773,1018,0.405,1019,3.003,1020,0.405,1021,1.891,1022,0.779,1023,0.376,1024,0.405,1025,0.405,1026,0.405,1027,0.405,1028,0.405,1029,0.405,1030,0.779,1031,0.779,1032,0.779,1033,0.779,1034,1.047,1035,0.779,1036,0.779,1037,1.127,1038,1.127,1039,0.779,1040,0.405,1041,1.45,1042,0.779,1043,0.779,1044,0.405,1045,0.405,1046,0.405,1047,1.127,1048,1.45,1049,0.405,1050,1.127,1051,0.405,1052,0.941,1053,0.779,1054,0.405,1055,0.405,1056,0.779,1057,0.405,1058,0.405,1059,0.724,1060,0.901,1061,0.405,1062,0.405,1063,0.405,1064,0.405,1065,0.405,1066,0.405,1067,1.891,1068,0.724,1069,1.127,1070,0.311,1071,0.405,1072,0.405,1073,0.405,1074,0.724,1075,0.724,1076,3.409,1077,0.405,1078,2.3,1079,0.724,1080,0.405,1081,0.779,1082,1.629,1083,1.629,1084,0.779,1085,0.405,1086,0.405,1087,0.405,1088,0.405,1089,0.405,1090,1.752,1091,0.405,1092,0.405,1093,0.724,1094,1.127,1095,1.513,1096,0.405,1097,2.035,1098,2.369,1099,0.724,1100,1.127,1101,0.405,1102,0.623,1103,0.405,1104,0.405,1105,1.127,1106,0.355,1107,1.629,1108,0.779,1109,0.779,1110,1.45,1111,0.405,1112,1.127,1113,0.405,1114,0.779,1115,1.45,1116,0.779,1117,1.348,1118,1.127,1119,1.566,1120,0.405,1121,0.779,1122,0.405,1123,0.405,1124,0.779,1125,0.405,1126,1.127,1127,0.255,1128,0.405,1129,1.752,1130,0.405,1131,0.779,1132,1.127,1133,0.405,1134,0.405,1135,1.127,1136,1.127,1137,0.405,1138,0.405,1139,0.405,1140,0.405,1141,0.405,1142,0.405,1143,0.405,1144,0.405,1145,0.405,1146,0.405,1147,0.405,1148,0.405,1149,0.405,1150,0.405,1151,0.623,1152,0.779,1153,0.376,1154,0.779,1155,0.405,1156,0.988,1157,0.405,1158,0.405,1159,0.405,1160,2.783,1161,0.405,1162,2.783,1163,1.127,1164,1.127,1165,0.779,1166,0.779,1167,0.405,1168,0.405,1169,0.405,1170,0.405,1171,0.405,1172,0.405,1173,0.355,1174,0.405,1175,0.405,1176,0.405,1177,0.405,1178,0.405,1179,0.405,1180,0.311,1181,0.545,1182,0.405,1183,0.405,1184,0.405,1185,0.405,1186,0.405,1187,0.405,1188,0.405,1189,0.623,1190,0.311,1191,0.405,1192,0.405,1193,0.779,1194,0.405,1195,0.405,1196,0.405,1197,0.405,1198,0.405,1199,0.405,1200,0.779,1201,0.405,1202,1.127,1203,1.752,1204,0.405,1205,0.405,1206,0.724,1207,1.127,1208,0.376,1209,0.405,1210,0.405,1211,0.779,1212,0.779,1213,0.405,1214,1.752,1215,0.338,1216,0.376,1217,0.724,1218,0.623,1219,0.779,1220,0.355,1221,0.405,1222,0.376,1223,0.779,1224,0.779,1225,0.405,1226,1.127,1227,0.376,1228,1.629,1229,0.405,1230,0.405,1231,0.405,1232,1.047,1233,0.405,1234,0.311,1235,0.405,1236,0.405,1237,0.779,1238,0.779,1239,0.779,1240,0.724,1241,0.724,1242,1.752,1243,0.6,1244,0.405,1245,0.405,1246,1.127,1247,1.047,1248,0.405,1249,1.45,1250,0.405,1251,0.405,1252,0.405,1253,0.405,1254,0.405,1255,0.376,1256,0.405,1257,0.779,1258,0.405,1259,0.405,1260,0.405,1261,0.405,1262,0.779,1263,0.779,1264,0.376,1265,0.376,1266,0.405,1267,0.988,1268,0.355,1269,0.405,1270,0.405,1271,0.779,1272,1.047,1273,0.405,1274,0.338,1275,0.405,1276,0.405,1277,0.405,1278,0.405,1279,0.355,1280,0.376,1281,0.376,1282,0.376,1283,0.355,1284,0.405,1285,0.405,1286,0.355,1287,0.405,1288,0.579,1289,1.45,1290,0.779,1291,0.405,1292,0.405,1293,0.376,1294,0.405,1295,0.405,1296,0.405,1297,0.405,1298,0.405,1299,0.405,1300,1.45,1301,1.45,1302,1.127,1303,0.376,1304,0.405,1305,0.376,1306,0.405,1307,0.405,1308,3.212,1309,1.127,1310,1.127,1311,0.779,1312,1.629,1313,0.405,1314,0.376,1315,0.724,1316,0.779,1317,0.405,1318,0.779,1319,0.405,1320,0.376,1321,0.405,1322,0.311,1323,0.405,1324,0.405,1325,0.405,1326,0.405,1327,0.376,1328,0.405,1329,0.405,1330,0.779,1331,0.779,1332,0.779,1333,0.405,1334,0.779,1335,0.779,1336,0.779,1337,0.779,1338,1.127,1339,0.405,1340,0.376,1341,0.405,1342,0.405,1343,0.779,1344,0.405,1345,0.405,1346,0.405,1347,0.405,1348,0.405,1349,0.779,1350,0.779,1351,0.405,1352,0.405,1353,0.405,1354,0.376,1355,0.405,1356,0.779,1357,0.355,1358,0.405,1359,0.405,1360,0.275,1361,0.405,1362,0.405,1363,0.405,1364,0.405,1365,0.405,1366,0.405,1367,0.405,1368,0.405,1369,1.127,1370,0.779,1371,0.355,1372,0.405,1373,0.405,1374,0.405,1375,0.405,1376,0.405,1377,0.405,1378,0.405,1379,0.405,1380,0.405,1381,0.405,1382,0.405,1383,0.405,1384,0.405,1385,0.405,1386,0.405,1387,0.405,1388,0.405,1389,0.405,1390,0.405]],["component/30",[7,0.337,16,0.33]],["keyword/30",[]],["title/31-1",[86,18.85,111,23.822,1584,37.105]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["keyword/31-1",[]],["title/31-2",[30,18.673,86,16.821,93,16.636,1584,33.112]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["keyword/31-2",[]],["title/31-3",[482,31.605,1440,43.56]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["keyword/31-3",[]],["title/31-4",[14,19.137,86,16.821,93,16.636,1584,33.112]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["keyword/31-4",[]],["title/31-5",[514,29.339,819,33.31,1584,37.105]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["keyword/31-5",[]],["title/31-6",[86,18.85,111,23.822,392,32.538]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["keyword/31-6",[]],["title/31-7",[30,18.673,86,16.821,93,16.636,392,29.036]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["keyword/31-7",[]],["title/31-8",[231,28.284,392,32.538,819,33.31]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["keyword/31-8",[]],["title/31-9",[14,19.137,86,16.821,93,16.636,392,29.036]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["keyword/31-9",[]],["title/31",[86,21.435,111,27.089]],["name/31",[1401,1.187]],["text/31",[1,0.987,6,1.349,7,0.993,12,0.607,13,0.688,14,1.978,15,1.296,16,1.094,24,0.708,25,0.595,26,2.246,27,2.72,28,0.708,29,1.647,30,2.055,31,0.513,33,1.318,38,0.938,40,1.807,50,0.531,53,0.489,54,0.652,64,1.889,65,1.791,75,1.024,79,0.862,82,1.009,86,2.393,92,0.954,93,1.831,94,0.708,95,0.482,102,0.571,106,0.415,111,1.858,119,0.497,122,0.821,124,3.891,130,1.836,139,0.431,144,1.686,147,0.582,148,0.757,154,0.55,163,2.814,168,1.978,181,0.482,194,3.072,198,0.42,201,1.657,218,5.746,219,5.452,227,4.471,228,1.024,230,1.672,231,2.609,232,1.686,235,1.686,238,1.69,242,0.56,244,0.688,246,2.696,252,0.531,253,0.42,255,0.621,261,1.779,277,1.337,286,3.941,301,1.535,318,0.607,324,0.652,331,0.571,338,0.731,341,0.652,345,1.223,349,0.55,386,0.571,387,3.353,392,1.939,393,0.821,443,0.621,451,0.595,472,0.821,473,1.005,482,1.657,491,4.046,492,0.731,497,1.866,506,0.708,514,1.024,518,0.821,523,0.636,539,0.688,552,3.92,567,1.192,576,1.384,601,1.607,632,0.787,653,0.984,664,0.787,674,1.337,675,0.757,681,0.757,688,0.862,703,1.192,716,0.862,723,1.738,755,0.914,759,0.652,781,0.862,808,1.501,819,4.574,821,5.443,959,3.873,997,0.708,1070,2.364,1093,0.914,1095,0.731,1180,1.384,1181,2.147,1189,0.787,1190,1.384,1272,0.914,1274,0.821,1288,0.731,1322,1.384,1371,0.862,1401,3.524,1406,0.914,1407,1.295,1408,1.672,1412,0.914,1414,2.31,1418,0.914,1422,0.914,1435,1.672,1440,5.562,1441,0.862,1461,5.46,1481,0.914,1531,1.577,1540,5.562,1570,5.096,1571,0.862,1572,4.964,1575,0.984,1576,0.821,1580,2.31,1582,1.672,1583,1.672,1584,4.596,1587,0.914,1588,0.984,1589,0.984,1590,1.501,1591,1.438,1592,1.438,1593,1.501,1594,1.501,1595,1.501,1596,1.438,1597,2.563,1598,2.563,1599,2.563,1600,2.563,1601,0.914,1602,4.703,1603,5.812,1604,5.059,1605,5.812,1606,5.059,1607,4.703,1608,4.703,1609,4.703,1615,3.071,1616,0.984,1618,0.984,1619,4.019,1620,5.191,1621,4.019,1622,4.019,1623,4.019,1626,0.984,1628,1.501,1629,1.501,1630,1.501,1632,1.672,1633,1.501,1634,5.182,1638,0.821,1639,1.501,1640,5.806,1642,0.984,1646,2.485,1651,1.577,1652,2.693,1661,0.984,1678,0.914,1692,1.577,1694,2.179,1696,0.862,1708,1.799,1711,1.799,1720,2.854,1721,0.984,1726,0.914,1727,0.914,1734,1.672,1735,1.672,1771,0.984,1792,0.862,1794,0.914,1795,0.914,1803,1.672,1822,0.984,1823,1.799,2206,5.77,2219,6.019,2226,5.594,2238,1.799,2298,5.812,2306,4.019,2317,0.984,2318,0.984,2382,1.799,2385,4.019,2386,3.071,2388,1.799,2403,0.984,2408,3.071,2418,0.984,2425,0.984,2433,1.799,2535,3.577,2538,0.984,2545,1.089,2546,1.089,2547,2.751,2548,1.089,2549,1.089,2550,1.991,2551,1.991,2552,1.991,2553,1.089,2554,1.991,2555,1.089,2556,1.089,2557,1.089,2558,1.089,2559,1.089,2560,1.089,2561,1.089,2562,1.089,2563,1.089,2564,1.089,2565,1.089,2566,1.089,2567,1.089,2568,1.089,2569,1.991,2570,1.089,2571,1.089,2572,1.089,2573,1.089,2574,1.089,2575,1.089,2576,1.089,2577,1.089,2578,1.089,2579,1.089,2580,1.089,2581,1.089,2582,1.089,2583,2.751,2584,0.984,2585,1.089,2586,1.089,2587,1.089,2588,1.089,2589,1.089,2590,1.089,2591,1.991,2592,5.601,2593,5.601,2594,1.089,2595,1.089,2596,3.96,2597,1.089,2598,1.089,2599,4.879,2600,1.089,2601,1.089,2602,1.089,2603,1.089,2604,1.089,2605,1.991,2606,1.089,2607,1.089,2608,1.089,2609,4.449,2610,4.449,2611,4.449,2612,4.449,2613,2.751,2614,1.089,2615,1.089,2616,1.089,2617,1.089,2618,1.089,2619,1.089,2620,1.089,2621,1.089,2622,1.089,2623,1.089,2624,1.089,2625,1.089,2626,1.089,2627,1.089,2628,1.089,2629,1.089,2630,1.089,2631,1.089,2632,1.089,2633,1.089,2634,1.089,2635,1.089,2636,1.089,2637,1.089,2638,1.089,2639,1.089,2640,1.089,2641,1.089,2642,1.089,2643,1.089,2644,1.089,2645,1.089,2646,1.089,2647,1.089,2648,1.089,2649,1.089,2650,1.089,2651,1.089,2652,1.089,2653,1.089,2654,1.089,2655,1.089,2656,1.089,2657,1.089]],["component/31",[7,0.337,16,0.33]],["keyword/31",[]],["title/32-1",[2658,67.902]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["keyword/32-1",[]],["title/32-2",[2659,67.902]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["keyword/32-2",[]],["title/32-3",[331,29.907,535,31.818,2660,47.889]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["keyword/32-3",[]],["title/32-4",[64,12.303,65,11.664,66,17.026,130,17.837,132,17.286,198,14.835,620,24.301]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["keyword/32-4",[]],["title/32",[64,18.239,65,17.291,535,31.818]],["name/32",[140,0.73]],["text/32",[2,1.98,7,2.546,16,2.497,25,2.946,27,2.519,31,3.472,43,2.502,53,2.425,60,2.837,64,2.684,65,2.734,66,4.178,72,4.069,73,2.676,92,2.585,130,4.181,132,2.425,139,2.135,140,3.591,141,3.152,177,3.591,198,3.64,217,2.83,221,4.069,235,2.676,245,5.437,253,2.842,267,5.031,386,2.83,404,4.111,441,3.511,461,4.069,463,3.752,475,3.079,515,2.776,524,4.204,525,3.898,535,3.01,620,3.408,632,3.898,639,5.836,703,3.23,721,3.23,786,3.624,983,4.274,1151,3.898,1234,3.752,1279,4.274,1360,3.315,1853,4.531,1897,4.274,2523,8.183,2661,9.011,2662,7.582,2663,4.875,2664,4.875,2665,7.582,2666,7.582,2667,4.531,2668,4.875,2669,4.875,2670,4.875]],["component/32",[1127,1.332]],["keyword/32",[]],["title/33-1",[31,30.559,2671,58.589]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["keyword/33-1",[]],["title/33",[1243,52.265]],["name/33",[1243,1.042]],["text/33",[2,2.61,27,2.432,40,3.246,43,4.091,62,3.969,73,3.528,108,3.592,267,3.969,276,4.456,320,4.058,323,4.371,352,3.884,441,4.628,466,3.805,549,5.364,587,5.634,590,5.574,754,4.778,759,4.258,829,7.972,856,6.136,925,4.155,954,5.741,994,6.989,1102,5.139,1151,5.139,1227,5.973,1234,4.946,2672,7.114,2673,8.825,2674,7.114,2675,7.114,2676,7.114,2677,7.114,2678,6.426,2679,7.114,2680,7.114,2681,7.114,2682,6.426,2683,7.114,2684,7.114,2685,7.114]],["component/33",[1127,1.332]],["keyword/33",[]],["title/34-1",[245,36.182,261,29.141]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["keyword/34-1",[]],["title/34-2",[22,27.793,785,36.024,2686,51.523]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["keyword/34-2",[]],["title/34-3",[2,18.673,261,22.868,497,23.981,514,26.181]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["keyword/34-3",[]],["title/34",[8,34.691,785,40.965]],["name/34",[2687,1.499]],["text/34",[2,2.175,6,2.955,7,1.486,8,5.616,16,1.458,27,2.027,30,3.438,64,3.39,65,3.28,86,2.595,126,4.38,130,2.748,168,2.952,177,3.826,235,2.94,245,3.307,261,2.664,267,4.38,312,4.287,318,3.307,443,3.382,471,3.462,473,3.964,582,5.92,664,4.283,687,4.978,759,3.549,785,5.56,868,4.696,959,3.171,1181,5.918,1407,5.726,1417,4.978,1591,4.283,1592,5.672,1596,5.672,2688,7.851,2689,5.929,2690,5.929,2691,7.851,2692,5.929,2693,5.929,2694,5.929,2695,5.929]],["component/34",[1127,1.332]],["keyword/34",[]],["title/35-1",[64,18.239,65,17.291,217,29.907]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["keyword/35-1",[]],["title/35-2",[524,37.001,841,51.371]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["keyword/35-2",[]],["title/35-3",[997,42.194,1119,45.097]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["keyword/35-3",[]],["title/35-4",[336,42.194,876,46.855]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["keyword/35-4",[]],["title/35",[64,14.694,65,13.93,267,25.635,515,23.637,2696,41.51]],["name/35",[267,0.836]],["text/35",[1,1.361,2,3.036,5,1.687,6,0.832,11,1.439,19,1.273,22,1.338,27,2.922,31,1.293,44,1.687,51,1.643,53,2.887,57,4.257,60,1.89,62,3.937,64,3.304,65,3.208,66,3.886,67,2.305,68,3.63,69,5.052,70,1.983,73,1.361,75,1.412,80,2.174,86,1.848,92,1.315,102,1.439,109,1.315,132,2.887,137,1.603,139,1.757,144,2.773,147,2.991,148,1.909,159,2.052,161,1.734,164,2.477,165,1.566,166,1.412,168,1.032,175,1.734,179,1.881,184,1.734,201,1.338,204,3.437,208,1.499,211,1.643,215,2.658,217,1.439,219,1.338,220,1.983,226,1.983,232,1.361,235,1.361,238,1.687,239,1.643,245,2.477,252,3.131,253,1.058,255,1.566,267,5.495,275,1.909,278,1.566,299,1.909,312,2.425,316,1.566,320,1.566,331,1.439,333,1.983,335,1.786,336,3.638,343,1.439,346,2.07,352,2.425,359,4.04,384,1.844,417,2.07,420,4.18,423,5.589,429,3.517,433,1.734,435,2.305,436,1.844,439,2.07,441,4.591,442,1.786,443,2.534,446,3.208,454,1.603,456,1.909,459,1.983,461,3.349,463,3.088,466,1.468,468,1.909,470,5.455,473,1.386,476,1.566,482,2.725,493,1.786,495,1.844,507,1.786,508,2.174,509,1.909,513,2.983,515,2.284,519,2.805,524,3.191,529,3.208,535,1.531,539,2.805,540,3.638,541,1.643,551,3.054,587,4.43,590,1.734,620,1.734,622,3.208,634,2.07,637,3.729,646,1.983,679,1.844,695,2.07,703,1.643,721,1.643,729,2.174,732,1.909,733,4.18,738,2.07,754,2.983,759,1.643,798,3.729,815,2.305,841,2.174,849,5.455,859,2.174,876,3.208,916,4.04,925,2.594,954,3.638,958,1.909,960,2.305,962,2.174,988,2.07,993,2.305,994,3.517,995,2.174,997,2.889,1007,2.174,1021,4.696,1052,3.349,1067,4.696,1068,4.696,1079,2.305,1102,1.983,1119,1.909,1151,1.983,1218,3.208,1228,2.305,1234,1.909,1243,1.909,1255,2.305,1283,3.517,1286,2.174,1288,1.844,1445,4.642,2200,2.305,2287,2.48,2355,4.012,2505,4.012,2506,2.48,2544,2.48,2584,2.48,2660,2.305,2686,2.48,2697,4.441,2698,2.745,2699,4.441,2700,2.745,2701,2.745,2702,2.48,2703,2.745,2704,2.745,2705,2.745,2706,2.745,2707,6.426,2708,2.745,2709,4.441,2710,4.441,2711,2.745,2712,2.745,2713,2.745,2714,2.745,2715,2.745,2716,2.745,2717,2.745,2718,2.745,2719,2.745,2720,2.745,2721,2.745,2722,2.745,2723,4.441,2724,2.745,2725,2.745,2726,2.745,2727,4.441,2728,2.745,2729,2.745,2730,2.745,2731,2.745,2732,2.745,2733,2.745]],["component/35",[1127,1.332]],["keyword/35",[]],["title/36-1",[2734,75.173]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["keyword/36-1",[]],["title/36-2",[267,41.933]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["keyword/36-2",[]],["title/36-3",[57,21.544,64,13.393,65,12.697,212,28.129,224,25.07,1218,30.256]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["keyword/36-3",[]],["title/36",[93,18.642,323,35.042,441,37.105]],["name/36",[441,0.975]],["text/36",[0,4.328,11,2.948,16,1.864,27,2.591,30,2.063,38,3.57,43,3.513,57,4.409,59,3.454,60,1.9,64,2.933,65,3.057,68,2.892,70,4.062,93,2.477,106,3.756,108,3.826,109,3.63,110,6.192,116,3.658,129,4.24,140,2.74,165,3.208,185,4.807,206,4.453,214,3.909,231,3.758,233,5.474,267,4.227,301,3.137,304,3.07,394,5.474,396,6.918,397,5.079,398,5.079,412,4.721,432,3.551,614,4.453,624,5.079,651,4.062,664,5.474,754,3.776,856,5.269,954,3.658,995,4.453,1218,6.192,1220,4.453,1243,3.909,1445,4.062,2279,4.721,2469,7.743,2735,5.623,2736,5.623,2737,5.623,2738,5.623,2739,5.623,2740,5.623,2741,8.572,2742,5.623,2743,5.623,2744,5.623,2745,5.623,2746,5.623,2747,5.623,2748,5.623,2749,5.623,2750,5.623]],["component/36",[1127,1.332]],["keyword/36",[]],["title/37",[179,21.559,253,19.625,475,29.036,515,26.181]],["name/37",[2250,1.354]],["text/37",[2,2.621,31,3.366,40,3.259,59,4.389,60,2.99,63,6.453,73,3.542,93,2.335,179,3.747,185,3.481,239,4.276,253,3.411,254,4.797,357,4.967,376,3.821,404,3.985,454,4.172,473,3.607,475,4.075,476,4.075,515,4.944,579,5.386,580,5.658,581,5.997,582,5.386,815,5.997,822,5.386,1102,5.16,1280,5.997,1877,5.997,2671,6.453,2678,6.453,2682,6.453,2751,7.143,2752,7.143,2753,7.143,2754,7.143,2755,7.143,2756,7.143,2757,7.143,2758,7.143,2759,7.143,2760,7.143,2761,7.143]],["component/37",[1127,1.332]],["keyword/37",[]],["title/38-1",[16,12.517,159,18.673,396,36.769,856,35.39]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["keyword/38-1",[]],["title/38-2",[159,23.794,2762,64.863]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["keyword/38-2",[]],["title/38-3",[8,27.224,64,16.276,65,15.43,1407,33.112]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["keyword/38-3",[]],["title/38-4",[8,27.224,64,16.276,65,15.43,1181,32.147]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["keyword/38-4",[]],["title/38-5",[215,44.995]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["keyword/38-5",[]],["title/38",[0,28.799,140,27.793,165,32.538]],["name/38",[2763,1.499]],["text/38",[0,2.522,1,3.464,2,1.832,6,2.442,7,1.751,8,4.912,16,1.228,17,3.593,19,2.315,27,3.139,33,2.393,56,3.766,59,3.068,64,2.79,65,2.961,75,2.569,86,1.651,92,3.347,95,2.21,111,2.086,119,2.279,126,2.786,130,4.045,139,1.976,144,4.327,146,3.86,147,2.671,148,3.473,149,3.249,152,4.193,153,2.315,155,3.766,159,3.201,165,2.849,166,3.593,184,3.154,201,3.404,208,3.814,222,3.154,245,2.786,325,2.393,331,2.619,343,3.663,349,2.522,433,3.154,454,2.917,455,3.956,459,3.608,515,2.569,585,3.354,785,3.154,958,3.473,959,3.737,988,5.268,990,5.533,999,5.047,1052,5.268,1127,3.985,1181,5.089,1274,3.766,1407,5.974,1417,5.865,1743,3.956,2196,4.512,2321,6.311,2495,4.512,2702,7.278,2764,4.995,2765,6.986,2766,4.995,2767,4.995,2768,6.986,2769,4.995,2770,6.986,2771,4.995,2772,6.986,2773,6.986,2774,6.986,2775,6.986,2776,6.986,2777,4.995,2778,4.995,2779,4.995,2780,4.995,2781,4.995,2782,4.995,2783,4.995,2784,4.995,2785,4.995,2786,4.995,2787,4.995,2788,4.995]],["component/38",[1127,1.332]],["keyword/38",[]],["title/39-1",[997,42.194,1119,45.097]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["keyword/39-1",[]],["title/39-2",[64,18.239,65,17.291,535,31.818]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["keyword/39-2",[]],["title/39-3",[2658,67.902]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["keyword/39-3",[]],["title/39-4",[2659,67.902]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["keyword/39-4",[]],["title/39-5",[331,29.907,535,31.818,2660,47.889]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["keyword/39-5",[]],["title/39-6",[64,12.303,65,11.664,66,17.026,130,17.837,132,17.286,198,14.835,620,24.301]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["keyword/39-6",[]],["title/39",[2696,67.902]],["name/39",[2789,1.499]],["text/39",[2,1.903,7,2.522,16,2.474,25,2.833,27,2.452,31,3.379,43,2.405,53,2.331,60,2.779,64,2.836,65,2.822,66,4.12,72,3.912,73,2.573,92,2.485,130,4.112,132,2.331,139,2.053,140,3.495,141,3.03,177,3.495,198,3.59,217,2.72,221,3.912,235,2.573,245,5.372,253,2.766,267,5.194,357,3.607,386,2.72,404,4.001,441,3.375,454,4.189,461,3.912,463,3.607,475,2.959,515,2.668,524,4.69,525,3.748,535,2.894,620,4.53,632,3.748,639,5.716,703,3.105,721,3.105,786,3.484,983,5.681,997,3.375,1119,3.607,1151,3.748,1180,3.607,1234,3.607,1279,4.109,1360,3.187,1445,3.748,1853,4.356,1897,4.109,2523,8.085,2661,8.916,2662,7.427,2663,4.686,2664,4.686,2665,7.427,2666,7.427,2667,4.356,2668,4.686,2669,4.686,2670,4.686]],["component/39",[1127,1.332]],["keyword/39",[]],["title/40",[495,43.56,1444,54.457]],["name/40",[1444,1.258]],["text/40",[27,2.81,64,2.629,65,2.919,68,4.229,145,4.586,175,5.192,454,5.623,481,5.716,495,5.521,1052,6.199,1222,6.902,2790,8.221,2791,8.221,2792,8.221,2793,8.221]],["component/40",[1127,1.332]],["keyword/40",[]],["title/41",[57,26.181,896,38.379,1445,51.137]],["name/41",[2794,1.499]],["text/41",[7,0.697,11,1.458,12,2.503,14,2.671,16,0.684,27,1.534,57,2.308,60,1.516,65,1.36,76,1.933,130,1.289,170,1.708,177,1.355,208,2.45,233,5.131,312,1.518,325,1.332,342,2.202,343,3.394,552,2.56,620,1.756,738,2.096,739,7.593,740,8.92,741,9.056,775,7.275,794,2.511,827,2.511,828,8.049,834,8.142,843,2.511,914,3.383,958,3.12,959,1.487,999,3.241,1106,2.202,1445,4.075,1870,2.511,2667,2.334,2795,2.78,2796,2.78,2797,2.78,2798,4.487,2799,11.078,2800,11.053,2801,9.875,2802,10.152,2803,4.487,2804,2.78,2805,8.817,2806,2.78,2807,2.78,2808,2.78,2809,7.103,2810,2.78,2811,4.487,2812,2.78,2813,2.78,2814,2.78,2815,2.78,2816,2.78,2817,2.78,2818,4.487,2819,5.641,2820,2.78,2821,2.78,2822,2.78,2823,2.78,2824,4.487,2825,2.78,2826,2.78,2827,2.78,2828,2.78,2829,2.78,2830,4.487,2831,2.78,2832,4.487,2833,4.487,2834,2.78,2835,4.487,2836,2.78,2837,4.487,2838,4.487,2839,2.78,2840,4.487,2841,2.78,2842,2.78,2843,2.78,2844,4.487,2845,8.315,2846,2.78,2847,2.78,2848,2.78,2849,4.487,2850,2.78,2851,2.78,2852,2.78,2853,4.487,2854,2.78,2855,2.78,2856,4.487,2857,4.487,2858,2.78,2859,2.78,2860,2.78,2861,4.487,2862,2.78,2863,2.78,2864,2.78,2865,4.487,2866,2.78,2867,2.78,2868,4.487,2869,2.78,2870,2.78,2871,4.487,2872,2.78,2873,2.78]],["component/41",[1127,1.332]],["keyword/41",[]]],"invertedIndex":[["",{"_index":219,"title":{"20-13":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"13":{},"15":{},"16":{},"17":{},"19":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["0",{"_index":1189,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"27":{},"30":{},"31":{}},"component":{},"keyword":{}}],["0.05rem",{"_index":1490,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["0.1",{"_index":562,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["0.2",{"_index":1990,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["0.5rem",{"_index":2007,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["0.95em",{"_index":2001,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["0.9em",{"_index":1977,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["000",{"_index":1519,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["0000",{"_index":2746,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["00000000",{"_index":2745,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["000000000000",{"_index":2749,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["00000096",{"_index":1500,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["00000098",{"_index":1517,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["00010211724",{"_index":2863,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010216276",{"_index":2870,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010220335",{"_index":2873,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010221523",{"_index":2867,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010232708",{"_index":2859,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010238349",{"_index":2847,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010266756",{"_index":2855,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010267350",{"_index":2851,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["00010299944",{"_index":2816,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["0066cc",{"_index":1923,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["00:00.00",{"_index":2768,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["01.01.2011",{"_index":2829,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["010111",{"_index":2825,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["020100",{"_index":2814,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["03.10.2024",{"_index":2782,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["030303",{"_index":2819,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["030403",{"_index":2845,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["04",{"_index":1253,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["040404",{"_index":2833,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["04d\".format(result",{"_index":2436,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["05",{"_index":2662,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["05.11.2024",{"_index":2796,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["050404",{"_index":2810,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["05040400032",{"_index":2806,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["050405",{"_index":2803,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["06",{"_index":2666,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["07fff49bd963a210a7f0b079283704d6",{"_index":2779,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["09.12.2024",{"_index":2737,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["0e20714e18d8c3bee183cc07f74ea14",{"_index":2766,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["0i9aoayhqqkzvivoqb4xd2tcfksdk",{"_index":1746,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["0u8",{"_index":2567,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["0x2d",{"_index":745,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["0xbc",{"_index":2542,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["1",{"_index":242,"title":{"4-3":{},"15-1":{},"22-3":{},"30-1":{}},"name":{},"text":{"2":{},"3":{},"7":{},"10":{},"15":{},"16":{},"17":{},"19":{},"20":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["1.0",{"_index":1876,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["1.1",{"_index":874,"title":{"15-2":{},"30-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["1.125rem",{"_index":1485,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["1.1em",{"_index":1957,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1.2",{"_index":875,"title":{"15-3":{}},"name":{},"text":{},"component":{},"keyword":{}}],["1.2.840.113549.1.1.11",{"_index":1431,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["1.2.840.113549.1.1.12",{"_index":1434,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["1.2.840.113549.1.1.13",{"_index":1436,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["1.2em",{"_index":1978,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.1",{"_index":1165,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.2",{"_index":1167,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.3",{"_index":1168,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.4",{"_index":1169,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.5",{"_index":1170,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.6",{"_index":1172,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51361.1.1.7",{"_index":1175,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.51455.1.1.1",{"_index":1177,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1.3.6.1.4.1.62306.5.7.0",{"_index":2520,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["1.3.6.1.5.5.7.3.2",{"_index":2528,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["1.4",{"_index":1970,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1.5em",{"_index":1935,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1.6",{"_index":1934,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1.75",{"_index":1503,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["1.875rem",{"_index":1488,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["10",{"_index":632,"title":{},"name":{},"text":{"7":{},"20":{},"23":{},"31":{},"32":{},"39":{}},"component":{},"keyword":{}}],["10.10.2024",{"_index":2771,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["100",{"_index":1535,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["1000",{"_index":799,"title":{},"name":{},"text":{"13":{},"25":{}},"component":{},"keyword":{}}],["10000",{"_index":2380,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["10004",{"_index":2831,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["1000px",{"_index":1537,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["10012",{"_index":2820,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10016",{"_index":2846,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10024",{"_index":2850,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10032",{"_index":2854,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10040",{"_index":2858,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10059",{"_index":2862,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10067",{"_index":2866,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10075",{"_index":2869,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10083",{"_index":2872,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10215",{"_index":2823,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["10_000).to_s.rjust(4",{"_index":2456,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["10px",{"_index":1949,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["11",{"_index":1805,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["12",{"_index":1806,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["120",{"_index":1263,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["120000",{"_index":797,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["12223",{"_index":2827,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["1234",{"_index":1262,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["1234567890",{"_index":753,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["12px",{"_index":1986,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["13",{"_index":1807,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["13330",{"_index":2804,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["13px",{"_index":1476,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["14",{"_index":1808,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["15",{"_index":98,"title":{},"name":{},"text":{"1":{},"18":{},"20":{}},"component":{},"keyword":{}}],["150px",{"_index":1984,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["15px",{"_index":1956,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["16",{"_index":1853,"title":{},"name":{},"text":{"20":{},"32":{},"39":{}},"component":{},"keyword":{}}],["16px",{"_index":1516,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["17",{"_index":1854,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["18",{"_index":1870,"title":{},"name":{},"text":{"20":{},"41":{}},"component":{},"keyword":{}}],["1885",{"_index":2674,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["1888",{"_index":2685,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["18886",{"_index":2843,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["19",{"_index":1871,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["195.13.185.55",{"_index":2738,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["19980",{"_index":2836,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["19993",{"_index":2811,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["19999",{"_index":2834,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["1].unpack('n*').first",{"_index":2455,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["1em",{"_index":1932,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1f1bfa89",{"_index":262,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["1px",{"_index":1953,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["1s",{"_index":594,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":1762,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["2",{"_index":376,"title":{"4-2":{},"4-3":{},"15-4":{},"22-2":{},"22-3":{},"30-3":{}},"name":{},"text":{"6":{},"7":{},"10":{},"17":{},"19":{},"20":{},"23":{},"25":{},"27":{},"29":{},"37":{}},"component":{},"keyword":{}}],["2.1",{"_index":878,"title":{"15-5":{},"30-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.1.1",{"_index":880,"title":{"15-6":{},"30-5":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.2",{"_index":882,"title":{"15-7":{},"30-6":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.2.1",{"_index":885,"title":{"15-8":{},"30-7":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.2.2",{"_index":887,"title":{"15-9":{},"30-8":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.2.3",{"_index":2515,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["2.3",{"_index":890,"title":{"15-10":{},"30-9":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.3.1",{"_index":891,"title":{"15-11":{},"30-10":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.4",{"_index":893,"title":{"15-12":{},"30-11":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.4.1",{"_index":894,"title":{"15-13":{},"30-12":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.4.2",{"_index":897,"title":{"15-14":{},"30-13":{}},"name":{},"text":{},"component":{},"keyword":{}}],["2.5.4.5",{"_index":2532,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["20",{"_index":639,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"23":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["200",{"_index":39,"title":{},"name":{},"text":{"1":{},"6":{},"15":{},"18":{},"25":{},"30":{}},"component":{},"keyword":{}}],["2020",{"_index":2777,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["2021e",{"_index":2812,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["2024",{"_index":1569,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["2024.09.18",{"_index":2767,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["2024.10.03",{"_index":2780,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["2024e",{"_index":2807,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["2025",{"_index":2523,"title":{},"name":{},"text":{"29":{},"32":{},"39":{}},"component":{},"keyword":{}}],["2025.10.15",{"_index":2781,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["2025.10.20",{"_index":2769,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["203.0.113.34",{"_index":833,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["20px",{"_index":1952,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["21",{"_index":1895,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["212529",{"_index":1998,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["22",{"_index":1897,"title":{},"name":{},"text":{"20":{},"23":{},"32":{},"39":{}},"component":{},"keyword":{}}],["23",{"_index":1899,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["23474",{"_index":2826,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["23:59:59",{"_index":2770,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["24",{"_index":823,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"20":{},"30":{}},"component":{},"keyword":{}}],["25",{"_index":1900,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["256",{"_index":576,"title":{},"name":{},"text":{"7":{},"17":{},"20":{},"21":{},"27":{},"29":{},"31":{}},"component":{},"keyword":{}}],["256(interact",{"_index":2588,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["256(interactions))|interactiontypeused|initialcallbackurl|flowtyp",{"_index":2537,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["256(rpchalleng",{"_index":2378,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["25px",{"_index":1941,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["26",{"_index":1911,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["2612",{"_index":2676,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["2616",{"_index":35,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["27",{"_index":1912,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["28",{"_index":1913,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["29",{"_index":2670,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["29990",{"_index":2815,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["2])<<8",{"_index":2421,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["2db2",{"_index":1399,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["2px",{"_index":1945,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["3",{"_index":374,"title":{"4-2":{},"15-15":{},"22-1":{},"22-2":{},"30-14":{}},"name":{},"text":{"7":{},"9":{},"10":{},"15":{},"19":{},"20":{},"22":{},"23":{},"25":{},"26":{},"30":{}},"component":{},"keyword":{}}],["3.0.3",{"_index":373,"title":{"4-1":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["3.1",{"_index":900,"title":{"15-16":{},"22-1":{},"30-15":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.1.1",{"_index":903,"title":{"15-17":{},"30-16":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.1.2",{"_index":905,"title":{"15-18":{},"30-17":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.1.3",{"_index":1446,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["3.10",{"_index":932,"title":{"15-32":{},"30-31":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.10.1",{"_index":933,"title":{"15-33":{},"30-32":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.10.2",{"_index":934,"title":{"15-34":{},"30-33":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.10.3",{"_index":935,"title":{"15-35":{},"30-34":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.10.4",{"_index":936,"title":{"15-36":{},"30-35":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.11",{"_index":938,"title":{"15-37":{},"30-36":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.11.1",{"_index":941,"title":{"15-38":{},"30-37":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.11.2",{"_index":942,"title":{"15-39":{},"30-38":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.11.3",{"_index":944,"title":{"15-40":{},"30-39":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.12",{"_index":945,"title":{"15-41":{},"30-40":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.13",{"_index":947,"title":{"15-42":{},"30-41":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.2",{"_index":907,"title":{"15-19":{},"30-18":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["3.2.1",{"_index":909,"title":{"15-20":{},"30-19":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.2.2",{"_index":912,"title":{"15-21":{},"30-20":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.2.3",{"_index":915,"title":{"15-22":{},"30-21":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.2.4",{"_index":917,"title":{"15-23":{},"30-22":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.2.5",{"_index":920,"title":{"15-24":{},"30-23":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.3",{"_index":921,"title":{"15-25":{},"30-24":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.4",{"_index":924,"title":{"15-26":{},"30-25":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.5",{"_index":926,"title":{"15-27":{},"30-26":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.6",{"_index":927,"title":{"15-28":{},"30-27":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.7",{"_index":928,"title":{"15-29":{},"30-28":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.8",{"_index":930,"title":{"15-30":{},"30-29":{}},"name":{},"text":{},"component":{},"keyword":{}}],["3.9",{"_index":931,"title":{"15-31":{},"30-30":{}},"name":{},"text":{},"component":{},"keyword":{}}],["30",{"_index":240,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["30001010004",{"_index":2533,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["30303039816",{"_index":2821,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30303039903",{"_index":2830,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30303039914",{"_index":2818,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039917",{"_index":2844,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039928",{"_index":2849,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039939",{"_index":2853,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039946",{"_index":2857,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039950",{"_index":2861,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039961",{"_index":2865,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039972",{"_index":2868,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30403039983",{"_index":2871,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["30px",{"_index":1985,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["311299",{"_index":2837,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["3166",{"_index":736,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["319",{"_index":725,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["32",{"_index":123,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"15":{},"16":{},"17":{},"30":{}},"component":{},"keyword":{}}],["329999",{"_index":2838,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["32]byte",{"_index":2418,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["32px",{"_index":1482,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["333",{"_index":1937,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["339900",{"_index":1924,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["370",{"_index":2679,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["371",{"_index":2675,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["372",{"_index":829,"title":{},"name":{},"text":{"13":{},"33":{}},"component":{},"keyword":{}}],["384",{"_index":1433,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["39901012239",{"_index":2822,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["3fxz00x",{"_index":1779,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["3px",{"_index":1995,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["3rd",{"_index":2686,"title":{"34-2":{}},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["4",{"_index":316,"title":{"15-43":{},"30-42":{}},"name":{},"text":{"2":{},"8":{},"15":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["400",{"_index":41,"title":{},"name":{},"text":{"1":{},"6":{},"18":{},"25":{}},"component":{},"keyword":{}}],["4000",{"_index":2747,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["401",{"_index":115,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["403",{"_index":206,"title":{},"name":{},"text":{"2":{},"3":{},"16":{},"36":{}},"component":{},"keyword":{}}],["404",{"_index":214,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"15":{},"16":{},"30":{},"36":{}},"component":{},"keyword":{}}],["40404049985",{"_index":2835,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["40404049996",{"_index":2832,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["40504040001",{"_index":2798,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["40504049999",{"_index":2808,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["40px",{"_index":1492,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["412",{"_index":726,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["420a",{"_index":264,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["431b",{"_index":292,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"16":{}},"component":{},"keyword":{}}],["444",{"_index":2003,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["45b4",{"_index":1397,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["4648",{"_index":1423,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{},"keyword":{}}],["471",{"_index":55,"title":{},"name":{},"text":{"1":{},"15":{},"30":{}},"component":{},"keyword":{}}],["472",{"_index":61,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["480",{"_index":71,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["48010010101",{"_index":751,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["48px",{"_index":1496,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["4927",{"_index":329,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["49912318881",{"_index":2842,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["4f8b",{"_index":263,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["4px",{"_index":1491,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["5",{"_index":634,"title":{},"name":{},"text":{"7":{},"20":{},"23":{},"25":{},"35":{}},"component":{},"keyword":{}}],["500",{"_index":46,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["50001029996",{"_index":2813,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["512",{"_index":1435,"title":{},"name":{},"text":{"17":{},"29":{},"31":{}},"component":{},"keyword":{}}],["5245",{"_index":2680,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["555",{"_index":1964,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["580",{"_index":74,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["5px",{"_index":1946,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["6",{"_index":1772,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["6(1",{"_index":1385,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["60",{"_index":485,"title":{},"name":{},"text":{"6":{},"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["610",{"_index":2673,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["61101012257",{"_index":2824,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["61moe3pr7ug0rcc8c",{"_index":1769,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["62.65.42.57",{"_index":2736,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["639",{"_index":581,"title":{},"name":{},"text":{"7":{},"23":{},"37":{}},"component":{},"keyword":{}}],["64",{"_index":1414,"title":{},"name":{},"text":{"17":{},"29":{},"31":{}},"component":{},"keyword":{}}],["64]byte",{"_index":2624,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["64px",{"_index":1527,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["6897",{"_index":2681,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["6px",{"_index":2005,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["7",{"_index":1636,"title":{},"name":{},"text":{"20":{},"23":{},"29":{}},"component":{},"keyword":{}}],["700px",{"_index":1948,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["7180",{"_index":2457,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["72px",{"_index":1524,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["75b4",{"_index":291,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"16":{}},"component":{},"keyword":{}}],["7964",{"_index":2677,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["8",{"_index":29,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"16":{},"18":{},"20":{},"23":{},"25":{},"27":{},"29":{},"31":{}},"component":{},"keyword":{}}],["8')).digest",{"_index":2615,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["8.5",{"_index":2721,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["8000",{"_index":2748,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["80px",{"_index":1972,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["81.16.238.22",{"_index":2739,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["8px",{"_index":1525,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["9",{"_index":1791,"title":{},"name":{},"text":{"20":{},"23":{},"29":{}},"component":{},"keyword":{}}],["90",{"_index":1532,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["900",{"_index":1480,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["91.223.243.57",{"_index":2740,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["950",{"_index":1479,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["960px",{"_index":1530,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["987654321012",{"_index":749,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["99709",{"_index":2841,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["99901",{"_index":2839,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["_",{"_index":1580,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["_').replac",{"_index":2086,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["_/static/rp",{"_index":1448,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["_cert_choic",{"_index":2864,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["_confirmationmessag",{"_index":2856,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["_displaytextandpin",{"_index":2848,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["_vc_choic",{"_index":2852,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["_with_vc_choic",{"_index":2860,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["a.2.4",{"_index":1430,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["a31b",{"_index":1398,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["a98",{"_index":265,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["abort",{"_index":1229,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["abov",{"_index":640,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"20":{},"21":{},"23":{},"25":{},"28":{}},"component":{},"keyword":{}}],["absent",{"_index":2512,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["accept",{"_index":366,"title":{"15-23":{},"15-24":{},"30-22":{},"30-23":{}},"name":{},"text":{"3":{},"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["access",{"_index":432,"title":{},"name":{},"text":{"5":{},"7":{},"14":{},"15":{},"23":{},"24":{},"28":{},"29":{},"30":{},"36":{}},"component":{},"keyword":{}}],["accident",{"_index":1027,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["accomplish",{"_index":2364,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["accord",{"_index":747,"title":{},"name":{},"text":{"10":{},"17":{}},"component":{},"keyword":{}}],["account",{"_index":57,"title":{"41":{},"36-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"10":{},"13":{},"14":{},"15":{},"16":{},"19":{},"21":{},"24":{},"28":{},"30":{},"35":{},"36":{},"41":{}},"component":{},"keyword":{}}],["achiev",{"_index":2196,"title":{},"name":{},"text":{"21":{},"38":{}},"component":{},"keyword":{}}],["acsp_v1",{"_index":183,"title":{"13-4":{},"17-1":{}},"name":{},"text":{"2":{},"4":{},"13":{},"17":{},"20":{},"22":{}},"component":{},"keyword":{}}],["acsp_v2",{"_index":1584,"title":{"31-1":{},"31-2":{},"31-4":{},"31-5":{}},"name":{},"text":{"20":{},"22":{},"25":{},"29":{},"31":{}},"component":{},"keyword":{}}],["acsp_v2_payload",{"_index":2535,"title":{},"name":{},"text":{"29":{},"31":{}},"component":{},"keyword":{}}],["acsp_v2_payload_part",{"_index":2629,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["acsp_v2_payload_parts.join(separ",{"_index":2630,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["acspv2digest",{"_index":2641,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["acspv2digestcalcul",{"_index":2591,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["acspv2payload",{"_index":2599,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["act",{"_index":1371,"title":{},"name":{},"text":{"15":{},"20":{},"30":{},"31":{}},"component":{},"keyword":{}}],["action",{"_index":962,"title":{},"name":{},"text":{"15":{},"25":{},"30":{},"35":{}},"component":{},"keyword":{}}],["activ",{"_index":342,"title":{},"name":{},"text":{"3":{},"15":{},"30":{},"41":{}},"component":{},"keyword":{}}],["actual",{"_index":507,"title":{},"name":{},"text":{"6":{},"7":{},"13":{},"15":{},"17":{},"23":{},"25":{},"30":{},"35":{}},"component":{},"keyword":{}}],["ad",{"_index":337,"title":{},"name":{},"text":{"3":{},"4":{},"8":{},"15":{},"16":{},"17":{},"20":{},"22":{},"30":{}},"component":{},"keyword":{}}],["adapt",{"_index":2689,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["adb2",{"_index":293,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"16":{}},"component":{},"keyword":{}}],["add",{"_index":129,"title":{},"name":{},"text":{"1":{},"18":{},"20":{},"22":{},"36":{}},"component":{},"keyword":{}}],["addit",{"_index":51,"title":{"11":{}},"name":{},"text":{"1":{},"11":{},"13":{},"15":{},"21":{},"22":{},"25":{},"26":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["addreject",{"_index":1116,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["address",{"_index":109,"title":{"15-37":{},"15-38":{},"15-39":{},"15-40":{},"30-36":{},"30-37":{},"30-38":{},"30-39":{}},"name":{},"text":{"1":{},"2":{},"3":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"21":{},"28":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["addtrust",{"_index":1123,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["adher",{"_index":1140,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["adjust",{"_index":1915,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["adleman",{"_index":1426,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["adult",{"_index":2817,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["advanc",{"_index":212,"title":{"36-3":{}},"name":{},"text":{"2":{},"3":{},"13":{},"15":{},"16":{},"29":{},"30":{}},"component":{},"keyword":{}}],["advanced/qualifi",{"_index":225,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["advanced/qualified/qscd",{"_index":372,"title":{},"name":{},"text":{"3":{},"16":{}},"component":{},"keyword":{}}],["affect",{"_index":584,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["affirm",{"_index":972,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["aforement",{"_index":694,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["afterward",{"_index":2719,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["ag",{"_index":2828,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["again",{"_index":79,"title":{},"name":{},"text":{"1":{},"14":{},"23":{},"31":{}},"component":{},"keyword":{}}],["against",{"_index":889,"title":{"15-9":{},"30-8":{}},"name":{},"text":{"15":{},"20":{},"29":{},"30":{}},"component":{},"keyword":{}}],["agent",{"_index":555,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["agre",{"_index":259,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"16":{},"23":{}},"component":{},"keyword":{}}],["ahead",{"_index":615,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["aia",{"_index":2506,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{},"keyword":{}}],["aia.demo.sk.e",{"_index":2726,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["aim",{"_index":602,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["aitm",{"_index":174,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["alarm",{"_index":1245,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["alert",{"_index":937,"title":{"15-36":{},"15-38":{},"30-35":{},"30-37":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["alert(\"pleas",{"_index":2147,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["alert(`an",{"_index":2184,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["algorithm",{"_index":228,"title":{"15-34":{},"17-3":{},"17-4":{},"30-33":{}},"name":{},"text":{"2":{},"5":{},"7":{},"12":{},"13":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"24":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["align",{"_index":1938,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["allow",{"_index":96,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["allowedinteractionsord",{"_index":243,"title":{"6-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"13":{},"16":{},"22":{}},"component":{},"keyword":{}}],["along",{"_index":661,"title":{},"name":{},"text":{"8":{},"27":{},"29":{}},"component":{},"keyword":{}}],["alpha",{"_index":737,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["alphabet",{"_index":824,"title":{},"name":{},"text":{"13":{},"17":{},"20":{}},"component":{},"keyword":{}}],["alphanumeric4",{"_index":311,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{},"keyword":{}}],["alreadi",{"_index":591,"title":{},"name":{},"text":{"7":{},"10":{},"14":{},"15":{},"17":{},"18":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["altern",{"_index":701,"title":{},"name":{},"text":{"9":{},"14":{},"26":{}},"component":{},"keyword":{}}],["although",{"_index":952,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["alway",{"_index":715,"title":{},"name":{},"text":{"9":{},"21":{},"25":{},"26":{},"28":{}},"component":{},"keyword":{}}],["amount",{"_index":477,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["analysi",{"_index":1358,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["anchor",{"_index":2496,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["and(last_2_bytes_bitmask",{"_index":2396,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["and/or",{"_index":546,"title":{},"name":{},"text":{"7":{},"15":{},"30":{}},"component":{},"keyword":{}}],["android",{"_index":463,"title":{},"name":{},"text":{"5":{},"7":{},"23":{},"24":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["anew",{"_index":1404,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["annoy",{"_index":886,"title":{"15-8":{},"30-7":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["anonym",{"_index":200,"title":{"10-1":{}},"name":{},"text":{"2":{},"7":{},"10":{},"14":{},"23":{},"28":{}},"component":{},"keyword":{}}],["anonymis",{"_index":1342,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["anoth",{"_index":1013,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["anymor",{"_index":2230,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["anyon",{"_index":2764,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["anyth",{"_index":2784,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["apach",{"_index":1129,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["api",{"_index":7,"title":{"1":{},"18":{},"1-4":{},"1-5":{},"4-2":{},"4-3":{},"18-4":{},"18-5":{},"19-1":{},"22-1":{},"22-2":{},"22-3":{},"26-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"38":{},"39":{},"41":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"keyword":{}}],["api.smart",{"_index":396,"title":{"38-1":{}},"name":{},"text":{"4":{},"13":{},"14":{},"28":{},"36":{}},"component":{},"keyword":{}}],["api_detail",{"_index":20,"title":{},"name":{"1":{},"18":{}},"text":{},"component":{},"keyword":{}}],["api_specif",{"_index":1442,"title":{},"name":{"19":{}},"text":{},"component":{},"keyword":{}}],["api_v3.yml",{"_index":1449,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["api’",{"_index":1402,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["app",{"_index":66,"title":{"15-26":{},"30-25":{},"32-4":{},"39-6":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"9":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["app2app",{"_index":388,"title":{"21-3":{}},"name":{},"text":{"4":{},"7":{},"10":{},"14":{},"20":{},"21":{},"22":{},"23":{},"28":{},"29":{}},"component":{},"keyword":{}}],["appear",{"_index":2285,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["append",{"_index":1855,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["appendix",{"_index":1429,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["appl",{"_index":460,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["appli",{"_index":1095,"title":{},"name":{},"text":{"15":{},"17":{},"20":{},"21":{},"25":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["applic",{"_index":126,"title":{"15-17":{},"30-16":{}},"name":{},"text":{"1":{},"9":{},"13":{},"14":{},"15":{},"18":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"38":{}},"component":{},"keyword":{}}],["appreci",{"_index":993,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["approach",{"_index":1281,"title":{},"name":{},"text":{"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["appropri",{"_index":981,"title":{},"name":{},"text":{"15":{},"20":{},"29":{},"30":{}},"component":{},"keyword":{}}],["app’",{"_index":2211,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["april",{"_index":2522,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["arg",{"_index":1600,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["aris",{"_index":1375,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["array",{"_index":244,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"13":{},"16":{},"20":{},"22":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["arraybuffertobase64url(buff",{"_index":2079,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["arraybuffertobase64url(signaturebuff",{"_index":2180,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["arriv",{"_index":2715,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["art",{"_index":1384,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ascii",{"_index":598,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{},"keyword":{}}],["asic",{"_index":2359,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["ask",{"_index":925,"title":{"15-26":{},"15-31":{},"15-35":{},"30-25":{},"30-30":{},"30-34":{}},"name":{},"text":{"15":{},"23":{},"27":{},"28":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["aspect",{"_index":2201,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["assembl",{"_index":1575,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["assess",{"_index":980,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["associ",{"_index":957,"title":{},"name":{},"text":{"15":{},"21":{},"29":{},"30":{}},"component":{},"keyword":{}}],["assum",{"_index":872,"title":{},"name":{},"text":{"14":{},"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["assumpt",{"_index":326,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{},"keyword":{}}],["assur",{"_index":778,"title":{},"name":{},"text":{"12":{},"29":{}},"component":{},"keyword":{}}],["asymmetr",{"_index":452,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["async",{"_index":2145,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["atob(base64",{"_index":2067,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["attach",{"_index":616,"title":{},"name":{},"text":{"7":{},"21":{}},"component":{},"keyword":{}}],["attack",{"_index":153,"title":{"15-4":{},"15-7":{},"15-8":{},"15-9":{},"15-11":{},"15-12":{},"15-13":{},"15-14":{},"30-3":{},"30-6":{},"30-7":{},"30-8":{},"30-10":{},"30-11":{},"30-12":{},"30-13":{}},"name":{},"text":{"1":{},"2":{},"14":{},"15":{},"16":{},"18":{},"28":{},"30":{},"38":{}},"component":{},"keyword":{}}],["attacker’",{"_index":1078,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["attain",{"_index":865,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["attempt",{"_index":282,"title":{},"name":{},"text":{"2":{},"7":{},"15":{},"16":{},"21":{},"23":{},"25":{},"30":{}},"component":{},"keyword":{}}],["attent",{"_index":1270,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["attribut",{"_index":2518,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["auth",{"_index":565,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"23":{},"30":{}},"component":{},"keyword":{}}],["auth_cod",{"_index":1687,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["auth_code_byt",{"_index":1684,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["auth_code_payload",{"_index":1625,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["auth_code_payload_part",{"_index":1635,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["auth_code_payload_parts.join(separ",{"_index":1637,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcod",{"_index":573,"title":{"20":{},"20-1":{},"20-2":{},"20-12":{},"20-13":{},"23-11":{}},"name":{"20":{}},"text":{"7":{},"19":{},"20":{},"22":{},"23":{},"25":{}},"component":{},"keyword":{}}],["authcode=$authcod",{"_index":2253,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["authcodebyt",{"_index":1669,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodecalcul",{"_index":1655,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodeinput",{"_index":2053,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodeinput.value.trim",{"_index":2161,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodepayload",{"_index":1577,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["authcodepayloadarray",{"_index":2164,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodepayloadarray.join(separ",{"_index":2170,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodepayloadarray.push(brokeredrpnamebase64",{"_index":2168,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authcodepayloadarray.push(interact",{"_index":2169,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["authent",{"_index":6,"title":{"2":{},"1-3":{},"1-5":{},"2-1":{},"2-5":{},"9-1":{},"9-2":{},"14-2":{},"14-3":{},"14-6":{},"14-10":{},"14-11":{},"14-14":{},"15-19":{},"15-21":{},"15-27":{},"18-3":{},"18-5":{},"27-3":{},"28-3":{},"28-4":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{},"30-18":{},"30-20":{},"30-26":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"38":{}},"component":{},"keyword":{}}],["authentication/sign",{"_index":2207,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{},"keyword":{}}],["authentication/signatur",{"_index":2534,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["authentication_sess",{"_index":182,"title":{},"name":{"2":{}},"text":{},"component":{},"keyword":{}}],["author",{"_index":426,"title":{},"name":{},"text":{"5":{},"11":{},"15":{},"24":{},"29":{},"30":{}},"component":{},"keyword":{}}],["authorit",{"_index":1086,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["auto",{"_index":1023,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["autom",{"_index":896,"title":{"41":{},"15-13":{},"30-12":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["automat",{"_index":1079,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["avail",{"_index":245,"title":{"34-1":{}},"name":{},"text":{"2":{},"6":{},"9":{},"13":{},"15":{},"16":{},"25":{},"26":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{}},"component":{},"keyword":{}}],["avoid",{"_index":2466,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["await",{"_index":2175,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["awar",{"_index":501,"title":{},"name":{},"text":{"6":{},"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["b",{"_index":1770,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":1766,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"3fxz00x",{"_index":1783,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"c6kdqvn94um2dp82ttis9apqhxnfm",{"_index":1789,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"gys+yoah6emacvdniajwss6ub/m95xrdxmzxbukwqj9yfdipxxzgppc7rawcuc2+teorc7wviz/7du/irxenyg",{"_index":2407,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["b\"jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":1754,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"jvo5yoplivhqqahw4ivpx2_kgqizbe99iooupeqxbk0",{"_index":1760,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":1777,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"mwmj_okimup",{"_index":1749,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b\"yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":1710,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":1764,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'3fxz00x",{"_index":1781,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'b98odivcebredswdtk51zfsagyyhty1h2a0ocai3/p",{"_index":1680,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'c6kdqvn94um2dp82ttis9apqhxnfm",{"_index":1787,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":1752,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'jvo5yoplivhqqahw4ivpx2_kgqizbe99iooupeqxbk0",{"_index":1758,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":1775,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'mwmj_okimup",{"_index":1747,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b'yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":1683,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["b+a9cfjibzndhhav3b4f",{"_index":831,"title":{},"name":{},"text":{"13":{},"17":{}},"component":{},"keyword":{}}],["b+c9xvjiaznchh9vfbsv",{"_index":830,"title":{},"name":{},"text":{"13":{},"17":{}},"component":{},"keyword":{}}],["b98odivcebredswdtk51zfsagyyhty1h2a0ocai3/p",{"_index":1657,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["back",{"_index":509,"title":{},"name":{},"text":{"6":{},"15":{},"19":{},"23":{},"25":{},"30":{},"35":{}},"component":{},"keyword":{}}],["backend",{"_index":289,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"13":{},"15":{},"16":{},"17":{},"21":{},"23":{},"24":{}},"component":{},"keyword":{}}],["background",{"_index":991,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"24":{}},"component":{},"keyword":{}}],["backlink",{"_index":1541,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["backlinks.foreach(link",{"_index":1545,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["bad",{"_index":504,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["bait",{"_index":1061,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["bank",{"_index":470,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"25":{},"30":{},"35":{}},"component":{},"keyword":{}}],["bank123",{"_index":2699,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["bank’",{"_index":2711,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["bar",{"_index":1531,"title":{},"name":{},"text":{"19":{},"20":{},"29":{},"31":{}},"component":{},"keyword":{}}],["base",{"_index":106,"title":{"8":{},"27":{},"2-1":{},"2-5":{},"9-1":{},"9-2":{},"9-3":{},"16-1":{},"16-5":{},"28-4":{},"28-7":{},"28-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"36":{}},"component":{},"keyword":{}}],["base/v3/*/devic",{"_index":2470,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/authentication/devic",{"_index":2473,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/authentication/dynam",{"_index":186,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{},"keyword":{}}],["base/v3/authentication/notification/document/:documentnumb",{"_index":298,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["base/v3/authentication/notification/document/{docu",{"_index":2477,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/authentication/notification/etsi/:id",{"_index":297,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{},"keyword":{}}],["base/v3/authentication/notification/etsi/{id",{"_index":2476,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/certificatechoice/notification/document/:documentnumb",{"_index":371,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["base/v3/certificatechoice/notification/etsi/:id",{"_index":370,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["base/v3/session/:sessionid",{"_index":791,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["base/v3/signature/certif",{"_index":2481,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/signature/certificate/{docu",{"_index":2478,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/signature/devic",{"_index":2479,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/signature/dynam",{"_index":870,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{},"keyword":{}}],["base/v3/signature/notification/document/:documentnumb",{"_index":867,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{},"keyword":{}}],["base/v3/signature/notification/document/{docu",{"_index":2480,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base/v3/signature/notification/etsi/:id",{"_index":1395,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["base/v3/signature/notification/link",{"_index":2280,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["base/v3/signature/notification/linked/{docu",{"_index":2484,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["base64",{"_index":286,"title":{"25-3":{}},"name":{},"text":{"2":{},"7":{},"13":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["base64.b64decode(rp_challenge_base64",{"_index":2409,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["base64.b64decode(session_secret_base64",{"_index":1682,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.b64encode(brokered_rp_name.encode('utf",{"_index":1838,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.b64encode(interactions_hash).decode('utf",{"_index":2616,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.b64encode(interactions_string.encode('utf",{"_index":2307,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["base64.b64encode(relying_party_name.encode('utf",{"_index":1816,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.b64encode(rp_challenge_byt",{"_index":2559,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.decode64(session_secret_base64",{"_index":1741,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.getdecod",{"_index":1658,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.getdecoder().decod",{"_index":1801,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{},"keyword":{}}],["base64.getdecoder().decode(rpchallengebase64",{"_index":2432,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["base64.getdecoder().decode(sessionsecretbase64",{"_index":1804,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.getencod",{"_index":1823,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["base64.getencoder().encodetostr",{"_index":1811,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{},"keyword":{}}],["base64.getencoder().encodetostring(interactionshash",{"_index":2598,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.geturlencod",{"_index":1671,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.rawurlencoding.encodetostring(authcodebyt",{"_index":1701,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.replace(/\\+/g",{"_index":2084,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.stdencoding.decodestring(rpchallengebase64",{"_index":2417,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["base64.stdencoding.decodestring(sessionsecretbase64",{"_index":1695,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.stdencoding.encodetostring(digest",{"_index":2626,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.stdencoding.encodetostring(interactionshash",{"_index":2622,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.strict_encode64(brokered_rp_name.encode('utf",{"_index":1852,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.strict_encode64(digest",{"_index":2656,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.strict_encode64(interactions_hash",{"_index":2654,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.strict_encode64(interactions_str",{"_index":2352,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["base64.strict_encode64(relying_party_name.encode('utf",{"_index":1833,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.strict_encode64(rp_challenge_byt",{"_index":2582,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf",{"_index":1688,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64.urlsafe_encode64(hmac).sub",{"_index":1744,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64::decod",{"_index":2424,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["base64::engin",{"_index":1803,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.decode(session_secret_base64).unwrap",{"_index":1709,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(brokered_rp_name.as_byt",{"_index":1842,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(digest",{"_index":2636,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(interactions_hash",{"_index":2628,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(relying_party_name.as_byt",{"_index":1820,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(rp_challenge_byt",{"_index":2570,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64::engine::general_purpose::standard.encode(serde_json::to_string(&interactions).unwrap().into_byt",{"_index":2340,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["base64::engine::generalpurpose::new(&alphabet::url_saf",{"_index":1717,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64::{engin",{"_index":1705,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64_decode($sessionsecretbase64",{"_index":1675,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64_decode('gys+yoah6emacvdniajwss6ub/m95xrdxmzxbukwqj9yfdipxxzgppc7rawcuc2+teorc7wviz/7du/irxenyg",{"_index":2402,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["base64_encode($brokeredrpnam",{"_index":1836,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64_encode($digest",{"_index":2608,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64_encode($interactionshash",{"_index":2606,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64_encode($interactionsjsonstr",{"_index":2303,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["base64_encode($relyingpartynam",{"_index":1814,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64_encode($rpchallengebyt",{"_index":2557,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64decod",{"_index":1799,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64digest",{"_index":2647,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["base64encod",{"_index":1810,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64touint8array(base64",{"_index":2065,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64touint8array(sessionsecretbase64",{"_index":2171,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["base64url",{"_index":578,"title":{},"name":{},"text":{"7":{},"20":{},"21":{},"23":{},"29":{}},"component":{},"keyword":{}}],["baseurl}/v1",{"_index":2236,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["baseurl}/v2",{"_index":2235,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["basi",{"_index":1382,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["basic",{"_index":1218,"title":{"36-3":{}},"name":{},"text":{"15":{},"29":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["be",{"_index":321,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"14":{},"15":{},"16":{},"17":{},"27":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["bear",{"_index":984,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["befor",{"_index":705,"title":{},"name":{},"text":{"9":{},"10":{},"14":{},"15":{},"20":{},"21":{},"25":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["beforehand",{"_index":860,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["begin",{"_index":1025,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["behalf",{"_index":978,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["behav",{"_index":1022,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["behaviour",{"_index":4,"title":{"1-2":{},"18-2":{}},"name":{},"text":{"1":{},"11":{},"18":{}},"component":{},"keyword":{}}],["belong",{"_index":160,"title":{},"name":{},"text":{"1":{},"18":{},"29":{}},"component":{},"keyword":{}}],["below",{"_index":559,"title":{},"name":{},"text":{"7":{},"8":{},"13":{},"14":{},"15":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"30":{}},"component":{},"keyword":{}}],["benefici",{"_index":857,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["benefit",{"_index":2546,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["besid",{"_index":2788,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["best",{"_index":855,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["beta",{"_index":2707,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["better",{"_index":1280,"title":{},"name":{},"text":{"15":{},"30":{},"37":{}},"component":{},"keyword":{}}],["between",{"_index":283,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"13":{},"15":{},"16":{},"21":{},"23":{},"24":{},"30":{}},"component":{},"keyword":{}}],["bg",{"_index":1533,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["big",{"_index":641,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"27":{},"30":{}},"component":{},"keyword":{}}],["biginteg",{"_index":2392,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["biginteger(\"10000",{"_index":2398,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["biginteger(\"65535",{"_index":2394,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["biginteger(sha256hash",{"_index":2395,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["binari",{"_index":600,"title":{},"name":{},"text":{"7":{},"20":{}},"component":{},"keyword":{}}],["binarystr",{"_index":2066,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["binarystring.charcodeat(i",{"_index":2072,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["binarystring.length",{"_index":2069,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bind",{"_index":418,"title":{},"name":{},"text":{"5":{},"24":{},"27":{}},"component":{},"keyword":{}}],["bit",{"_index":1412,"title":{},"name":{},"text":{"17":{},"23":{},"31":{}},"component":{},"keyword":{}}],["block",{"_index":589,"title":{"15-40":{},"30-39":{}},"name":{},"text":{"7":{},"15":{},"20":{},"23":{},"26":{},"30":{}},"component":{},"keyword":{}}],["blockquot",{"_index":1515,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["bodi",{"_index":789,"title":{"13-3":{},"13-4":{}},"name":{},"text":{"13":{},"15":{},"17":{},"19":{},"30":{}},"component":{},"keyword":{}}],["bold",{"_index":1216,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["boolean",{"_index":2511,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["border",{"_index":1466,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["both",{"_index":643,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"20":{},"21":{},"23":{},"25":{},"26":{},"29":{},"30":{}},"component":{},"keyword":{}}],["bottom",{"_index":1936,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bound",{"_index":796,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["box",{"_index":1943,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brand",{"_index":1222,"title":{},"name":{},"text":{"15":{},"30":{},"40":{}},"component":{},"keyword":{}}],["break",{"_index":2000,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brief",{"_index":1000,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["broker",{"_index":716,"title":{},"name":{},"text":{"9":{},"20":{},"26":{},"31":{}},"component":{},"keyword":{}}],["brokered_rp_nam",{"_index":1837,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokered_rp_name_base64",{"_index":1622,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["brokered_rp_name_base64_str",{"_index":1841,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokered_rp_name_base64_string.as_byt",{"_index":1843,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontain",{"_index":2035,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontainer')?.classlist.contains('hidden",{"_index":2141,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontainer.classlist.add('hidden",{"_index":2124,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontainer.classlist.contains('hidden",{"_index":2119,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontainer.classlist.remove('hidden",{"_index":2123,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpcontainer.queryselector('label",{"_index":2040,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnam",{"_index":1571,"title":{"20-8":{}},"name":{},"text":{"20":{},"23":{},"31":{}},"component":{},"keyword":{}}],["brokeredrpname.getbytes(standardcharsets.utf_8",{"_index":1834,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnamebase64",{"_index":1605,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["brokeredrpnamebyt",{"_index":1846,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnameinput",{"_index":2037,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnameinput.valu",{"_index":2157,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnamelabel",{"_index":2039,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnamelabel.classlist.add('requir",{"_index":2120,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["brokeredrpnamelabel.classlist.remove('requir",{"_index":2108,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["browser",{"_index":305,"title":{"15-32":{},"15-35":{},"15-36":{},"21-2":{},"30-31":{},"30-34":{},"30-35":{}},"name":{},"text":{"2":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["browser’",{"_index":863,"title":{},"name":{},"text":{"14":{},"15":{},"30":{}},"component":{},"keyword":{}}],["brute",{"_index":1307,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["btoa(binari",{"_index":2083,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["btoa(binarystr",{"_index":2091,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["buffer.from('gys+yoah6emacvdniajwss6ub/m95xrdxmzxbukwqj9yfdipxxzgppc7rawcuc2+teorc7wviz/7du/irxenyg",{"_index":2445,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["buffer.from(brokeredrpnam",{"_index":1850,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["buffer.from(initialcallbackurl",{"_index":1869,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["buffer.from(interactionsstring).tostring('base64",{"_index":2349,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["buffer.from(relyingpartynam",{"_index":1830,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["buffer.from(sessionsecretbase64",{"_index":1736,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["build",{"_index":1074,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["built",{"_index":987,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{},"keyword":{}}],["busi",{"_index":1006,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["button",{"_index":495,"title":{"40":{}},"name":{},"text":{"6":{},"7":{},"19":{},"20":{},"25":{},"35":{},"40":{}},"component":{},"keyword":{}}],["button:hov",{"_index":1518,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["byte",{"_index":124,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"15":{},"16":{},"17":{},"20":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["byte(\"1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":1765,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"3fxz00x",{"_index":1782,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"c6kdqvn94um2dp82ttis9apqhxnfm",{"_index":1788,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":1753,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"jvo5yoplivhqqahw4ivpx2_kgqizbe99iooupeqxbk0",{"_index":1759,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":1776,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"mwmj_okimup",{"_index":1748,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(\"yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":1693,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(base64.stdencoding.encodetostring([]byte(brokeredrpnam",{"_index":1840,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(base64.stdencoding.encodetostring([]byte(relyingpartynam",{"_index":1818,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte(base64.stdencoding.encodetostring([]byte(rpchallengebyt",{"_index":2564,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["byte(base64.stdencoding.encodetostring(interactionsbyt",{"_index":2319,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["byte(initialcallbackurl",{"_index":1864,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["byte[64",{"_index":2552,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["bytearray",{"_index":1720,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["bytearray(64",{"_index":2572,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["byteorder='big",{"_index":2413,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["bytes.bytelength",{"_index":2081,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bytes.foreach(byt",{"_index":2089,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bytes[i",{"_index":2071,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["c",{"_index":1594,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["c3e6cb",{"_index":1929,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["c6kdqvn94um2dp82ttis9apqhxnfm",{"_index":1785,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ca",{"_index":170,"title":{"15-20":{},"30-19":{}},"name":{},"text":{"1":{},"5":{},"12":{},"15":{},"18":{},"24":{},"29":{},"30":{},"41":{}},"component":{},"keyword":{}}],["ca1",{"_index":2778,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["calc",{"_index":1916,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calc(100",{"_index":1495,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["calc(2.4em",{"_index":1971,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calcul",{"_index":514,"title":{"20":{},"7-2":{},"20-13":{},"23-1":{},"31-5":{},"34-3":{}},"name":{},"text":{"7":{},"8":{},"9":{},"17":{},"19":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"29":{},"31":{}},"component":{},"keyword":{}}],["calculateandcompareauthcod",{"_index":2146,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatebutton",{"_index":2055,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatebutton.addeventlistener('click",{"_index":2191,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatedauthcod",{"_index":2179,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatedauthcodeel",{"_index":2059,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatedauthcodeelement.textcont",{"_index":2150,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontain",{"_index":2010,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselector('#result",{"_index":2058,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselector('input[name=\"sessiontype\"]:checked').valu",{"_index":2094,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselector(`#${el.id",{"_index":2143,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselector(`#${inputelement.id",{"_index":2127,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselectorall('.valid",{"_index":2130,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselectorall('input",{"_index":2133,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["calculatorcontainer.queryselectorall('input[name=\"sessiontyp",{"_index":2014,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["call",{"_index":121,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["callback",{"_index":617,"title":{"21":{},"21-1":{},"21-3":{},"21-4":{}},"name":{},"text":{"7":{},"19":{},"20":{},"21":{},"22":{},"23":{},"28":{},"29":{}},"component":{},"keyword":{}}],["callback_url",{"_index":2194,"title":{},"name":{"21":{}},"text":{},"component":{},"keyword":{}}],["callbackurl",{"_index":2199,"title":{},"name":{},"text":{"21":{},"23":{},"28":{}},"component":{},"keyword":{}}],["caller",{"_index":100,"title":{},"name":{},"text":{"1":{},"13":{},"18":{}},"component":{},"keyword":{}}],["camera",{"_index":531,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["cancel",{"_index":494,"title":{},"name":{},"text":{"6":{},"13":{},"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["can’t",{"_index":1797,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["capabl",{"_index":213,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["captcha",{"_index":1352,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["caption",{"_index":1462,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["card",{"_index":733,"title":{"15-19":{},"15-21":{},"30-18":{},"30-20":{}},"name":{},"text":{"10":{},"15":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["care",{"_index":1059,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["carefulli",{"_index":946,"title":{"15-41":{},"30-40":{}},"name":{},"text":{"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["carri",{"_index":1388,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["case",{"_index":40,"title":{"14-1":{},"14-9":{},"28-1":{},"28-2":{}},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"33":{},"37":{}},"component":{},"keyword":{}}],["catch",{"_index":1556,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["caught",{"_index":1368,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["caus",{"_index":668,"title":{},"name":{},"text":{"8":{},"15":{},"21":{},"30":{}},"component":{},"keyword":{}}],["cca",{"_index":1097,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ccc",{"_index":1955,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ccfoymx32y4ro",{"_index":1786,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["cd",{"_index":1108,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ce305d54",{"_index":1396,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["ceas",{"_index":1033,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["cell",{"_index":1100,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["center",{"_index":1939,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["centr",{"_index":1345,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["cert",{"_index":813,"title":{},"name":{},"text":{"13":{},"15":{},"23":{},"29":{},"30":{}},"component":{},"keyword":{}}],["cert.certificatelevel",{"_index":816,"title":{},"name":{},"text":{"13":{},"29":{}},"component":{},"keyword":{}}],["cert.valu",{"_index":776,"title":{},"name":{},"text":{"12":{},"13":{},"29":{}},"component":{},"keyword":{}}],["certain",{"_index":1096,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["certainti",{"_index":1361,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["certif",{"_index":159,"title":{"14-4":{},"14-5":{},"14-7":{},"14-8":{},"14-12":{},"14-13":{},"14-15":{},"14-16":{},"15-20":{},"15-22":{},"15-23":{},"15-24":{},"30-19":{},"30-21":{},"30-22":{},"30-23":{},"38-1":{},"38-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["certifi",{"_index":430,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["certificatechoic",{"_index":85,"title":{"3":{},"3-1":{}},"name":{},"text":{"1":{},"3":{},"10":{},"14":{},"16":{},"22":{},"23":{}},"component":{},"keyword":{}}],["certificatechoice_sess",{"_index":330,"title":{},"name":{"3":{}},"text":{},"component":{},"keyword":{}}],["certificatelevel",{"_index":223,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"16":{}},"component":{},"keyword":{}}],["certificatelevel\":\"advanc",{"_index":2750,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["certificatepolici",{"_index":1186,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["certificate’",{"_index":2502,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["chain",{"_index":1106,"title":{},"name":{},"text":{"15":{},"29":{},"30":{},"41":{}},"component":{},"keyword":{}}],["challeng",{"_index":675,"title":{"21-2":{}},"name":{},"text":{"9":{},"17":{},"20":{},"26":{},"29":{},"31":{}},"component":{},"keyword":{}}],["challengedigestgroup",{"_index":2025,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengedigestgroup.classlist.add('hidden",{"_index":2113,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengedigestgroup.classlist.remove('hidden",{"_index":2104,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigest",{"_index":2165,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestinput",{"_index":2029,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestinput.valu",{"_index":2166,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestlabel",{"_index":2027,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestlabel.classlist.add('requir",{"_index":2105,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestlabel.classlist.remove('requir",{"_index":2114,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["challengeordigestlabel.textcont",{"_index":2110,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["chanc",{"_index":1010,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["chang",{"_index":325,"title":{"4":{},"22":{},"4-1":{},"4-2":{},"4-3":{},"22-1":{},"22-2":{},"22-3":{}},"name":{"4":{},"22":{}},"text":{"2":{},"7":{},"8":{},"15":{},"16":{},"19":{},"20":{},"22":{},"23":{},"27":{},"30":{},"38":{},"41":{}},"component":{},"keyword":{}}],["channel",{"_index":1277,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["chapter",{"_index":2514,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["char",{"_index":486,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["charact",{"_index":241,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"10":{},"13":{},"15":{},"16":{},"17":{},"20":{},"29":{},"30":{}},"component":{},"keyword":{}}],["check",{"_index":145,"title":{"15-22":{},"30-21":{}},"name":{},"text":{"1":{},"7":{},"9":{},"10":{},"13":{},"15":{},"18":{},"20":{},"21":{},"23":{},"29":{},"30":{},"40":{}},"component":{},"keyword":{}}],["checkfield",{"_index":2138,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["choic",{"_index":498,"title":{},"name":{},"text":{"6":{},"7":{},"13":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{}},"component":{},"keyword":{}}],["choice/devic",{"_index":2482,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["choice/notification/etsi/{id",{"_index":2486,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["choos",{"_index":359,"title":{},"name":{},"text":{"3":{},"13":{},"15":{},"16":{},"30":{},"35":{}},"component":{},"keyword":{}}],["chosen",{"_index":846,"title":{},"name":{},"text":{"13":{},"16":{},"23":{},"25":{},"26":{}},"component":{},"keyword":{}}],["chrome",{"_index":1237,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ciphersuit",{"_index":157,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["citizen",{"_index":1164,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["civic",{"_index":735,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["clarifi",{"_index":603,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["class",{"_index":1597,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["class[1",{"_index":1409,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["classif",{"_index":1321,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["clear",{"_index":1303,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["clearallvalid",{"_index":2109,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["clearvalidationerror(brokeredrpnameinput",{"_index":2121,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["clearvalidationerror(initialcallbackurlinput",{"_index":2099,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["clearvalidationerror(inputel",{"_index":2125,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["click",{"_index":532,"title":{},"name":{},"text":{"7":{},"9":{},"23":{},"26":{},"28":{}},"component":{},"keyword":{}}],["clickabl",{"_index":2244,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["client",{"_index":8,"title":{"34":{},"1-4":{},"18-4":{},"38-3":{},"38-4":{}},"name":{},"text":{"1":{},"9":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"26":{},"30":{},"34":{},"38":{}},"component":{},"keyword":{}}],["client/blob/master/readme.md#configur",{"_index":2787,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["client/blob/master/readme.md#verifi",{"_index":2785,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["client_cert",{"_index":1202,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["client_librari",{"_index":2687,"title":{},"name":{"34":{}},"text":{},"component":{},"keyword":{}}],["clientauth",{"_index":1117,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["clientca",{"_index":1203,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["clientssl_clientcert",{"_index":1198,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["client’",{"_index":708,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["close",{"_index":1365,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["code",{"_index":2,"title":{"1-1":{},"8-3":{},"13-5":{},"15-26":{},"18-1":{},"23-3":{},"27-3":{},"27-4":{},"30-25":{},"34-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"39":{}},"component":{},"keyword":{}}],["coercion",{"_index":884,"title":{"15-7":{},"30-6":{}},"name":{},"text":{},"component":{},"keyword":{}}],["collect",{"_index":689,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["color",{"_index":1460,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["combin",{"_index":112,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"18":{},"25":{},"28":{}},"component":{},"keyword":{}}],["come",{"_index":1214,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["comment",{"_index":2797,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["commerci",{"_index":1336,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["commit",{"_index":1066,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["common",{"_index":845,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"20":{},"30":{}},"component":{},"keyword":{}}],["commun",{"_index":97,"title":{},"name":{},"text":{"1":{},"9":{},"15":{},"18":{},"24":{},"26":{},"30":{}},"component":{},"keyword":{}}],["compani",{"_index":1219,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["compar",{"_index":375,"title":{"4-2":{},"4-3":{},"20-13":{},"22-1":{},"22-2":{},"22-3":{}},"name":{},"text":{"9":{},"11":{},"20":{},"22":{},"26":{},"29":{}},"component":{},"keyword":{}}],["comparison",{"_index":1579,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["comparisonresult",{"_index":2004,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["comparisonresultel",{"_index":2061,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["comparisonresultelement.classnam",{"_index":2181,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["comparisonresultelement.textcont",{"_index":2151,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["compil",{"_index":820,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"30":{}},"component":{},"keyword":{}}],["complaint",{"_index":1040,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["complet",{"_index":205,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"20":{},"21":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["compli",{"_index":2783,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["compon",{"_index":431,"title":{},"name":{},"text":{"5":{},"17":{},"24":{}},"component":{},"keyword":{}}],["compromis",{"_index":1337,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["comput",{"_index":457,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"27":{},"30":{}},"component":{},"keyword":{}}],["concat",{"_index":1587,"title":{},"name":{},"text":{"20":{},"23":{},"31":{}},"component":{},"keyword":{}}],["concaten",{"_index":569,"title":{},"name":{},"text":{"7":{},"17":{},"20":{},"29":{}},"component":{},"keyword":{}}],["concept",{"_index":399,"title":{"15-2":{}},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["condit",{"_index":180,"title":{"2-2":{},"2-6":{},"3-2":{},"13-1":{},"16-2":{},"16-6":{}},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["confid",{"_index":1226,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["configu",{"_index":1104,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["configur",{"_index":120,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"11":{},"15":{},"16":{},"18":{},"21":{},"23":{},"26":{},"29":{},"30":{}},"component":{},"keyword":{}}],["confirm",{"_index":493,"title":{},"name":{},"text":{"6":{},"9":{},"13":{},"15":{},"25":{},"26":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["confirmationmessag",{"_index":491,"title":{},"name":{},"text":{"6":{},"13":{},"16":{},"22":{},"25":{},"31":{}},"component":{},"keyword":{}}],["confirmationmessageandverificationcodechoic",{"_index":499,"title":{},"name":{},"text":{"6":{},"13":{},"22":{},"25":{},"28":{},"30":{}},"component":{},"keyword":{}}],["conform",{"_index":756,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["confus",{"_index":669,"title":{},"name":{},"text":{"8":{},"15":{},"30":{}},"component":{},"keyword":{}}],["connect",{"_index":146,"title":{"15-35":{},"15-36":{},"15-38":{},"15-39":{},"15-40":{},"30-34":{},"30-35":{},"30-37":{},"30-38":{},"30-39":{}},"name":{},"text":{"1":{},"2":{},"7":{},"9":{},"15":{},"16":{},"18":{},"22":{},"23":{},"26":{},"28":{},"30":{},"38":{}},"component":{},"keyword":{}}],["consciou",{"_index":966,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["consent",{"_index":1017,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["consid",{"_index":955,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["consider",{"_index":788,"title":{},"name":{},"text":{"12":{},"21":{},"29":{}},"component":{},"keyword":{}}],["consist",{"_index":518,"title":{},"name":{},"text":{"7":{},"8":{},"23":{},"27":{},"31":{}},"component":{},"keyword":{}}],["consol",{"_index":2186,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.error(\"calcul",{"_index":2192,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.error(\"error",{"_index":2183,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.error(\"fail",{"_index":2073,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.error(\"invalid",{"_index":1557,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["console.log(authcod",{"_index":1740,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.log(authcodepayload",{"_index":1647,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.log(brokeredrpnamebase64",{"_index":1851,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.log(devicelink",{"_index":2256,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["console.log(digest",{"_index":2652,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["console.log(elapsedsecondsstr",{"_index":2272,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["console.log(interactions_base64",{"_index":2350,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["console.log(relyingpartynamebase64",{"_index":1832,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.log(result",{"_index":2452,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["console.log(rp_challeng",{"_index":2580,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["console.log(unprotecteddevicelink",{"_index":1894,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(authcod",{"_index":1733,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(authcodepayload",{"_index":1645,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(base64digest",{"_index":2649,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["console.writeline(brokeredrpnamebase64",{"_index":1849,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(devicelink",{"_index":2255,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["console.writeline(elapsedsecondsstr",{"_index":2271,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["console.writeline(interactionsbase64",{"_index":2346,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["console.writeline(relyingpartynamebase64",{"_index":1829,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(rpchalleng",{"_index":2577,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["console.writeline(unprotecteddevicelink",{"_index":1893,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["console.writeline(verificationcod",{"_index":2444,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["const",{"_index":1540,"title":{},"name":{},"text":{"19":{},"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["constraint",{"_index":2510,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["construct",{"_index":822,"title":{},"name":{},"text":{"13":{},"17":{},"23":{},"29":{},"37":{}},"component":{},"keyword":{}}],["consult",{"_index":2216,"title":{},"name":{},"text":{"21":{},"29":{}},"component":{},"keyword":{}}],["contact",{"_index":1243,"title":{"33":{}},"name":{"33":{}},"text":{"15":{},"19":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["contain",{"_index":318,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"13":{},"15":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"29":{},"30":{},"31":{},"34":{}},"component":{},"keyword":{}}],["content",{"_index":1267,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"30":{}},"component":{},"keyword":{}}],["context",{"_index":234,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"16":{},"17":{},"20":{},"25":{},"29":{},"30":{}},"component":{},"keyword":{}}],["context\"},{\"type\":\"displaytextandpin\",\"displaytext60\":\"short",{"_index":2297,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["context\"}]\"\"\".trimind",{"_index":2341,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["continu",{"_index":537,"title":{},"name":{},"text":{"7":{},"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["contract",{"_index":1282,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["contract.asic",{"_index":2288,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["contrast",{"_index":199,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["control",{"_index":963,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["conveni",{"_index":642,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["convert",{"_index":597,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["convert.frombase64string(rpchallengebase64",{"_index":2438,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["convert.frombase64string(sessionsecretbase64",{"_index":1728,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["convert.tobase64string(authcodebyt",{"_index":1731,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["convert.tobase64string(brokeredrpnamebyt",{"_index":1848,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["convert.tobase64string(digest",{"_index":2648,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["convert.tobase64string(encoding.utf8.getbytes(interactionsjson",{"_index":2345,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["convert.tobase64string(interactionshash",{"_index":2645,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["convert.tobase64string(relyingpartynamebyt",{"_index":1828,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["convert.tobase64string(rpchallengebyt",{"_index":2576,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["cooki",{"_index":711,"title":{},"name":{},"text":{"9":{},"14":{},"15":{},"21":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["correct",{"_index":335,"title":{"15-26":{},"30-25":{}},"name":{},"text":{"3":{},"7":{},"13":{},"15":{},"23":{},"30":{},"35":{}},"component":{},"keyword":{}}],["correctli",{"_index":2538,"title":{},"name":{},"text":{"29":{},"31":{}},"component":{},"keyword":{}}],["correspond",{"_index":1012,"title":{},"name":{},"text":{"15":{},"16":{},"25":{},"30":{}},"component":{},"keyword":{}}],["count",{"_index":1201,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["counter",{"_index":382,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["counterfeit",{"_index":1071,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["countermeasur",{"_index":965,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["counterpart",{"_index":437,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["countri",{"_index":738,"title":{},"name":{},"text":{"10":{},"15":{},"30":{},"35":{},"41":{}},"component":{},"keyword":{}}],["cours",{"_index":422,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["cover",{"_index":649,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["cp",{"_index":1162,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["cpr",{"_index":1159,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["creat",{"_index":471,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"13":{},"14":{},"15":{},"17":{},"23":{},"24":{},"26":{},"28":{},"30":{},"34":{}},"component":{},"keyword":{}}],["creation",{"_index":83,"title":{"3-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"10":{},"13":{},"16":{},"18":{},"23":{},"24":{}},"component":{},"keyword":{}}],["critic",{"_index":1142,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["crl",{"_index":469,"title":{},"name":{},"text":{"5":{},"24":{},"29":{}},"component":{},"keyword":{}}],["cross",{"_index":1360,"title":{"23-3":{},"28-1":{}},"name":{},"text":{"15":{},"20":{},"23":{},"24":{},"26":{},"28":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["crypto",{"_index":1734,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["crypto.createhash('sha256",{"_index":2446,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["crypto.createhash('sha256').update(interactions).digest('base64",{"_index":2650,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["crypto.createhash('sha512').update(acspv2payload).digest('base64",{"_index":2651,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["crypto.createhmac('sha256",{"_index":1737,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["crypto.randombytes(64",{"_index":2578,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["crypto/hmac",{"_index":1690,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["crypto/rand",{"_index":2561,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["crypto/sha256",{"_index":1691,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{},"keyword":{}}],["crypto/sha512",{"_index":2620,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["cryptograph",{"_index":453,"title":{},"name":{},"text":{"5":{},"12":{},"24":{},"29":{}},"component":{},"keyword":{}}],["cryptographi",{"_index":1416,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["cryptokey",{"_index":2174,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["css",{"_index":1914,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["current",{"_index":131,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"16":{},"17":{},"18":{},"20":{},"23":{},"25":{},"27":{},"28":{},"29":{}},"component":{},"keyword":{}}],["currentdomain",{"_index":1543,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["cursor",{"_index":1987,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["custom",{"_index":840,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"20":{},"28":{},"30":{}},"component":{},"keyword":{}}],["custom_engin",{"_index":1715,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["custom_engine.encode(auth_code_byt",{"_index":1719,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["customcss",{"_index":1458,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["cut",{"_index":1043,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["cyber",{"_index":1378,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["cybercrimin",{"_index":969,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["d4edda",{"_index":1927,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["d6d6d6",{"_index":1992,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["d8xkbena0wse0pvbzzoxgnpi4ml9qk",{"_index":272,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["damag",{"_index":1045,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["danger",{"_index":1304,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["dark",{"_index":1477,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["darklight",{"_index":1520,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["darkmod",{"_index":1453,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["data",{"_index":232,"title":{"15-10":{},"15-11":{},"15-43":{},"30-9":{},"30-10":{},"30-42":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"11":{},"13":{},"15":{},"16":{},"17":{},"25":{},"27":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["databas",{"_index":1289,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["dataencipher",{"_index":2526,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["date",{"_index":1234,"title":{},"name":{},"text":{"15":{},"29":{},"30":{},"32":{},"33":{},"35":{},"39":{}},"component":{},"keyword":{}}],["dateofbirth",{"_index":2840,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["day",{"_index":364,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["dc3545",{"_index":1920,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["de305d54",{"_index":290,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["debug",{"_index":1256,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["deceiv",{"_index":1275,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["decid",{"_index":772,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["decim",{"_index":2373,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["decis",{"_index":949,"title":{"15-42":{},"30-41":{}},"name":{},"text":{},"component":{},"keyword":{}}],["declar",{"_index":1290,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["decod",{"_index":1792,"title":{},"name":{},"text":{"20":{},"21":{},"29":{},"31":{}},"component":{},"keyword":{}}],["decode(rp_challenge_base64).unwrap",{"_index":2426,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["decode(sessionsecret",{"_index":1798,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["decode(sessionsecretbase64",{"_index":1659,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["dedic",{"_index":854,"title":{},"name":{},"text":{"14":{},"22":{}},"component":{},"keyword":{}}],["deduc",{"_index":1048,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["dee2e6",{"_index":2002,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["default",{"_index":254,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"16":{},"21":{},"23":{},"37":{}},"component":{},"keyword":{}}],["defenc",{"_index":908,"title":{"15-19":{},"15-25":{},"15-26":{},"15-27":{},"15-28":{},"15-29":{},"15-30":{},"15-31":{},"15-32":{},"15-37":{},"15-41":{},"15-42":{},"30-18":{},"30-24":{},"30-25":{},"30-26":{},"30-27":{},"30-28":{},"30-29":{},"30-30":{},"30-31":{},"30-36":{},"30-40":{},"30-41":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["defin",{"_index":479,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"11":{},"17":{},"20":{},"23":{},"25":{},"29":{}},"component":{},"keyword":{}}],["definit",{"_index":557,"title":{},"name":{},"text":{"7":{},"29":{}},"component":{},"keyword":{}}],["delay",{"_index":1231,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["delet",{"_index":2701,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["deliveri",{"_index":1346,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["demand",{"_index":474,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["demo",{"_index":267,"title":{"35":{},"36-2":{}},"name":{"35":{}},"text":{"2":{},"3":{},"15":{},"16":{},"20":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"39":{}},"component":{},"keyword":{}}],["demonstr",{"_index":2723,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["deni",{"_index":1357,"title":{},"name":{},"text":{"15":{},"21":{},"25":{},"30":{}},"component":{},"keyword":{}}],["denial",{"_index":888,"title":{"15-9":{},"30-8":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["depend",{"_index":236,"title":{},"name":{},"text":{"2":{},"6":{},"13":{},"16":{},"25":{},"26":{}},"component":{},"keyword":{}}],["deploy",{"_index":967,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["deprec",{"_index":412,"title":{},"name":{},"text":{"4":{},"22":{},"36":{}},"component":{},"keyword":{}}],["der",{"_index":2772,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["der+base64",{"_index":814,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["deriv",{"_index":260,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["derive(debug",{"_index":2324,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["derive(seri",{"_index":2331,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["describ",{"_index":33,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["descript",{"_index":217,"title":{"18":{},"15-33":{},"30-32":{},"35-1":{}},"name":{},"text":{"2":{},"3":{},"6":{},"13":{},"15":{},"16":{},"17":{},"19":{},"23":{},"25":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["deseri",{"_index":2325,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["design",{"_index":691,"title":{},"name":{},"text":{"9":{},"15":{},"26":{},"29":{},"30":{}},"component":{},"keyword":{}}],["desir",{"_index":760,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["destin",{"_index":1081,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["detail",{"_index":19,"title":{"1":{},"15-30":{},"30-29":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["detect",{"_index":554,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"15":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["determinist",{"_index":1794,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["deterr",{"_index":1372,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["deu",{"_index":2760,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["devast",{"_index":1004,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["develop",{"_index":983,"title":{},"name":{},"text":{"15":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["devic",{"_index":253,"title":{"23":{},"37":{},"11-1":{},"14-1":{},"14-9":{},"23-1":{},"23-2":{},"23-3":{},"23-4":{},"23-13":{},"28-1":{},"28-2":{}},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"32":{},"35":{},"37":{},"39":{}},"component":{},"keyword":{}}],["device/brows",{"_index":2465,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["device_link",{"_index":2250,"title":{},"name":{"37":{}},"text":{"23":{}},"component":{},"keyword":{}}],["device_link_bas",{"_index":1880,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["device_link_flow",{"_index":2237,"title":{},"name":{"23":{}},"text":{},"component":{},"keyword":{}}],["device_link_typ",{"_index":1881,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["deviceipaddress",{"_index":817,"title":{},"name":{},"text":{"13":{},"22":{}},"component":{},"keyword":{}}],["devicelink",{"_index":2245,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["devicelinkbas",{"_index":1873,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["devicelinkgener",{"_index":2248,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["devicelinktyp",{"_index":1872,"title":{"23-7":{}},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["devicelinktype=$devicelinktyp",{"_index":1887,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["devices/brows",{"_index":861,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["device’",{"_index":2365,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["diagram",{"_index":542,"title":{"8-1":{},"27-1":{}},"name":{},"text":{"7":{},"8":{},"9":{},"23":{},"27":{},"28":{}},"component":{},"keyword":{}}],["dialog",{"_index":1019,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["didn’t",{"_index":1249,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["differ",{"_index":473,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"14":{},"15":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"37":{}},"component":{},"keyword":{}}],["differenti",{"_index":1008,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["difficult",{"_index":1255,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["digest",{"_index":819,"title":{"20-6":{},"31-5":{},"31-8":{}},"name":{},"text":{"13":{},"16":{},"17":{},"20":{},"21":{},"23":{},"25":{},"27":{},"29":{},"31":{}},"component":{},"keyword":{}}],["digest(acspv2payload",{"_index":2642,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["digest(interactions.tobytearray(standardcharsets.utf_8",{"_index":2637,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["digest(rpchallengebyt",{"_index":2434,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["digest(signatureprotocol",{"_index":1420,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["digest::sha256.digest(base64.decode64(rp_challeng",{"_index":2453,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["digest::sha256.digest(interact",{"_index":2653,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["digest::sha512.digest(acsp_v2_payload",{"_index":2655,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["digestalgorithm",{"_index":379,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["digi",{"_index":1152,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["digicert",{"_index":2774,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["digidoc4j",{"_index":2688,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["digit",{"_index":443,"title":{},"name":{},"text":{"5":{},"9":{},"14":{},"15":{},"17":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{}},"component":{},"keyword":{}}],["digitalsignatur",{"_index":2519,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["dijhrou",{"_index":1763,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["diplomat",{"_index":1176,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["direct",{"_index":1099,"title":{},"name":{},"text":{"15":{},"17":{},"30":{}},"component":{},"keyword":{}}],["directli",{"_index":1274,"title":{},"name":{},"text":{"15":{},"16":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["disabl",{"_index":2498,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["disallow",{"_index":654,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["display",{"_index":125,"title":{"15-27":{},"15-28":{},"25-2":{},"30-26":{},"30-27":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"30":{}},"component":{},"keyword":{}}],["display_text",{"_index":2335,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaynam",{"_index":1295,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["displaytext",{"_index":401,"title":{"15-25":{},"15-30":{},"30-24":{},"30-29":{}},"name":{},"text":{"4":{},"15":{},"22":{},"25":{},"30":{}},"component":{},"keyword":{}}],["displaytext200",{"_index":480,"title":{},"name":{},"text":{"6":{},"16":{},"25":{}},"component":{},"keyword":{}}],["displaytext200(&'a",{"_index":2329,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaytext60",{"_index":274,"title":{},"name":{},"text":{"2":{},"6":{},"16":{},"25":{}},"component":{},"keyword":{}}],["displaytext60(&'a",{"_index":2330,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaytext::displaytext200(\"long",{"_index":2337,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaytext::displaytext60(\"short",{"_index":2339,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaytext<'a",{"_index":2327,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["displaytextandpin",{"_index":273,"title":{},"name":{},"text":{"2":{},"6":{},"13":{},"16":{},"22":{},"25":{}},"component":{},"keyword":{}}],["distinguish",{"_index":922,"title":{"15-25":{},"30-24":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["distribut",{"_index":1054,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["disturb",{"_index":1031,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["div",{"_index":1510,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["div.radio",{"_index":1958,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["dn",{"_index":1220,"title":{},"name":{},"text":{"15":{},"29":{},"30":{},"36":{}},"component":{},"keyword":{}}],["do",{"_index":702,"title":{},"name":{},"text":{"9":{},"15":{},"30":{}},"component":{},"keyword":{}}],["doc",{"_index":1443,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["document",{"_index":177,"title":{"4-1":{},"26-2":{}},"name":{},"text":{"1":{},"3":{},"5":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"24":{},"25":{},"26":{},"28":{},"30":{},"32":{},"34":{},"39":{},"41":{}},"component":{},"keyword":{}}],["document.addeventlistener('domcontentload",{"_index":1539,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["document.body.addeventlistener('click",{"_index":1563,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["document.getelementbyid('authcodeinput",{"_index":2054,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('authform",{"_index":2012,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('brokeredrpcontain",{"_index":2036,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('brokeredrpnam",{"_index":2038,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('calculatebutton",{"_index":2056,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('calculatedauthcod",{"_index":2060,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('challengedigestgroup",{"_index":2026,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('challengeordigest",{"_index":2030,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('challengeordigestlabel",{"_index":2028,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('comparisonresult",{"_index":2062,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('initialcallbackurl",{"_index":2050,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('initialcallbackurlgroup",{"_index":2048,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('interact",{"_index":2046,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('interactionsgroup",{"_index":2042,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('interactionslabel",{"_index":2044,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('payloadus",{"_index":2064,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('relyingpartynam",{"_index":2032,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('schemenam",{"_index":2018,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('sessionsecretbase64",{"_index":2016,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('signatureprotocol",{"_index":2024,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('signatureprotocolgroup",{"_index":2020,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('signatureprotocollabel",{"_index":2022,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('unprotecteddevicelink",{"_index":2052,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.getelementbyid('usebrokeredrp",{"_index":2034,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.queryselector('.authcod",{"_index":2011,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["document.queryselectorall('.nav",{"_index":1542,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["document.referr",{"_index":1550,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["document/:documentnumb",{"_index":719,"title":{"10-3":{}},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["document_unus",{"_index":837,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["documentation/tree/v2",{"_index":1230,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["documentnumb",{"_index":361,"title":{},"name":{},"text":{"3":{},"13":{}},"component":{},"keyword":{}}],["doe",{"_index":2290,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["doesn't",{"_index":1209,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["doesn’t",{"_index":1228,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["dokobit",{"_index":2725,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["domain",{"_index":623,"title":{},"name":{},"text":{"7":{},"15":{},"21":{},"30":{}},"component":{},"keyword":{}}],["domexcept",{"_index":2075,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["done",{"_index":345,"title":{},"name":{},"text":{"3":{},"7":{},"10":{},"15":{},"21":{},"22":{},"23":{},"25":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["don’t",{"_index":1007,"title":{},"name":{},"text":{"15":{},"27":{},"30":{},"35":{}},"component":{},"keyword":{}}],["down",{"_index":1354,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["download",{"_index":1052,"title":{},"name":{},"text":{"15":{},"30":{},"35":{},"38":{},"40":{}},"component":{},"keyword":{}}],["dpia",{"_index":1387,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["dtb",{"_index":665,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{},"keyword":{}}],["due",{"_index":2209,"title":{},"name":{},"text":{"21":{},"25":{}},"component":{},"keyword":{}}],["durat",{"_index":1405,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["dure",{"_index":766,"title":{},"name":{},"text":{"11":{},"13":{},"15":{},"17":{},"20":{},"21":{},"25":{},"30":{}},"component":{},"keyword":{}}],["dutch",{"_index":2757,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["dynam",{"_index":178,"title":{"7":{},"2-1":{},"7-2":{},"7-5":{},"9-1":{},"16-1":{},"23-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["dynamic_link_flow",{"_index":516,"title":{},"name":{"7":{}},"text":{},"component":{},"keyword":{}}],["dynamiclinktyp",{"_index":563,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["dynamiclinktype.sessiontype.elapsedsecond",{"_index":572,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["dztl7ur49d/yyguzyl4smg",{"_index":296,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["e",{"_index":954,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"24":{},"26":{},"30":{},"33":{},"35":{},"36":{}},"component":{},"keyword":{}}],["e.g",{"_index":350,"title":{},"name":{},"text":{"3":{},"9":{},"14":{},"23":{},"26":{},"29":{}},"component":{},"keyword":{}}],["e.nam",{"_index":2076,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["e9ecef",{"_index":1997,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["e9oalxv",{"_index":1613,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["each",{"_index":451,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"13":{},"15":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["eas",{"_index":1991,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["easi",{"_index":637,"title":{},"name":{},"text":{"7":{},"23":{},"35":{}},"component":{},"keyword":{}}],["easier",{"_index":2240,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["easili",{"_index":2467,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["eb6b9e546014",{"_index":294,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["eb6b9e546015",{"_index":328,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["eb6b9e546016?timeoutms=10000",{"_index":805,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["echo",{"_index":1190,"title":{},"name":{},"text":{"15":{},"20":{},"23":{},"25":{},"27":{},"30":{},"31":{}},"component":{},"keyword":{}}],["edit",{"_index":1298,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ee",{"_index":739,"title":{},"name":{},"text":{"10":{},"15":{},"30":{},"41":{}},"component":{},"keyword":{}}],["ee_certification_centre_root_ca.pem.crt",{"_index":1121,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ee_certification_centre_root_ca_trusted.pem.crt",{"_index":1122,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["effect",{"_index":901,"title":{"15-16":{},"30-15":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["effort",{"_index":697,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["eid",{"_index":914,"title":{"15-21":{},"30-20":{}},"name":{},"text":{"15":{},"30":{},"41":{}},"component":{},"keyword":{}}],["eid.eu",{"_index":1144,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["eid.github.io/smart",{"_index":2664,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["eid/mid",{"_index":989,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{},"keyword":{}}],["eid/ocsp/wiki/sk",{"_index":2730,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["eid/smart",{"_index":990,"title":{},"name":{},"text":{"15":{},"24":{},"30":{},"38":{}},"component":{},"keyword":{}}],["el",{"_index":2139,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["el.classlist.add('invalid",{"_index":2144,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["el.classlist.remove('invalid",{"_index":2135,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["el.closest('.form",{"_index":2140,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["el.textcont",{"_index":2132,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["el.value.trim",{"_index":2142,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["elapsed_second",{"_index":1903,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["elapsed_seconds.to_",{"_index":1910,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["elapsed_seconds.to_str",{"_index":2269,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["elapsed_seconds_str",{"_index":2267,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["elapsedsecond",{"_index":566,"title":{"23-9":{}},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["elapsedseconds.tostr",{"_index":1909,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["elapsedseconds=$elapsedsecond",{"_index":1908,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["elapsedsecondsstr",{"_index":2263,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["electron",{"_index":444,"title":{},"name":{},"text":{"5":{},"9":{},"17":{},"24":{},"26":{}},"component":{},"keyword":{}}],["element",{"_index":472,"title":{"6-1":{},"25-4":{}},"name":{},"text":{"15":{},"30":{},"31":{}},"component":{},"keyword":{}}],["elig",{"_index":2716,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["embed",{"_index":1933,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["employe",{"_index":1085,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["empti",{"_index":808,"title":{},"name":{},"text":{"13":{},"20":{},"23":{},"25":{},"31":{}},"component":{},"keyword":{}}],["en",{"_index":724,"title":{},"name":{},"text":{"10":{},"15":{},"30":{}},"component":{},"keyword":{}}],["enabl",{"_index":442,"title":{},"name":{},"text":{"5":{},"7":{},"13":{},"15":{},"17":{},"23":{},"24":{},"30":{},"35":{}},"component":{},"keyword":{}}],["encod",{"_index":26,"title":{"25-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["encode('utf",{"_index":2617,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encode(brokeredrpnam",{"_index":1589,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["encode(crypto",{"_index":2548,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encode(hmac",{"_index":1649,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encode(initialcallbackurl",{"_index":1857,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encode(messag",{"_index":2590,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encode(relyingpartynam",{"_index":1588,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["encode(sha",{"_index":2587,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encode(str",{"_index":1586,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encode(to",{"_index":2293,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["encode(utf8",{"_index":1809,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encodetostring(authcodebyt",{"_index":1673,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encodetostring(brokeredrpname.tobytearray(charsets.utf_8",{"_index":1844,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encodetostring(interactionshash",{"_index":2639,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encodetostring(relyingpartyname.tobytearray(charsets.utf_8",{"_index":1824,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encodetostring(rpchallengebyt",{"_index":2554,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["encoding.utf8.getbyt",{"_index":1771,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":1767,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"3fxz00x",{"_index":1784,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"c6kdqvn94um2dp82ttis9apqhxnfm",{"_index":1790,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":1755,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"jvo5yoplivhqqahw4ivpx2_kgqizbe99iooupeqxbk0",{"_index":1761,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":1778,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"mwmj_okimup",{"_index":1750,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(\"yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":1729,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(brokeredrpnam",{"_index":1847,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(initialcallbackurl",{"_index":1868,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding.utf8.getbytes(relyingpartynam",{"_index":1827,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["encoding/base64",{"_index":1692,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["encoding/json",{"_index":2309,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["encourag",{"_index":2669,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["encrypt",{"_index":1427,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["end",{"_index":404,"title":{"13-5":{}},"name":{},"text":{"4":{},"7":{},"12":{},"13":{},"16":{},"21":{},"22":{},"23":{},"27":{},"28":{},"29":{},"32":{},"37":{},"39":{}},"component":{},"keyword":{}}],["endian",{"_index":2371,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["endpoint",{"_index":17,"title":{"1-5":{},"3-1":{},"18-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"10":{},"13":{},"14":{},"16":{},"18":{},"21":{},"22":{},"23":{},"25":{},"26":{},"28":{},"38":{}},"component":{},"keyword":{}}],["endresult",{"_index":827,"title":{},"name":{},"text":{"13":{},"41":{}},"component":{},"keyword":{}}],["endresult!=ok",{"_index":2795,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["enforc",{"_index":1370,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["eng",{"_index":1877,"title":{},"name":{},"text":{"20":{},"23":{},"37":{}},"component":{},"keyword":{}}],["engin",{"_index":899,"title":{"15-14":{},"30-13":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["engine::generalpurpos",{"_index":1716,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["engine::{self",{"_index":1706,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["english",{"_index":2671,"title":{"33-1":{}},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["enough",{"_index":1105,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ensur",{"_index":706,"title":{},"name":{},"text":{"9":{},"14":{},"20":{},"29":{}},"component":{},"keyword":{}}],["enter",{"_index":540,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"15":{},"20":{},"23":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["entiti",{"_index":447,"title":{},"name":{},"text":{"5":{},"24":{},"29":{}},"component":{},"keyword":{}}],["entri",{"_index":195,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"15":{},"16":{},"25":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["enum",{"_index":2326,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["enumer",{"_index":1250,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["environ",{"_index":441,"title":{"36":{}},"name":{"36":{}},"text":{"5":{},"19":{},"24":{},"32":{},"33":{},"35":{},"39":{}},"component":{},"keyword":{}}],["eod",{"_index":2302,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["equal",{"_index":2205,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["equival",{"_index":1410,"title":{},"name":{},"text":{"17":{},"27":{}},"component":{},"keyword":{}}],["err",{"_index":1694,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["erron",{"_index":1001,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["error",{"_index":43,"title":{"2-2":{},"2-6":{},"3-2":{},"13-1":{},"15-28":{},"16-2":{},"16-6":{},"30-27":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"13":{},"15":{},"16":{},"18":{},"20":{},"23":{},"25":{},"30":{},"32":{},"33":{},"36":{},"39":{}},"component":{},"keyword":{}}],["error').foreach(el",{"_index":2131,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["error(\"could",{"_index":2092,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["error(\"invalid",{"_index":2078,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["error.messag",{"_index":2185,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["errorel",{"_index":2126,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["errorel.textcont",{"_index":2128,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["especi",{"_index":2488,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["essenti",{"_index":142,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"15":{},"16":{},"18":{},"30":{}},"component":{},"keyword":{}}],["est",{"_index":2751,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["establish",{"_index":1217,"title":{},"name":{},"text":{"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["esteid",{"_index":1207,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["esteid2018",{"_index":1160,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["esteid2018.pem.crt",{"_index":1124,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["esteid2018_trusted.pem.crt",{"_index":1125,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["estonian",{"_index":1102,"title":{},"name":{},"text":{"15":{},"29":{},"30":{},"33":{},"35":{},"37":{}},"component":{},"keyword":{}}],["etc",{"_index":1223,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["etsi",{"_index":188,"title":{"10-2":{}},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"14":{},"16":{},"22":{},"28":{}},"component":{},"keyword":{}}],["etsi/:id",{"_index":414,"title":{"10-2":{}},"name":{},"text":{"4":{},"10":{},"22":{}},"component":{},"keyword":{}}],["etsi/idccz",{"_index":752,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["etsi/paskz",{"_index":748,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["etsi/pnoe",{"_index":750,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["eu",{"_index":1166,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["evalu",{"_index":1381,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["even",{"_index":698,"title":{},"name":{},"text":{"9":{},"14":{},"15":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["event.preventdefault",{"_index":1548,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["event.target.closest('.sidebar",{"_index":1565,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["eventu",{"_index":1319,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["exact",{"_index":842,"title":{},"name":{},"text":{"13":{},"29":{}},"component":{},"keyword":{}}],["exactli",{"_index":91,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"17":{},"18":{},"20":{},"29":{}},"component":{},"keyword":{}}],["examin",{"_index":2513,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["exampl",{"_index":261,"title":{"3-4":{},"6-1":{},"21-4":{},"25-4":{},"34-1":{},"34-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"13":{},"14":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{}},"component":{},"keyword":{}}],["exce",{"_index":2530,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["except",{"_index":1576,"title":{},"name":{},"text":{"20":{},"23":{},"26":{},"27":{},"31":{}},"component":{},"keyword":{}}],["execut",{"_index":1083,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["exercis",{"_index":1377,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["exist",{"_index":94,"title":{},"name":{},"text":{"1":{},"4":{},"13":{},"15":{},"18":{},"22":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["exit",{"_index":1340,"title":{},"name":{},"text":{"15":{},"19":{},"30":{}},"component":{},"keyword":{}}],["expect",{"_index":782,"title":{},"name":{},"text":{"12":{},"15":{},"23":{},"29":{},"30":{}},"component":{},"keyword":{}}],["experi",{"_index":357,"title":{},"name":{},"text":{"3":{},"7":{},"14":{},"23":{},"28":{},"37":{},"39":{}},"component":{},"keyword":{}}],["expir",{"_index":167,"title":{},"name":{},"text":{"1":{},"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["explain",{"_index":558,"title":{},"name":{},"text":{"7":{},"20":{},"23":{},"25":{}},"component":{},"keyword":{}}],["explan",{"_index":662,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{},"keyword":{}}],["explicitli",{"_index":910,"title":{"15-20":{},"30-19":{}},"name":{},"text":{"15":{},"25":{},"29":{},"30":{}},"component":{},"keyword":{}}],["export",{"_index":1179,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["exportcertdata",{"_index":1183,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["expos",{"_index":23,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["expr",{"_index":1194,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["express",{"_index":1437,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["extend",{"_index":2521,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["extens",{"_index":780,"title":{},"name":{},"text":{"12":{},"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["extern",{"_index":1227,"title":{},"name":{},"text":{"15":{},"30":{},"33":{}},"component":{},"keyword":{}}],["extra",{"_index":481,"title":{},"name":{},"text":{"6":{},"9":{},"15":{},"25":{},"26":{},"30":{},"40":{}},"component":{},"keyword":{}}],["extract",{"_index":534,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"27":{},"29":{},"30":{}},"component":{},"keyword":{}}],["f\"{result:04d",{"_index":2415,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["f5",{"_index":1196,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["f5c6cb",{"_index":1930,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["f8d7da",{"_index":1928,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["f8f9fa",{"_index":1917,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["f9f9f9",{"_index":1993,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["fact",{"_index":314,"title":{},"name":{},"text":{"2":{},"8":{},"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["factor",{"_index":2547,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["fade",{"_index":1498,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["fail",{"_index":113,"title":{},"name":{},"text":{"1":{},"6":{},"18":{},"21":{},"25":{},"29":{}},"component":{},"keyword":{}}],["failur",{"_index":2367,"title":{},"name":{},"text":{"26":{},"29":{}},"component":{},"keyword":{}}],["fall",{"_index":510,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["fallback",{"_index":475,"title":{"37":{},"7-6":{},"23-14":{}},"name":{},"text":{"6":{},"7":{},"14":{},"19":{},"23":{},"25":{},"28":{},"29":{},"32":{},"37":{},"39":{}},"component":{},"keyword":{}}],["fals",{"_index":256,"title":{},"name":{},"text":{"2":{},"3":{},"11":{},"16":{},"19":{},"20":{},"29":{}},"component":{},"keyword":{}}],["famili",{"_index":1173,"title":{},"name":{},"text":{"15":{},"17":{},"20":{},"30":{}},"component":{},"keyword":{}}],["familiar",{"_index":1373,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["faq",{"_index":2659,"title":{"32-2":{},"39-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["fast",{"_index":2487,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["fatal",{"_index":49,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["favorit",{"_index":2718,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["fb3a161a30bc",{"_index":266,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["fb6b9e546015",{"_index":1400,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["fbe",{"_index":1982,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["featur",{"_index":1286,"title":{},"name":{},"text":{"15":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["feedback",{"_index":876,"title":{"15-3":{},"30-2":{},"35-4":{}},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["fetch",{"_index":682,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["few",{"_index":2286,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["ff3c12",{"_index":1921,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ffeeee",{"_index":1926,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["fff",{"_index":1521,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["fiction",{"_index":1091,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["field",{"_index":12,"title":{"1-4":{},"18-4":{}},"name":{},"text":{"1":{},"4":{},"12":{},"15":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"41":{}},"component":{},"keyword":{}}],["fieldset",{"_index":1951,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["fifth",{"_index":2460,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["fill",{"_index":2148,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["filter",{"_index":1047,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["final",{"_index":681,"title":{},"name":{},"text":{"9":{},"14":{},"20":{},"22":{},"23":{},"28":{},"31":{}},"component":{},"keyword":{}}],["financi",{"_index":985,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["find",{"_index":2733,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["first",{"_index":492,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"20":{},"25":{},"28":{},"30":{},"31":{}},"component":{},"keyword":{}}],["fish",{"_index":1064,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["five",{"_index":2459,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["flag",{"_index":1292,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["flex",{"_index":1961,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["fli",{"_index":645,"title":{},"name":{},"text":{"7":{},"15":{},"30":{}},"component":{},"keyword":{}}],["flow",{"_index":198,"title":{"7":{},"8":{},"23":{},"27":{},"8-1":{},"9-1":{},"9-2":{},"9-3":{},"23-2":{},"23-3":{},"27-1":{},"32-4":{},"39-6":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"14":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"32":{},"39":{}},"component":{},"keyword":{}}],["flow_typ",{"_index":2612,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["flowtyp",{"_index":2219,"title":{},"name":{},"text":{"22":{},"31":{}},"component":{},"keyword":{}}],["fmt",{"_index":1629,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["fmt.printf(\"%q\\n",{"_index":1632,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["fmt.printf(\"%s\\n",{"_index":1702,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["fmt.printf(\"%s\\n\",verificationcod",{"_index":2423,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["fmt.printf(\"error",{"_index":2317,"title":{},"name":{},"text":{"25":{},"31":{}},"component":{},"keyword":{}}],["fmt.sprintf(\"%04d",{"_index":2422,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["fn",{"_index":1633,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["fnzffya5wglv9b27fzngawrobqle4tgwxzudfrbdpl1rqvxjsfoqvtbjafd+8bcehmoqgvak6zlp+f8tga4bfq",{"_index":1648,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["focu",{"_index":638,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["follow",{"_index":53,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["font",{"_index":1463,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["forbidden",{"_index":614,"title":{},"name":{},"text":{"7":{},"23":{},"25":{},"36":{}},"component":{},"keyword":{}}],["forc",{"_index":1041,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["forcedarkmodest",{"_index":1455,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["foreground",{"_index":354,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["foreign",{"_index":1018,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["forg",{"_index":176,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["form",{"_index":570,"title":{"20-12":{}},"name":{},"text":{"7":{},"20":{},"23":{},"27":{}},"component":{},"keyword":{}}],["format",{"_index":393,"title":{},"name":{},"text":{"4":{},"7":{},"22":{},"23":{},"31":{}},"component":{},"keyword":{}}],["format!(\"{:04",{"_index":2431,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["format!(\"{}?devicelinktype={}&elapsedseconds={}&sessiontoken={}&sessiontype={}&version={}&lang",{"_index":1907,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["format!(\"{}?devicelinktype={}&elapsedseconds={}&sessiontoken={}&sessiontype={}&version={}&lang={}&authcod",{"_index":2260,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["format!(\"{}?devicelinktype={}&sessiontoken={}&sessiontype={}&version={}&lang",{"_index":1886,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["format!(\"{}?devicelinktype={}&sessiontoken={}&sessiontype={}&version={}&lang={}&authcod",{"_index":2252,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["formula",{"_index":560,"title":{},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["forpwzigtgpvivucwidxv1u01qbnaf7ob2wjgetrkpyo/atx7707vsg3o2jdtuezthjvuvm2v9tkeaihor+nng",{"_index":2657,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["forward",{"_index":526,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["found",{"_index":59,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"15":{},"16":{},"20":{},"29":{},"30":{},"36":{},"37":{},"38":{}},"component":{},"keyword":{}}],["four",{"_index":847,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["fourth",{"_index":848,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["fra",{"_index":2758,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["fragment",{"_index":2247,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["frame",{"_index":836,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["fraud",{"_index":1356,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["fraudul",{"_index":765,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["free",{"_index":2790,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["freedom",{"_index":1386,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["french",{"_index":2759,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["fresh",{"_index":536,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["friendli",{"_index":221,"title":{},"name":{},"text":{"2":{},"3":{},"16":{},"32":{},"39":{}},"component":{},"keyword":{}}],["frontend",{"_index":520,"title":{},"name":{},"text":{"7":{},"14":{},"23":{},"28":{}},"component":{},"keyword":{}}],["frontend/app",{"_index":604,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["full",{"_index":1180,"title":{},"name":{},"text":{"15":{},"17":{},"21":{},"29":{},"30":{},"31":{},"39":{}},"component":{},"keyword":{}}],["fulli",{"_index":895,"title":{"15-13":{},"30-12":{}},"name":{},"text":{},"component":{},"keyword":{}}],["fun",{"_index":1639,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["func",{"_index":1630,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["function",{"_index":433,"title":{},"name":{},"text":{"5":{},"7":{},"15":{},"19":{},"20":{},"21":{},"24":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["function(ev",{"_index":1547,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["fundament",{"_index":2210,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["further",{"_index":787,"title":{},"name":{},"text":{"12":{},"13":{},"15":{},"21":{},"29":{},"30":{}},"component":{},"keyword":{}}],["futur",{"_index":315,"title":{},"name":{},"text":{"2":{},"8":{},"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["g2",{"_index":2776,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["gain",{"_index":1053,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["gather",{"_index":1092,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["gayjx30tdvzg8if4v97nii5d",{"_index":1768,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["gdpr",{"_index":1383,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["gener",{"_index":482,"title":{"15-28":{},"30-27":{},"31-3":{}},"name":{},"text":{"6":{},"7":{},"8":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["general_purpos",{"_index":1707,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["general_purpose::no_pad",{"_index":1718,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["generates/calcul",{"_index":607,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["genuin",{"_index":172,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["geograph",{"_index":1235,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["german",{"_index":2761,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["get",{"_index":841,"title":{"35-2":{}},"name":{},"text":{"13":{},"19":{},"35":{}},"component":{},"keyword":{}}],["getbytes(standardcharsets.utf_8",{"_index":1661,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["getencod",{"_index":2638,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["getenv('ssl_client_cert",{"_index":1184,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["getinstance(\"sha",{"_index":2433,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["give",{"_index":336,"title":{"35-4":{}},"name":{},"text":{"3":{},"5":{},"9":{},"15":{},"16":{},"24":{},"30":{},"35":{}},"component":{},"keyword":{}}],["given",{"_index":89,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"12":{},"13":{},"15":{},"16":{},"20":{},"23":{},"27":{},"28":{},"30":{}},"component":{},"keyword":{}}],["global",{"_index":2775,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["glossari",{"_index":416,"title":{"5":{},"24":{}},"name":{"5":{},"24":{}},"text":{"19":{}},"component":{},"keyword":{}}],["gnswxxejtckr89fj9uo5u5rebz9jr7_pezlai5jms00",{"_index":2593,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["go",{"_index":1591,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{},"34":{}},"component":{},"keyword":{}}],["good",{"_index":1098,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["googl",{"_index":462,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["govca2018.pem.crt",{"_index":1112,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["govca2018_trusted.pem.crt",{"_index":1120,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["govern",{"_index":1103,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["grant",{"_index":2712,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["greater",{"_index":1225,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["grey/off",{"_index":1918,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["group",{"_index":1959,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["guarante",{"_index":825,"title":{},"name":{},"text":{"13":{},"17":{},"20":{}},"component":{},"keyword":{}}],["guid",{"_index":141,"title":{"15":{},"30":{}},"name":{},"text":{"1":{},"3":{},"9":{},"12":{},"18":{},"19":{},"21":{},"26":{},"29":{},"32":{},"39":{}},"component":{},"keyword":{}}],["guidanc",{"_index":996,"title":{"25-2":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["guidelin",{"_index":970,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["gys+yoah6emacvdniajwss6ub/m95xrdxmzxbukwqj9yfdipxxzgppc7rawcuc2+teorc7wviz/7du/irxenyg",{"_index":1602,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["h1",{"_index":1504,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["h2",{"_index":1505,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["h3",{"_index":1506,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["h4",{"_index":1507,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["h5",{"_index":1508,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["h6",{"_index":1509,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["halfway",{"_index":800,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["hand",{"_index":1093,"title":{},"name":{},"text":{"15":{},"30":{},"31":{}},"component":{},"keyword":{}}],["handl",{"_index":438,"title":{},"name":{},"text":{"5":{},"15":{},"21":{},"24":{},"30":{}},"component":{},"keyword":{}}],["handshak",{"_index":156,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"30":{}},"component":{},"keyword":{}}],["happen",{"_index":209,"title":{},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["harass",{"_index":883,"title":{"15-7":{},"30-6":{}},"name":{},"text":{},"component":{},"keyword":{}}],["hash",{"_index":601,"title":{"17-4":{}},"name":{},"text":{"7":{},"9":{},"12":{},"15":{},"17":{},"20":{},"21":{},"22":{},"26":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["hash($hashalgorithm",{"_index":2607,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hash('sha256",{"_index":2403,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["hash(utf8",{"_index":2589,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hash_hmac('sha256",{"_index":1676,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hashalgorithm",{"_index":2604,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hashedtrackingid",{"_index":1302,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hasher",{"_index":2631,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hasher.finalize().to_vec",{"_index":2635,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hasher.update(acsp_v2_payload.as_byt",{"_index":2633,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hashlib",{"_index":1678,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["hashlib.sha256(interactions.encode('utf",{"_index":2614,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["hashlib.sha256(rp_challenge_bytes).digest",{"_index":2411,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hashlib.sha256).digest",{"_index":1686,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hashlib.sha512(acsp_v2_payload).digest",{"_index":2618,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["have",{"_index":334,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"30":{}},"component":{},"keyword":{}}],["head",{"_index":1483,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["header",{"_index":1241,"title":{},"name":{},"text":{"15":{},"19":{},"30":{}},"component":{},"keyword":{}}],["height",{"_index":1494,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["help",{"_index":960,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["helpdesk",{"_index":1224,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["henc",{"_index":1063,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["here",{"_index":454,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"10":{},"17":{},"20":{},"23":{},"24":{},"35":{},"37":{},"38":{},"39":{},"40":{}},"component":{},"keyword":{}}],["herself",{"_index":464,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["hex",{"_index":2765,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["hexadecim",{"_index":2376,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hexdec(bin2hex(substr($sha256hash",{"_index":2404,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["hidden",{"_index":1976,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hide",{"_index":1344,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hideclientbutton",{"_index":1457,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["hidedarkmodetoggl",{"_index":1454,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["hidemodel",{"_index":1451,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["high",{"_index":517,"title":{},"name":{},"text":{"7":{},"15":{},"30":{}},"component":{},"keyword":{}}],["higher",{"_index":777,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["his/her",{"_index":838,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["histori",{"_index":929,"title":{"15-29":{},"30-28":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["history.back",{"_index":1562,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["history.length",{"_index":1559,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["history.replacest",{"_index":1567,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["hmac",{"_index":574,"title":{},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["hmac.algorithm",{"_index":1722,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.computehash(authcodepayload",{"_index":1730,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.digest('base64url",{"_index":1739,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.dofinal(authcodepayload",{"_index":1724,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.init(secretkey",{"_index":1723,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.new(session_secret",{"_index":1685,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.new(sha256.new",{"_index":1698,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac.update(authcodepayload",{"_index":1738,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac::<sha256>::new_from_slice(session_secret).expect(\"hmac",{"_index":1712,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmac::{hmac",{"_index":1703,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["hmacsha256",{"_index":595,"title":{},"name":{},"text":{"7":{},"20":{}},"component":{},"keyword":{}}],["hmacsha256(sessionsecret",{"_index":596,"title":{},"name":{},"text":{"7":{},"20":{}},"component":{},"keyword":{}}],["hook",{"_index":1062,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hope",{"_index":1057,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["host",{"_index":1338,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hour",{"_index":1316,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hover",{"_index":1464,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["html",{"_index":1077,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["http",{"_index":0,"title":{"38":{},"1-1":{},"18-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"13":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"23":{},"25":{},"30":{},"36":{},"38":{}},"component":{},"keyword":{}}],["http/1.1",{"_index":32,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["http://responder.example.com:8888/respond",{"_index":1149,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["http::releas",{"_index":1199,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["httponli",{"_index":1291,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://beta.dokobit.com",{"_index":2724,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://c.sk.ee/e",{"_index":1111,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://c.sk.ee/esteid2018.pem.crt",{"_index":1114,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://cheatsheetseries.owasp.org/cheatsheets/authentication_cheat_sheet.html#authent",{"_index":1248,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://crates.io/crates/smart",{"_index":2695,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["https://demo.sk.ee/upload_cert",{"_index":2728,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/security/securerandom.html",{"_index":1438,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["https://github.com/bogatykh/smart",{"_index":2692,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["https://github.com/dknight/go",{"_index":2693,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["https://github.com/sk",{"_index":988,"title":{},"name":{},"text":{"15":{},"24":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["https://github.com/zippyvision/smart",{"_index":2690,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["https://https://rp",{"_index":395,"title":{},"name":{},"text":{"4":{},"13":{},"14":{}},"component":{},"keyword":{}}],["https://https://smart",{"_index":609,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["https://itunes.apple.com/us/app/testflight/id899247664?mt=8",{"_index":2706,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://play.google.com/apps/testing/com.stagnationlab.sk",{"_index":2703,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://rp",{"_index":2469,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{},"keyword":{}}],["https://rp.example.com/callback",{"_index":1608,"title":{},"name":{},"text":{"20":{},"21":{},"31":{}},"component":{},"keyword":{}}],["https://sid.demo.sk.ee/port",{"_index":2700,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://sid.demo.sk.ee/portal/login",{"_index":2729,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://sid.demo.sk.ee/smart",{"_index":2741,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["https://sk",{"_index":2663,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["https://smart",{"_index":1610,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["https://smid.demo.sk.e",{"_index":2722,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://testflight.apple.com/join/dowddzjr",{"_index":2708,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["https://web",{"_index":1143,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://www.sk.ee/upload/files/ee_certification_centre_root_ca.pem.crt",{"_index":1113,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://www.skidsolutions.eu/en/repository/cp",{"_index":1157,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://www.skidsolutions.eu/en/services/valid",{"_index":1145,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://www.skidsolutions.eu/upload/files/sk",{"_index":1158,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["https://www.smart",{"_index":2791,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["https_pin",{"_index":2763,"title":{},"name":{"38":{}},"text":{},"component":{},"keyword":{}}],["human",{"_index":943,"title":{"15-39":{},"30-38":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["hybdqyueqtvxepqwc7k8a97l",{"_index":295,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["hyphen",{"_index":743,"title":{},"name":{},"text":{"10":{},"22":{}},"component":{},"keyword":{}}],["i.",{"_index":674,"title":{},"name":{},"text":{"9":{},"13":{},"15":{},"20":{},"26":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["i32",{"_index":1906,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["id",{"_index":65,"title":{"32":{},"35":{},"15-19":{},"15-21":{},"15-26":{},"15-30":{},"15-36":{},"15-38":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{},"30-18":{},"30-20":{},"30-25":{},"30-29":{},"30-35":{},"30-37":{},"32-4":{},"35-1":{},"36-3":{},"38-3":{},"38-4":{},"39-2":{},"39-6":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["id'|'acsp_v2'|serverrandom|rpchallenge|userchallenge|base64(relyingpartyname)|base64(brokeredrpname)|base64(sha",{"_index":2536,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["id.com",{"_index":856,"title":{"38-1":{}},"name":{},"text":{"14":{},"20":{},"23":{},"28":{},"33":{},"36":{}},"component":{},"keyword":{}}],["id.com/",{"_index":2792,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["id.com/devic",{"_index":1611,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["id.com/dynam",{"_index":610,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["id.com/v1",{"_index":398,"title":{},"name":{},"text":{"4":{},"36":{}},"component":{},"keyword":{}}],["id.com/v2",{"_index":397,"title":{},"name":{},"text":{"4":{},"36":{}},"component":{},"keyword":{}}],["id.com/v3",{"_index":2735,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["id.com/v3/session/de305d54",{"_index":804,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["id/mobil",{"_index":1015,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["id/smart",{"_index":992,"title":{},"name":{},"text":{"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["idc",{"_index":731,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["idempot",{"_index":3,"title":{"1-2":{},"18-2":{}},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["ident",{"_index":204,"title":{"15-35":{},"30-34":{}},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"10":{},"12":{},"14":{},"15":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["identif",{"_index":729,"title":{},"name":{},"text":{"10":{},"28":{},"29":{},"35":{}},"component":{},"keyword":{}}],["identifi",{"_index":307,"title":{"15-31":{},"30-30":{}},"name":{},"text":{"2":{},"3":{},"7":{},"10":{},"12":{},"14":{},"15":{},"16":{},"21":{},"23":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["idnt",{"_index":1252,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["idp",{"_index":2713,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["if(preg_match(\"/$certificatepolicies$/m",{"_index":1187,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ignor",{"_index":9,"title":{"1-4":{},"18-4":{}},"name":{},"text":{"1":{},"4":{},"11":{},"13":{},"18":{},"22":{}},"component":{},"keyword":{}}],["ignoredproperti",{"_index":762,"title":{},"name":{},"text":{"11":{},"13":{}},"component":{},"keyword":{}}],["illustr",{"_index":663,"title":{},"name":{},"text":{"8":{},"9":{},"27":{}},"component":{},"keyword":{}}],["imag",{"_index":545,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["img",{"_index":1511,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["immedi",{"_index":348,"title":{},"name":{},"text":{"3":{},"14":{},"28":{}},"component":{},"keyword":{}}],["impact",{"_index":1005,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["imper",{"_index":973,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["implement",{"_index":140,"title":{"15":{},"30":{},"38":{},"15-19":{},"30-18":{}},"name":{"32":{}},"text":{"1":{},"2":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"21":{},"26":{},"28":{},"29":{},"30":{},"32":{},"36":{},"39":{}},"component":{},"keyword":{}}],["implicitli",{"_index":1128,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["implode($separ",{"_index":1618,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["import",{"_index":959,"title":{},"name":{},"text":{"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"38":{},"41":{}},"component":{},"keyword":{}}],["improv",{"_index":302,"title":{},"name":{},"text":{"2":{},"8":{},"14":{},"16":{},"28":{}},"component":{},"keyword":{}}],["inappropri",{"_index":503,"title":{},"name":{},"text":{"6":{}},"component":{},"keyword":{}}],["incid",{"_index":950,"title":{"15-42":{},"30-41":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["includ",{"_index":759,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"20":{},"22":{},"23":{},"25":{},"30":{},"31":{},"33":{},"34":{},"35":{}},"component":{},"keyword":{}}],["includebrokeredrp",{"_index":2156,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["inclus",{"_index":670,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["inconveni",{"_index":1035,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["incorrect",{"_index":1011,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["incorrectli",{"_index":2284,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["increas",{"_index":1232,"title":{},"name":{},"text":{"15":{},"22":{},"30":{}},"component":{},"keyword":{}}],["inde",{"_index":1328,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["index",{"_index":2789,"title":{},"name":{"39":{}},"text":{},"component":{},"keyword":{}}],["indic",{"_index":47,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"20":{},"30":{}},"component":{},"keyword":{}}],["individu",{"_index":1134,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["info",{"_index":815,"title":{},"name":{},"text":{"13":{},"35":{},"37":{}},"component":{},"keyword":{}}],["inform",{"_index":466,"title":{"15-27":{},"30-26":{}},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"10":{},"15":{},"17":{},"18":{},"24":{},"25":{},"26":{},"29":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["initi",{"_index":567,"title":{},"name":{},"text":{"7":{},"14":{},"15":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["initial_callback_url",{"_index":1623,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["initial_callback_url.as_byt",{"_index":1865,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initial_callback_url.encode('utf",{"_index":1863,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initial_callback_url_byt",{"_index":1862,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurl",{"_index":1572,"title":{"20-10":{}},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"31":{}},"component":{},"keyword":{}}],["initialcallbackurl.getbytes(standardcharsets.utf_8",{"_index":1860,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurl.tobytearray(charsets.utf_8",{"_index":1867,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlbyt",{"_index":1859,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlgroup",{"_index":2047,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlgroup.classlist.add('hidden",{"_index":2096,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlgroup.classlist.contains('hidden",{"_index":2098,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlgroup.classlist.remove('hidden",{"_index":2097,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlinput",{"_index":2049,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["initialcallbackurlinput.valu",{"_index":2158,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["inlin",{"_index":1538,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["input",{"_index":1418,"title":{},"name":{},"text":{"17":{},"20":{},"31":{}},"component":{},"keyword":{}}],["input.invalid",{"_index":1979,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["input[type=\"checkbox",{"_index":1974,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["input[type=\"radio",{"_index":1962,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["input[type=\"text",{"_index":1968,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["inputelement.classlist.remove('invalid",{"_index":2129,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["insensit",{"_index":117,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["insert",{"_index":626,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["inset",{"_index":1994,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["insid",{"_index":88,"title":{},"name":{},"text":{"1":{},"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["insist",{"_index":512,"title":{},"name":{},"text":{"6":{}},"component":{},"keyword":{}}],["instal",{"_index":420,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"14":{},"23":{},"24":{},"25":{},"28":{},"35":{}},"component":{},"keyword":{}}],["instanc",{"_index":419,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["instanceof",{"_index":2074,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["instead",{"_index":384,"title":{},"name":{},"text":{"4":{},"7":{},"14":{},"15":{},"22":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["instruct",{"_index":647,"title":{},"name":{},"text":{"7":{},"23":{},"28":{}},"component":{},"keyword":{}}],["int",{"_index":1902,"title":{},"name":{},"text":{"20":{},"23":{},"27":{}},"component":{},"keyword":{}}],["int(sha256hash[len(sha256hash",{"_index":2420,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["int.from_bytes(sha256_hash",{"_index":2412,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["int2str",{"_index":2262,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["integ",{"_index":793,"title":{},"name":{},"text":{"13":{},"27":{}},"component":{},"keyword":{}}],["integer(sha",{"_index":2377,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["integer.tostring(elapsedsecond",{"_index":2264,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["integr",{"_index":535,"title":{"32":{},"32-3":{},"39-2":{},"39-5":{}},"name":{},"text":{"7":{},"9":{},"15":{},"19":{},"23":{},"24":{},"26":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["intellig",{"_index":1359,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["intend",{"_index":333,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["inter",{"_index":1468,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["interact",{"_index":246,"title":{"6":{},"25":{},"20-9":{},"25-1":{},"25-3":{},"25-4":{}},"name":{"6":{},"25":{}},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"28":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["interaction<'a",{"_index":2332,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interaction_type_us",{"_index":2611,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["interactionflowus",{"_index":403,"title":{},"name":{},"text":{"4":{},"6":{},"13":{}},"component":{},"keyword":{}}],["interactions.getbytes(standardcharsets.utf_8",{"_index":2299,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactions.tobytearray(standardcharsets.utf_8",{"_index":2342,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactions<'a",{"_index":2322,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactions_base64",{"_index":2306,"title":{},"name":{},"text":{"25":{},"31":{}},"component":{},"keyword":{}}],["interactions_hash",{"_index":2613,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["interactions_str",{"_index":2304,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactionsbase64",{"_index":2298,"title":{},"name":{},"text":{"25":{},"31":{}},"component":{},"keyword":{}}],["interactionsbase64encod",{"_index":2295,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactionsbyt",{"_index":2315,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactionsgroup",{"_index":2041,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionsgroup.classlist.add('hidden",{"_index":2115,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionsgroup.classlist.remove('hidden",{"_index":2106,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionshash",{"_index":2596,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["interactionsinput",{"_index":2045,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionsinput.valu",{"_index":2167,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionsjson",{"_index":2344,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactionsjsonstr",{"_index":2301,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactionslabel",{"_index":2043,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionslabel.classlist.add('requir",{"_index":2107,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionslabel.classlist.remove('requir",{"_index":2116,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["interactionsstr",{"_index":2347,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactions{{typ",{"_index":2314,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interactiontypeus",{"_index":2226,"title":{},"name":{},"text":{"22":{},"25":{},"31":{}},"component":{},"keyword":{}}],["interaction{type_field",{"_index":2338,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["interfac",{"_index":5,"title":{"1-3":{},"18-3":{}},"name":{},"text":{"1":{},"7":{},"9":{},"15":{},"18":{},"23":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["intermedi",{"_index":2495,"title":{},"name":{},"text":{"29":{},"38":{}},"component":{},"keyword":{}}],["intern",{"_index":1327,"title":{},"name":{},"text":{"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["internet",{"_index":2287,"title":{},"name":{},"text":{"25":{},"35":{}},"component":{},"keyword":{}}],["interpret",{"_index":2370,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["interv",{"_index":548,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["intervent",{"_index":655,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["introduc",{"_index":688,"title":{},"name":{},"text":{"9":{},"22":{},"26":{},"31":{}},"component":{},"keyword":{}}],["introduct",{"_index":391,"title":{"9":{},"26":{},"15-1":{},"30-1":{}},"name":{"9":{},"26":{}},"text":{"4":{},"19":{},"22":{}},"component":{},"keyword":{}}],["invalid",{"_index":786,"title":{},"name":{},"text":{"12":{},"15":{},"21":{},"25":{},"29":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["invalidcharactererror",{"_index":2077,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["investig",{"_index":1335,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["invok",{"_index":210,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["involv",{"_index":2273,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{},"keyword":{}}],["io",{"_index":461,"title":{},"name":{},"text":{"5":{},"24":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["ios13",{"_index":2704,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["ip",{"_index":108,"title":{"11-1":{},"15-37":{},"15-38":{},"15-39":{},"15-40":{},"30-36":{},"30-37":{},"30-38":{},"30-39":{}},"name":{},"text":{"1":{},"2":{},"3":{},"11":{},"13":{},"15":{},"16":{},"18":{},"30":{},"33":{},"36":{}},"component":{},"keyword":{}}],["ip::client_addr",{"_index":1212,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["irrit",{"_index":1028,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["iso",{"_index":580,"title":{},"name":{},"text":{"7":{},"10":{},"23":{},"37":{}},"component":{},"keyword":{}}],["issu",{"_index":208,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"14":{},"15":{},"16":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["issuanc",{"_index":918,"title":{"15-23":{},"30-22":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["issuer",{"_index":1206,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["isvalid",{"_index":2137,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["item",{"_index":1960,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{},"keyword":{}}],["itself",{"_index":585,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"20":{},"23":{},"29":{},"30":{},"38":{}},"component":{},"keyword":{}}],["it’",{"_index":2497,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["jane",{"_index":2289,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["java",{"_index":1407,"title":{"38-3":{}},"name":{},"text":{"17":{},"20":{},"23":{},"25":{},"27":{},"31":{},"34":{},"38":{}},"component":{},"keyword":{}}],["java.math.biginteg",{"_index":2381,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["java.nio.charset.charset",{"_index":1866,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["java.nio.charset.standardcharset",{"_index":1651,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["java.security.messagedigest",{"_index":2382,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["java.security.securerandom",{"_index":2550,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["java.util.base64",{"_index":1652,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["javax.crypto.mac",{"_index":1653,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["javax.crypto.spec.secretkeyspec",{"_index":1654,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":1751,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["join",{"_index":2584,"title":{},"name":{},"text":{"31":{},"35":{}},"component":{},"keyword":{}}],["join(separ",{"_index":1646,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["jointostring(separ",{"_index":2640,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["json",{"_index":13,"title":{"1-4":{},"18-4":{}},"name":{},"text":{"1":{},"4":{},"18":{},"20":{},"22":{},"25":{},"29":{},"31":{}},"component":{},"keyword":{}}],["json.dumps(interact",{"_index":2305,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json.generate(interact",{"_index":2351,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json.marshal(interact",{"_index":2316,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json.stringify(interact",{"_index":2348,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json:\"displaytext200,omitempti",{"_index":2312,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json:\"displaytext60,omitempti",{"_index":2313,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["json:\"typ",{"_index":2311,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["jvo5yoplivhqqahw4ivpx2_kgqizbe99iooupeqxbk0",{"_index":1757,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["keep",{"_index":712,"title":{"15-32":{},"15-37":{},"30-31":{},"30-36":{}},"name":{},"text":{"9":{},"15":{},"23":{},"27":{},"30":{}},"component":{},"keyword":{}}],["kept",{"_index":287,"title":{},"name":{},"text":{"2":{},"7":{},"16":{},"17":{},"23":{}},"component":{},"keyword":{}}],["key",{"_index":164,"title":{"15-24":{},"30-23":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"12":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"29":{},"35":{}},"component":{},"keyword":{}}],["keyencipher",{"_index":2525,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["keypad",{"_index":1269,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["kick",{"_index":1324,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["kind",{"_index":48,"title":{},"name":{},"text":{"1":{},"5":{},"15":{},"18":{},"24":{},"30":{}},"component":{},"keyword":{}}],["know",{"_index":608,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["known",{"_index":162,"title":{"15-25":{},"30-24":{}},"name":{},"text":{"1":{},"10":{},"14":{},"15":{},"18":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["kotlin",{"_index":1593,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["kp",{"_index":2527,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["kz",{"_index":742,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["label",{"_index":1963,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["label.required::aft",{"_index":1965,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["label::aft",{"_index":1967,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["label[for=\"usebrokeredrp",{"_index":1975,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["label[for=\"usebrokeredrp\"]::aft",{"_index":1966,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["lang",{"_index":579,"title":{"23-10":{}},"name":{},"text":{"7":{},"20":{},"23":{},"37":{}},"component":{},"keyword":{}}],["lang=$lang",{"_index":1891,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["languag",{"_index":582,"title":{},"name":{},"text":{"7":{},"17":{},"23":{},"34":{},"37":{}},"component":{},"keyword":{}}],["larg",{"_index":1039,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["last",{"_index":363,"title":{"15-27":{},"30-26":{}},"name":{},"text":{"3":{},"15":{},"25":{},"27":{},"30":{}},"component":{},"keyword":{}}],["last_2_byt",{"_index":2454,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["last_2_bytes_bitmask",{"_index":2393,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["lastseen",{"_index":1300,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["later",{"_index":80,"title":{},"name":{},"text":{"1":{},"17":{},"21":{},"35":{}},"component":{},"keyword":{}}],["latest",{"_index":687,"title":{},"name":{},"text":{"9":{},"26":{},"34":{}},"component":{},"keyword":{}}],["latter",{"_index":1285,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["latvian",{"_index":2678,"title":{},"name":{},"text":{"33":{},"37":{}},"component":{},"keyword":{}}],["launch",{"_index":173,"title":{},"name":{},"text":{"1":{},"9":{},"15":{},"18":{},"20":{},"21":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["lav",{"_index":2755,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["law",{"_index":1369,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["layout",{"_index":1493,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["lead",{"_index":1153,"title":{},"name":{},"text":{"15":{},"26":{},"30":{}},"component":{},"keyword":{}}],["leaf",{"_index":1147,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["leagu",{"_index":1379,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["leak",{"_index":613,"title":{"15-10":{},"30-9":{}},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["learn",{"_index":202,"title":{},"name":{},"text":{"2":{},"7":{},"10":{},"23":{}},"component":{},"keyword":{}}],["left",{"_index":308,"title":{},"name":{},"text":{"2":{},"14":{},"16":{}},"component":{},"keyword":{}}],["left/right",{"_index":1950,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["legal",{"_index":435,"title":{},"name":{},"text":{"5":{},"24":{},"35":{}},"component":{},"keyword":{}}],["legend",{"_index":605,"title":{},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["legitim",{"_index":1351,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["len",{"_index":2068,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["length",{"_index":826,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"29":{},"30":{}},"component":{},"keyword":{}}],["less",{"_index":635,"title":{},"name":{},"text":{"7":{},"15":{},"17":{},"20":{},"23":{},"30":{}},"component":{},"keyword":{}}],["letter",{"_index":319,"title":{},"name":{},"text":{"2":{},"8":{},"15":{},"16":{},"19":{},"23":{},"30":{}},"component":{},"keyword":{}}],["level",{"_index":224,"title":{"36-3":{}},"name":{},"text":{"2":{},"3":{},"7":{},"12":{},"13":{},"15":{},"16":{},"21":{},"23":{},"29":{},"30":{}},"component":{},"keyword":{}}],["lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":1774,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["librari",{"_index":785,"title":{"34":{},"34-2":{}},"name":{},"text":{"12":{},"15":{},"19":{},"20":{},"29":{},"30":{},"34":{},"38":{}},"component":{},"keyword":{}}],["light",{"_index":1456,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["limit",{"_index":122,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"16":{},"31":{}},"component":{},"keyword":{}}],["line",{"_index":1268,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"30":{}},"component":{},"keyword":{}}],["link",{"_index":179,"title":{"7":{},"23":{},"37":{},"2-1":{},"7-2":{},"7-3":{},"7-5":{},"9-1":{},"16-1":{},"23-1":{},"23-4":{},"23-13":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"9":{},"10":{},"14":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"35":{},"37":{}},"component":{},"keyword":{}}],["link.addeventlistener('click",{"_index":1546,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["link.href",{"_index":1561,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["link/?version=0.1&sessiontoken=kj4mioloa75zenkabfa5f251&dynamiclinktype=qr&sessiontype=auth&elapsedseconds=2&lang=eng&authcode=r5oiivdjihfjjlbca3aziju2p8oh45fbkpcn59osxboo",{"_index":625,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["link/?version=0.1&sessiontoken=kj4mioloa75zenkabfa5f251&dynamiclinktype=web2app&sessiontype=auth&elapsedseconds=2&lang=eng&authcode=r5oiivdjihfjjlbca3aziju2p8oh45fbkpcn59osxboo",{"_index":612,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["link/?version=…​&sessiontoken=…​&dynamiclinktype=…​&sessiontype=…​&elapsedseconds=…​&lang=…​&authcod",{"_index":611,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["link/anonym",{"_index":193,"title":{},"name":{},"text":{"2":{},"14":{},"28":{}},"component":{},"keyword":{}}],["link/document/:documentnumb",{"_index":192,"title":{},"name":{},"text":{"2":{},"14":{},"16":{}},"component":{},"keyword":{}}],["link/document/{docu",{"_index":2475,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["link/etsi/:id",{"_index":187,"title":{},"name":{},"text":{"2":{},"14":{},"16":{}},"component":{},"keyword":{}}],["link/etsi/{id",{"_index":2474,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["link?devicelinktype=app2app&sessiontoken=tw1hownacw0wd",{"_index":1756,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["link?devicelinktype=qr&elapsedseconds=22&sessiontoken=tw1hownacw0wd",{"_index":1773,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["link?devicelinktype=web2app&sessiontoken=tw1hownacw0wd",{"_index":1612,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["link_hov",{"_index":1465,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["linkedsessionid",{"_index":2483,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["list",{"_index":478,"title":{},"name":{},"text":{"6":{},"7":{},"11":{},"15":{},"19":{},"25":{},"29":{},"30":{}},"component":{},"keyword":{}}],["list<str",{"_index":1641,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["listof",{"_index":1642,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["lit",{"_index":2754,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["lithuanian",{"_index":2682,"title":{},"name":{},"text":{"33":{},"37":{}},"component":{},"keyword":{}}],["live",{"_index":2734,"title":{"36-1":{}},"name":{},"text":{},"component":{},"keyword":{}}],["loadbalanc",{"_index":1197,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["local",{"_index":709,"title":{},"name":{},"text":{"9":{},"15":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["local0",{"_index":1211,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["locat",{"_index":134,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["log",{"_index":849,"title":{},"name":{},"text":{"14":{},"15":{},"25":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["logic",{"_index":197,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["login",{"_index":175,"title":{"15-6":{},"30-5":{}},"name":{},"text":{"1":{},"2":{},"7":{},"15":{},"18":{},"30":{},"35":{},"40":{}},"component":{},"keyword":{}}],["logo",{"_index":1444,"title":{"40":{}},"name":{"40":{}},"text":{"19":{}},"component":{},"keyword":{}}],["long",{"_index":685,"title":{},"name":{},"text":{"9":{},"13":{},"15":{},"26":{},"30":{}},"component":{},"keyword":{}}],["longer",{"_index":511,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"25":{},"30":{}},"component":{},"keyword":{}}],["look",{"_index":1075,"title":{},"name":{},"text":{"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["lookup",{"_index":1311,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["loss",{"_index":986,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["low",{"_index":627,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["lower",{"_index":1314,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["lt",{"_index":740,"title":{},"name":{},"text":{"10":{},"41":{}},"component":{},"keyword":{}}],["lv",{"_index":741,"title":{},"name":{},"text":{"10":{},"41":{}},"component":{},"keyword":{}}],["mac",{"_index":1240,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["mac.finalize().into_byt",{"_index":1714,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mac.getinstance(\"hmacsha256",{"_index":1663,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mac.sum(nil",{"_index":1700,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mac.update(auth_code_payload",{"_index":1713,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mac.write(authcodepayload",{"_index":1699,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["made",{"_index":1323,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["mail",{"_index":994,"title":{},"name":{},"text":{"15":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["main",{"_index":194,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"14":{},"16":{},"17":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"31":{}},"component":{},"keyword":{}}],["main(str",{"_index":1599,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["mainten",{"_index":77,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["make",{"_index":147,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"26":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["make([]byt",{"_index":2562,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["malici",{"_index":940,"title":{"15-37":{},"15-40":{},"30-36":{},"30-39":{}},"name":{},"text":{"15":{},"20":{},"28":{},"30":{}},"component":{},"keyword":{}}],["man",{"_index":150,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["manag",{"_index":446,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["mandat",{"_index":339,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["mandatori",{"_index":216,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"15":{},"16":{},"17":{},"22":{},"25":{},"28":{},"30":{}},"component":{},"keyword":{}}],["mani",{"_index":868,"title":{},"name":{},"text":{"14":{},"15":{},"30":{},"34":{}},"component":{},"keyword":{}}],["manual",{"_index":1068,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["margin",{"_index":629,"title":{},"name":{},"text":{"7":{},"19":{},"20":{},"23":{}},"component":{},"keyword":{}}],["mark",{"_index":369,"title":{},"name":{},"text":{"3":{},"15":{},"16":{},"30":{}},"component":{},"keyword":{}}],["markdown",{"_index":1501,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["match",{"_index":118,"title":{},"name":{},"text":{"1":{},"7":{},"10":{},"15":{},"18":{},"20":{},"21":{},"23":{},"27":{},"29":{},"30":{}},"component":{},"keyword":{}}],["max",{"_index":484,"title":{},"name":{},"text":{"6":{},"19":{},"20":{},"25":{}},"component":{},"keyword":{}}],["maxim",{"_index":2545,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["maximum",{"_index":704,"title":{},"name":{},"text":{"9":{},"13":{},"26":{}},"component":{},"keyword":{}}],["mb",{"_index":2008,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mb_convert_encoding($initialcallbackurl",{"_index":1861,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["md",{"_index":2387,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["md.digest",{"_index":2391,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["md.update(rpchallengebyt",{"_index":2389,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["md256",{"_index":2594,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["md256.digest",{"_index":2597,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["md256.update(interactions.getbytes(standardcharsets.utf_8",{"_index":2595,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["md512",{"_index":2600,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["md512.digest",{"_index":2602,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["md512.update(acspv2payload",{"_index":2601,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["mean",{"_index":215,"title":{"38-5":{}},"name":{},"text":{"2":{},"3":{},"9":{},"13":{},"15":{},"16":{},"25":{},"26":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["meaning",{"_index":1299,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["meant",{"_index":502,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["meanwhil",{"_index":683,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["measur",{"_index":673,"title":{"15-15":{},"15-16":{},"30-14":{},"30-15":{}},"name":{},"text":{"8":{},"15":{},"30":{}},"component":{},"keyword":{}}],["mechan",{"_index":659,"title":{},"name":{},"text":{"8":{},"9":{},"11":{},"15":{},"26":{},"27":{},"30":{}},"component":{},"keyword":{}}],["media",{"_index":1536,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mediat",{"_index":1080,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["medium",{"_index":699,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["meet",{"_index":2283,"title":{},"name":{},"text":{"25":{},"29":{}},"component":{},"keyword":{}}],["member",{"_index":1174,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["mention",{"_index":378,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["merg",{"_index":138,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["messag",{"_index":25,"title":{"15-28":{},"30-27":{}},"name":{},"text":{"1":{},"4":{},"7":{},"9":{},"15":{},"18":{},"22":{},"23":{},"25":{},"27":{},"30":{},"31":{},"32":{},"39":{}},"component":{},"keyword":{}}],["messagedigest",{"_index":2386,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["messagedigest.getinstance(\"sha",{"_index":2388,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["method",{"_index":184,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"13":{},"16":{},"17":{},"26":{},"27":{},"35":{},"38":{}},"component":{},"keyword":{}}],["mgf1",{"_index":2540,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["micro",{"_index":1475,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mid",{"_index":1258,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["middl",{"_index":151,"title":{},"name":{},"text":{"1":{},"18":{},"20":{}},"component":{},"keyword":{}}],["millisecond",{"_index":795,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["min",{"_index":1529,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["mind",{"_index":2275,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{},"keyword":{}}],["mine",{"_index":892,"title":{"15-11":{},"30-10":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["minifi",{"_index":2291,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["minim",{"_index":696,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["minimum",{"_index":798,"title":{},"name":{},"text":{"13":{},"29":{},"35":{}},"component":{},"keyword":{}}],["minu",{"_index":744,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["mismatch",{"_index":1925,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["miss",{"_index":809,"title":{},"name":{},"text":{"13":{},"20":{},"23":{}},"component":{},"keyword":{}}],["mistak",{"_index":879,"title":{"15-5":{},"15-6":{},"30-4":{},"30-5":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["mitig",{"_index":906,"title":{"15-18":{},"30-17":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["mitm",{"_index":152,"title":{},"name":{},"text":{"1":{},"18":{},"38":{}},"component":{},"keyword":{}}],["mobil",{"_index":252,"title":{"11-1":{}},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["mock",{"_index":2799,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mod",{"_index":2379,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["mod(biginteger(\"10000",{"_index":2435,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["mod(new",{"_index":2397,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["mod_ssl",{"_index":1135,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["modal",{"_index":1528,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mode",{"_index":1392,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{},"keyword":{}}],["model",{"_index":2732,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["modern",{"_index":1287,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["modifi",{"_index":1272,"title":{},"name":{},"text":{"15":{},"30":{},"31":{}},"component":{},"keyword":{}}],["monitor",{"_index":763,"title":{"15-41":{},"30-40":{}},"name":{},"text":{"11":{},"15":{},"30":{}},"component":{},"keyword":{}}],["mono",{"_index":1473,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["monospac",{"_index":1474,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["mood",{"_index":974,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["more",{"_index":73,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"23":{},"25":{},"26":{},"30":{},"32":{},"33":{},"35":{},"37":{},"39":{}},"component":{},"keyword":{}}],["mostli",{"_index":2363,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["motiv",{"_index":666,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["move",{"_index":1320,"title":{},"name":{},"text":{"15":{},"22":{},"30":{}},"component":{},"keyword":{}}],["mt",{"_index":2006,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mtlop6excrq6foerckjxuhbv",{"_index":2592,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["much",{"_index":695,"title":{},"name":{},"text":{"9":{},"15":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["multi",{"_index":678,"title":{"14-1":{}},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["multipl",{"_index":341,"title":{"15-31":{},"21-2":{},"30-30":{}},"name":{},"text":{"3":{},"7":{},"9":{},"13":{},"15":{},"23":{},"26":{},"30":{},"31":{}},"component":{},"keyword":{}}],["multi→cross",{"_index":2229,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["mut",{"_index":1711,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["mwmj_okimup",{"_index":1745,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["name",{"_index":11,"title":{"1-4":{},"18-4":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"25":{},"30":{},"35":{},"36":{},"41":{}},"component":{},"keyword":{}}],["nation",{"_index":732,"title":{"15-35":{},"30-34":{}},"name":{},"text":{"10":{},"15":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["nativ",{"_index":530,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["natur",{"_index":191,"title":{"10-2":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"10":{},"14":{},"15":{},"16":{},"22":{},"24":{},"28":{},"30":{}},"component":{},"keyword":{}}],["navig",{"_index":619,"title":{},"name":{},"text":{"7":{},"15":{},"21":{},"30":{}},"component":{},"keyword":{}}],["neccessari",{"_index":1130,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["necessari",{"_index":522,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"29":{},"30":{}},"component":{},"keyword":{}}],["need",{"_index":331,"title":{"32-3":{},"39-5":{}},"name":{},"text":{"3":{},"5":{},"7":{},"13":{},"14":{},"15":{},"17":{},"20":{},"22":{},"23":{},"24":{},"28":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["nefari",{"_index":1030,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["neg",{"_index":2717,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["net",{"_index":2691,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["network",{"_index":1347,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["neutral",{"_index":1478,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["never",{"_index":2277,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["nevertheless",{"_index":975,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["new",{"_index":130,"title":{"32-4":{},"39-6":{}},"name":{},"text":{"1":{},"4":{},"7":{},"9":{},"12":{},"15":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"34":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["newer",{"_index":1163,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["newli",{"_index":385,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["next",{"_index":346,"title":{},"name":{},"text":{"3":{},"7":{},"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["nil",{"_index":1696,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["nld",{"_index":2756,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["nobodi",{"_index":977,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["node",{"_index":1341,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["node.j",{"_index":1595,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["non",{"_index":523,"title":{"15-31":{},"30-30":{}},"name":{},"text":{"7":{},"8":{},"14":{},"15":{},"17":{},"20":{},"23":{},"25":{},"28":{},"30":{},"31":{}},"component":{},"keyword":{}}],["nonc",{"_index":103,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"16":{},"18":{},"22":{}},"component":{},"keyword":{}}],["none",{"_index":1499,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["nonrepudi",{"_index":2529,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["normal",{"_index":36,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"20":{},"30":{}},"component":{},"keyword":{}}],["not_mid_cli",{"_index":1257,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["notaft",{"_index":2504,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["notbefor",{"_index":2503,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["note",{"_index":312,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"41":{}},"component":{},"keyword":{}}],["notic",{"_index":592,"title":{},"name":{},"text":{"7":{},"13":{},"17":{},"23":{}},"component":{},"keyword":{}}],["notif",{"_index":181,"title":{"8":{},"27":{},"2-5":{},"9-2":{},"9-3":{},"16-5":{},"28-4":{},"28-7":{},"28-9":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"9":{},"13":{},"14":{},"15":{},"16":{},"19":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{}},"component":{},"keyword":{}}],["notification_based_flow",{"_index":656,"title":{},"name":{"8":{},"27":{}},"text":{},"component":{},"keyword":{}}],["notificationverificationcod",{"_index":2383,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["now",{"_index":70,"title":{},"name":{},"text":{"1":{},"13":{},"22":{},"29":{},"35":{},"36":{}},"component":{},"keyword":{}}],["nowaday",{"_index":1073,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["nq",{"_index":2809,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["null",{"_index":1552,"title":{},"name":{},"text":{"19":{},"20":{},"29":{}},"component":{},"keyword":{}}],["number",{"_index":343,"title":{"15-35":{},"30-34":{}},"name":{},"text":{"3":{},"4":{},"8":{},"10":{},"13":{},"14":{},"15":{},"16":{},"22":{},"24":{},"27":{},"28":{},"30":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["numer",{"_index":322,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{},"keyword":{}}],["numeric4",{"_index":2458,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["object",{"_index":15,"title":{"10":{},"1-4":{},"18-4":{},"25-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"25":{},"28":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["object_refer",{"_index":720,"title":{},"name":{"10":{}},"text":{},"component":{},"keyword":{}}],["obtain",{"_index":347,"title":{},"name":{},"text":{"3":{},"7":{},"14":{},"15":{},"16":{},"20":{},"23":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["occur",{"_index":646,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"23":{},"30":{},"35":{}},"component":{},"keyword":{}}],["ocsp",{"_index":916,"title":{"15-22":{},"30-21":{}},"name":{},"text":{"15":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["ocsp/crl",{"_index":2509,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["offer",{"_index":549,"title":{},"name":{},"text":{"7":{},"9":{},"23":{},"26":{},"33":{}},"component":{},"keyword":{}}],["offic",{"_index":1088,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["offici",{"_index":2516,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["oid",{"_index":1156,"title":{},"name":{},"text":{"15":{},"17":{},"29":{},"30":{}},"component":{},"keyword":{}}],["ok",{"_index":775,"title":{},"name":{},"text":{"12":{},"13":{},"29":{},"41":{}},"component":{},"keyword":{}}],["ok\\n",{"_index":1191,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ol",{"_index":1514,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["old",{"_index":72,"title":{},"name":{},"text":{"1":{},"12":{},"21":{},"32":{},"39":{}},"component":{},"keyword":{}}],["older",{"_index":1315,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["omit",{"_index":105,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["on",{"_index":119,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["onc",{"_index":680,"title":{},"name":{},"text":{"9":{},"10":{},"20":{},"21":{},"26":{},"28":{}},"component":{},"keyword":{}}],["ongo",{"_index":1362,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["onlin",{"_index":2505,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{},"keyword":{}}],["onto",{"_index":850,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["onward",{"_index":2524,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["open",{"_index":527,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"21":{},"23":{},"30":{}},"component":{},"keyword":{}}],["openapi",{"_index":1441,"title":{"19":{}},"name":{},"text":{"19":{},"28":{},"31":{}},"component":{},"keyword":{}}],["openssl",{"_index":1107,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["openssl::hmac.digest",{"_index":1742,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["openssl_x509_parse($cert",{"_index":1185,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["oper",{"_index":211,"title":{"15-29":{},"30-28":{}},"name":{},"text":{"2":{},"3":{},"5":{},"13":{},"15":{},"16":{},"17":{},"24":{},"30":{},"35":{}},"component":{},"keyword":{}}],["opportun",{"_index":979,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["optim",{"_index":630,"title":{},"name":{},"text":{"7":{},"23":{},"28":{}},"component":{},"keyword":{}}],["option",{"_index":102,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"10":{},"11":{},"14":{},"15":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["order",{"_index":301,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"15":{},"16":{},"20":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"36":{}},"component":{},"keyword":{}}],["organ",{"_index":434,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["organis",{"_index":982,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["organiz",{"_index":440,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["origin",{"_index":107,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"30":{}},"component":{},"keyword":{}}],["os",{"_index":653,"title":{},"name":{},"text":{"7":{},"31":{}},"component":{},"keyword":{}}],["os.urandom(64",{"_index":2558,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["os/brows",{"_index":2278,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["osrng.fill_bytes(&mut",{"_index":2568,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["other",{"_index":968,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["otherwis",{"_index":851,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"20":{},"28":{},"30":{}},"component":{},"keyword":{}}],["out",{"_index":1119,"title":{"35-3":{},"39-1":{}},"name":{},"text":{"15":{},"19":{},"30":{},"35":{},"39":{}},"component":{},"keyword":{}}],["outag",{"_index":1044,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["outlin",{"_index":1141,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["outright",{"_index":1278,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["over",{"_index":24,"title":{"15-14":{},"30-13":{}},"name":{},"text":{"1":{},"12":{},"15":{},"17":{},"18":{},"30":{},"31":{}},"component":{},"keyword":{}}],["overal",{"_index":2500,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["overhead",{"_index":2292,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["overrid",{"_index":101,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["overview",{"_index":513,"title":{"28":{},"7-1":{}},"name":{"28":{}},"text":{"9":{},"15":{},"19":{},"30":{},"35":{}},"component":{},"keyword":{}}],["owner",{"_index":424,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["p",{"_index":1502,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["pa",{"_index":728,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["packag",{"_index":1628,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["pad",{"_index":1481,"title":{},"name":{},"text":{"19":{},"20":{},"31":{}},"component":{},"keyword":{}}],["pade",{"_index":2362,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["padstart(4",{"_index":2451,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["page",{"_index":515,"title":{"35":{},"37":{},"7-6":{},"23-14":{}},"name":{},"text":{"7":{},"14":{},"15":{},"19":{},"20":{},"21":{},"23":{},"28":{},"29":{},"30":{},"32":{},"35":{},"37":{},"38":{},"39":{}},"component":{},"keyword":{}}],["pair",{"_index":429,"title":{},"name":{},"text":{"5":{},"16":{},"24":{},"35":{}},"component":{},"keyword":{}}],["panel",{"_index":1467,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["panic(err",{"_index":1697,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{},"keyword":{}}],["paramet",{"_index":93,"title":{"36":{},"2-3":{},"2-7":{},"3-3":{},"16-3":{},"16-7":{},"20-1":{},"20-2":{},"20-3":{},"20-4":{},"20-5":{},"20-6":{},"20-7":{},"20-8":{},"20-9":{},"20-10":{},"20-11":{},"23-4":{},"23-5":{},"23-6":{},"23-7":{},"23-8":{},"23-9":{},"23-10":{},"23-11":{},"23-12":{},"31-2":{},"31-4":{},"31-7":{},"31-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"13":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"31":{},"36":{},"37":{}},"component":{},"keyword":{}}],["pars",{"_index":2494,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["part",{"_index":383,"title":{},"name":{},"text":{"4":{},"7":{},"10":{},"16":{},"22":{},"29":{}},"component":{},"keyword":{}}],["parti",{"_index":22,"title":{"19-1":{},"34-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"9":{},"15":{},"16":{},"18":{},"19":{},"20":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["partial",{"_index":1193,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["particip",{"_index":1376,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["particular",{"_index":222,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"10":{},"15":{},"16":{},"25":{},"26":{},"30":{},"38":{}},"component":{},"keyword":{}}],["particularli",{"_index":467,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["party’",{"_index":677,"title":{},"name":{},"text":{"9":{},"15":{},"26":{},"30":{}},"component":{},"keyword":{}}],["pass",{"_index":362,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["passport",{"_index":730,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["password",{"_index":1246,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["past",{"_index":998,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["path",{"_index":2212,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{},"keyword":{}}],["path/to/client_request_cas_directori",{"_index":1132,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["path/to/trusted_certificates_directori",{"_index":1109,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["pattern",{"_index":1261,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["payload",{"_index":568,"title":{},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["payloadbyt",{"_index":2172,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["payloadpart",{"_index":1615,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["payloadparts.jointostring(separ",{"_index":1643,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["payloadusedel",{"_index":2063,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["payloadusedelement.textcont",{"_index":2152,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pc",{"_index":556,"title":{},"name":{},"text":{"7":{},"14":{},"23":{},"28":{}},"component":{},"keyword":{}}],["pdf",{"_index":2361,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["peerextlist('extendedkeyusag",{"_index":1195,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["pem",{"_index":2773,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["per",{"_index":45,"title":{},"name":{},"text":{"1":{},"7":{},"17":{},"18":{},"23":{}},"component":{},"keyword":{}}],["percentag",{"_index":1058,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["perform",{"_index":143,"title":{},"name":{},"text":{"1":{},"5":{},"12":{},"15":{},"18":{},"21":{},"23":{},"24":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["perhap",{"_index":1364,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["period",{"_index":571,"title":{},"name":{},"text":{"7":{},"29":{}},"component":{},"keyword":{}}],["permiss",{"_index":207,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["person",{"_index":62,"title":{"15-43":{},"30-42":{}},"name":{},"text":{"1":{},"5":{},"7":{},"10":{},"11":{},"12":{},"15":{},"16":{},"23":{},"24":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["person’",{"_index":421,"title":{},"name":{},"text":{"5":{},"12":{},"15":{},"16":{},"24":{},"30":{}},"component":{},"keyword":{}}],["persuad",{"_index":1089,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["phase",{"_index":1318,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["phish",{"_index":303,"title":{"15-12":{},"15-13":{},"21-5":{},"30-11":{},"30-12":{}},"name":{},"text":{"2":{},"14":{},"15":{},"16":{},"21":{},"28":{},"30":{}},"component":{},"keyword":{}}],["phone",{"_index":590,"title":{"15-14":{},"30-13":{}},"name":{},"text":{"7":{},"14":{},"15":{},"23":{},"28":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["php",{"_index":1181,"title":{"38-4":{}},"name":{},"text":{"15":{},"20":{},"23":{},"25":{},"27":{},"30":{},"31":{},"34":{},"38":{}},"component":{},"keyword":{}}],["php_eol",{"_index":1879,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pilot",{"_index":1024,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["pin",{"_index":165,"title":{"38":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"9":{},"13":{},"18":{},"19":{},"23":{},"25":{},"35":{},"36":{},"38":{}},"component":{},"keyword":{}}],["pin1",{"_index":1021,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["pin2",{"_index":1067,"title":{},"name":{},"text":{"15":{},"30":{},"35":{}},"component":{},"keyword":{}}],["pixel",{"_index":633,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["pkc",{"_index":2222,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["place",{"_index":869,"title":{},"name":{},"text":{"14":{},"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["platform",{"_index":2702,"title":{},"name":{},"text":{"35":{},"38":{}},"component":{},"keyword":{}}],["pleas",{"_index":754,"title":{},"name":{},"text":{"10":{},"15":{},"20":{},"27":{},"30":{},"33":{},"35":{},"36":{}},"component":{},"keyword":{}}],["pno",{"_index":734,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["pno/:country/:n",{"_index":413,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["pnobe",{"_index":2805,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["pnoee",{"_index":828,"title":{},"name":{},"text":{"13":{},"29":{},"41":{}},"component":{},"keyword":{}}],["pnolt",{"_index":2801,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["pnolv",{"_index":2802,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["point",{"_index":196,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"15":{},"16":{},"23":{},"26":{},"30":{}},"component":{},"keyword":{}}],["pointer",{"_index":1988,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["polic",{"_index":1087,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["polici",{"_index":919,"title":{"15-23":{},"30-22":{}},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["poll",{"_index":686,"title":{},"name":{},"text":{"9":{},"13":{},"21":{},"26":{}},"component":{},"keyword":{}}],["popular",{"_index":2375,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["portal",{"_index":69,"title":{},"name":{},"text":{"1":{},"35":{}},"component":{},"keyword":{}}],["pose",{"_index":1084,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["posit",{"_index":37,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["possess",{"_index":1393,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["possibl",{"_index":476,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"13":{},"15":{},"21":{},"23":{},"25":{},"26":{},"28":{},"30":{},"35":{},"37":{}},"component":{},"keyword":{}}],["post",{"_index":84,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"14":{},"16":{},"18":{},"28":{}},"component":{},"keyword":{}}],["potenti",{"_index":956,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["power",{"_index":1072,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["pr",{"_index":2274,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["practic",{"_index":1247,"title":{},"name":{},"text":{"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["pre",{"_index":561,"title":{},"name":{},"text":{"7":{},"19":{},"20":{},"23":{}},"component":{},"keyword":{}}],["preced",{"_index":866,"title":{},"name":{},"text":{"14":{},"28":{},"29":{}},"component":{},"keyword":{}}],["prefer",{"_index":529,"title":{},"name":{},"text":{"7":{},"21":{},"23":{},"25":{},"28":{},"35":{}},"component":{},"keyword":{}}],["prefix",{"_index":1940,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["prepar",{"_index":1254,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["presenc",{"_index":340,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["present",{"_index":104,"title":{"7-5":{},"23-13":{}},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"26":{},"29":{},"30":{}},"component":{},"keyword":{}}],["press",{"_index":844,"title":{},"name":{},"text":{"13":{},"15":{},"30":{}},"component":{},"keyword":{}}],["prevent",{"_index":149,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"15":{},"16":{},"18":{},"28":{},"30":{},"38":{}},"component":{},"keyword":{}}],["previou",{"_index":667,"title":{},"name":{},"text":{"8":{},"9":{},"15":{},"16":{},"20":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["previous",{"_index":344,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"9":{},"13":{},"15":{},"17":{},"22":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["primari",{"_index":2238,"title":{},"name":{},"text":{"23":{},"31":{}},"component":{},"keyword":{}}],["principl",{"_index":543,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"26":{},"30":{}},"component":{},"keyword":{}}],["print(auth_cod",{"_index":1689,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["print(auth_code_payload",{"_index":1627,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["print(base64.b64encode(digest",{"_index":2619,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["print(brokered_rp_name_base64",{"_index":1839,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["print(device_link",{"_index":2251,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["print(elapsed_seconds_str",{"_index":2268,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["print(interactions_base64",{"_index":2308,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["print(relying_party_name_base64",{"_index":1817,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["print(rp_challeng",{"_index":2560,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["print(unprotected_device_link",{"_index":1884,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["print(verification_cod",{"_index":2416,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["println",{"_index":1638,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["println!(\"{:?}\\n",{"_index":1822,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["println(authcod",{"_index":1725,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["println(authcodepayload",{"_index":1644,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["println(base64.getencoder().encodetostring(acspv2digest",{"_index":2643,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["println(brokeredrpnamebase64",{"_index":1845,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["println(devicelink",{"_index":2254,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["println(elapsedsecondsstr",{"_index":2270,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["println(interactionsbase64",{"_index":2343,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["println(relyingpartynamebase64",{"_index":1825,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["println(rpchalleng",{"_index":2574,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["println(unprotecteddevicelink",{"_index":1892,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["println(verificationcod",{"_index":2437,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["prior",{"_index":351,"title":{"14-3":{},"14-6":{},"14-11":{},"14-14":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{}},"name":{},"text":{"3":{},"14":{},"28":{}},"component":{},"keyword":{}}],["privaci",{"_index":1390,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["privat",{"_index":450,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["privileg",{"_index":258,"title":{},"name":{},"text":{"2":{},"3":{},"11":{},"16":{}},"component":{},"keyword":{}}],["probabl",{"_index":2208,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["problem",{"_index":587,"title":{},"name":{},"text":{"7":{},"23":{},"33":{},"35":{}},"component":{},"keyword":{}}],["problemat",{"_index":2489,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["proce",{"_index":1312,"title":{},"name":{},"text":{"15":{},"27":{},"30":{}},"component":{},"keyword":{}}],["procedur",{"_index":1366,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["process",{"_index":300,"title":{"15-43":{},"30-42":{}},"name":{},"text":{"2":{},"6":{},"15":{},"20":{},"29":{},"30":{}},"component":{},"keyword":{}}],["produc",{"_index":229,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["product",{"_index":1151,"title":{},"name":{},"text":{"15":{},"30":{},"32":{},"33":{},"35":{},"39":{}},"component":{},"keyword":{}}],["profil",{"_index":1208,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["program",{"_index":1411,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["progress",{"_index":1271,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["promin",{"_index":1233,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["proof",{"_index":425,"title":{},"name":{},"text":{"5":{},"9":{},"24":{},"26":{}},"component":{},"keyword":{}}],["proper",{"_index":257,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["properti",{"_index":248,"title":{"11":{}},"name":{},"text":{"2":{},"3":{},"11":{},"16":{}},"component":{},"keyword":{}}],["propos",{"_index":902,"title":{"15-16":{},"30-15":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["protect",{"_index":622,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["protocol",{"_index":111,"title":{"17":{},"31":{},"8-2":{},"13-3":{},"13-4":{},"17-1":{},"17-2":{},"27-2":{},"31-1":{},"31-6":{}},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"9":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"26":{},"27":{},"29":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["protocol_failur",{"_index":2233,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["prove",{"_index":2709,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["provid",{"_index":201,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"9":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"21":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["providers/smart",{"_index":2793,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["proxi",{"_index":1076,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["pss",{"_index":2224,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{},"keyword":{}}],["public",{"_index":163,"title":{"15-31":{},"30-30":{}},"name":{},"text":{"1":{},"5":{},"7":{},"12":{},"15":{},"17":{},"18":{},"20":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["publish",{"_index":1279,"title":{},"name":{},"text":{"15":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["pure",{"_index":1026,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["purpos",{"_index":859,"title":{},"name":{},"text":{"14":{},"28":{},"29":{},"35":{}},"component":{},"keyword":{}}],["push",{"_index":390,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"14":{},"22":{},"26":{},"27":{},"28":{}},"component":{},"keyword":{}}],["put",{"_index":1322,"title":{},"name":{},"text":{"15":{},"20":{},"23":{},"25":{},"27":{},"30":{},"31":{}},"component":{},"keyword":{}}],["python",{"_index":1590,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["q",{"_index":2800,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["qc",{"_index":189,"title":{"10-2":{}},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"14":{},"16":{},"22":{},"28":{}},"component":{},"keyword":{}}],["qmfuayaxmjm",{"_index":1604,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["qr",{"_index":386,"title":{"7-4":{},"7-5":{},"23-3":{},"23-13":{}},"name":{},"text":{"4":{},"7":{},"9":{},"10":{},"14":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"31":{},"32":{},"39":{}},"component":{},"keyword":{}}],["qr/web2app/app2app",{"_index":1574,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["qscd",{"_index":367,"title":{},"name":{},"text":{"3":{},"13":{},"16":{}},"component":{},"keyword":{}}],["qualifi",{"_index":226,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"16":{},"29":{},"35":{}},"component":{},"keyword":{}}],["quantiti",{"_index":1055,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["queri",{"_index":332,"title":{"14-4":{},"14-5":{},"14-7":{},"14-8":{},"14-12":{},"14-13":{},"14-15":{},"14-16":{}},"name":{},"text":{"3":{},"10":{},"13":{},"14":{},"28":{}},"component":{},"keyword":{}}],["question",{"_index":2683,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["quick",{"_index":358,"title":{},"name":{},"text":{"3":{},"7":{},"23":{}},"component":{},"keyword":{}}],["quickli",{"_index":1367,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ra",{"_index":427,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["radio.addeventlistener('chang",{"_index":2188,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["radiu",{"_index":1942,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["rais",{"_index":1244,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["rand.read(rpchallengebyt",{"_index":2563,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rand::rngcor",{"_index":2565,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rand::rngs::osrng",{"_index":2566,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["random",{"_index":238,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"13":{},"15":{},"16":{},"17":{},"21":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["random().nextbytes(rpchallengebyt",{"_index":2575,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["random(64",{"_index":2549,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["random.nextbytes(rpchallengebyt",{"_index":2573,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["random_bytes(64",{"_index":2556,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["randomchalleng",{"_index":268,"title":{},"name":{},"text":{"2":{},"13":{},"17":{},"22":{}},"component":{},"keyword":{}}],["randomgeneratebase64encod",{"_index":2551,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["randomli",{"_index":1288,"title":{},"name":{},"text":{"15":{},"18":{},"20":{},"22":{},"25":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["rang",{"_index":1413,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["ransom",{"_index":1032,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["raw",{"_index":2490,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["raw_digest_signatur",{"_index":392,"title":{"13-3":{},"17-2":{},"31-6":{},"31-7":{},"31-8":{},"31-9":{}},"name":{},"text":{"4":{},"13":{},"16":{},"17":{},"20":{},"22":{},"29":{},"31":{}},"component":{},"keyword":{}}],["re",{"_index":593,"title":{},"name":{},"text":{"7":{},"10":{},"13":{},"15":{},"17":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["react",{"_index":768,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["readabl",{"_index":1236,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["readi",{"_index":2660,"title":{"32-3":{},"39-5":{}},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["real",{"_index":1014,"title":{},"name":{},"text":{"15":{},"27":{},"30":{}},"component":{},"keyword":{}}],["realli",{"_index":1333,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["reason",{"_index":324,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"13":{},"15":{},"16":{},"25":{},"26":{},"27":{},"30":{},"31":{}},"component":{},"keyword":{}}],["receiv",{"_index":352,"title":{},"name":{},"text":{"3":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"17":{},"23":{},"26":{},"27":{},"28":{},"29":{},"33":{},"35":{}},"component":{},"keyword":{}}],["recent",{"_index":360,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["recogn",{"_index":2517,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["recognis",{"_index":1242,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["recommend",{"_index":304,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"20":{},"23":{},"25":{},"26":{},"28":{},"30":{},"36":{}},"component":{},"keyword":{}}],["reconstruct",{"_index":1406,"title":{},"name":{},"text":{"17":{},"29":{},"31":{}},"component":{},"keyword":{}}],["record",{"_index":465,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["redirect",{"_index":2200,"title":{},"name":{},"text":{"21":{},"23":{},"35":{}},"component":{},"keyword":{}}],["refer",{"_index":313,"title":{"10":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["referenc",{"_index":365,"title":{},"name":{},"text":{"3":{},"10":{}},"component":{},"keyword":{}}],["referr",{"_index":1549,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["referrerdomain",{"_index":1551,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["referrerurl",{"_index":1553,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["referrerurl.hostnam",{"_index":1555,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["refus",{"_index":835,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["regard",{"_index":588,"title":{},"name":{},"text":{"7":{},"8":{},"23":{},"27":{}},"component":{},"keyword":{}}],["regardless",{"_index":2276,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["regener",{"_index":2243,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["regist",{"_index":417,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"30":{},"35":{}},"component":{},"keyword":{}}],["registr",{"_index":423,"title":{},"name":{},"text":{"5":{},"10":{},"24":{},"35":{}},"component":{},"keyword":{}}],["regular",{"_index":1330,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["regularli",{"_index":547,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["rehash",{"_index":1133,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["reject",{"_index":911,"title":{"15-20":{},"30-19":{}},"name":{},"text":{"15":{},"21":{},"25":{},"30":{}},"component":{},"keyword":{}}],["relat",{"_index":428,"title":{},"name":{},"text":{"5":{},"13":{},"15":{},"24":{},"26":{},"30":{}},"component":{},"keyword":{}}],["relev",{"_index":284,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"15":{},"16":{},"23":{},"25":{},"27":{},"30":{}},"component":{},"keyword":{}}],["reli",{"_index":21,"title":{"19-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"15":{},"16":{},"18":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["relying_party_nam",{"_index":1815,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relying_party_name_base64",{"_index":1621,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["relying_party_name_base64_str",{"_index":1819,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relying_party_name_base64_string.as_byt",{"_index":1821,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relyingparti",{"_index":818,"title":{},"name":{},"text":{"13":{},"17":{}},"component":{},"keyword":{}}],["relyingpartynam",{"_index":116,"title":{"20-7":{}},"name":{},"text":{"1":{},"2":{},"3":{},"16":{},"18":{},"20":{},"23":{},"36":{}},"component":{},"keyword":{}}],["relyingpartyname.getbytes(standardcharsets.utf_8",{"_index":1812,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relyingpartynamebase64",{"_index":1603,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["relyingpartynamebyt",{"_index":1826,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relyingpartynameinput",{"_index":2031,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relyingpartynameinput.valu",{"_index":2155,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["relyingpartyuuid",{"_index":110,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"16":{},"18":{},"36":{}},"component":{},"keyword":{}}],["remain",{"_index":2668,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["rememb",{"_index":1283,"title":{},"name":{},"text":{"15":{},"17":{},"30":{},"35":{}},"component":{},"keyword":{}}],["remov",{"_index":377,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["renam",{"_index":2217,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["repeat",{"_index":87,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["repeatedli",{"_index":1029,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["replac",{"_index":400,"title":{},"name":{},"text":{"4":{},"20":{},"22":{}},"component":{},"keyword":{}}],["replace(/\\//g",{"_index":2085,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["replay",{"_index":1403,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["repli",{"_index":684,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["repons",{"_index":1259,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["report",{"_index":508,"title":{},"name":{},"text":{"6":{},"25":{},"29":{},"35":{}},"component":{},"keyword":{}}],["repres",{"_index":577,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"23":{},"29":{}},"component":{},"keyword":{}}],["represent",{"_index":599,"title":{},"name":{},"text":{"7":{},"20":{},"23":{},"27":{},"29":{}},"component":{},"keyword":{}}],["request",{"_index":30,"title":{"11":{},"2-3":{},"2-7":{},"3-3":{},"16-3":{},"16-7":{},"27-3":{},"27-4":{},"31-2":{},"31-7":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{}},"component":{},"keyword":{}}],["request_properti",{"_index":758,"title":{},"name":{"11":{}},"text":{},"component":{},"keyword":{}}],["requestproperti",{"_index":247,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"13":{},"16":{},"22":{}},"component":{},"keyword":{}}],["requestproperties.sharemdclientipaddress",{"_index":2225,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["requestproperties.vcchoic",{"_index":402,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["requir",{"_index":144,"title":{"25-1":{}},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"12":{},"14":{},"15":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["require('crypto",{"_index":1735,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["required",{"_index":904,"title":{"15-17":{},"30-16":{}},"name":{},"text":{},"component":{},"keyword":{}}],["required_interaction_not_supported_by_app",{"_index":405,"title":{},"name":{},"text":{"4":{},"6":{},"13":{},"22":{},"25":{}},"component":{},"keyword":{}}],["reserv",{"_index":127,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["resid",{"_index":871,"title":{},"name":{},"text":{"14":{},"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["resist",{"_index":2193,"title":{"21-5":{}},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["resiz",{"_index":1973,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["resolut",{"_index":1348,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["resolv",{"_index":648,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["respect",{"_index":852,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["respond",{"_index":114,"title":{"15-42":{},"30-41":{}},"name":{},"text":{"1":{},"7":{},"15":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["respons",{"_index":14,"title":{"12":{},"29":{},"1-4":{},"2-4":{},"2-8":{},"3-4":{},"3-5":{},"13-2":{},"16-4":{},"16-8":{},"18-4":{},"29-1":{},"31-4":{},"31-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"28":{},"29":{},"30":{},"31":{},"41":{}},"component":{},"keyword":{}}],["response_verif",{"_index":771,"title":{},"name":{"12":{},"29":{}},"text":{},"component":{},"keyword":{}}],["response’",{"_index":2493,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["rest",{"_index":18,"title":{"1":{},"10":{}},"name":{},"text":{"1":{},"10":{},"15":{},"18":{},"30":{}},"component":{},"keyword":{}}],["restructur",{"_index":951,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["result",{"_index":95,"title":{"13-5":{},"20-14":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["result.documentnumb",{"_index":811,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["result.endresult",{"_index":774,"title":{},"name":{},"text":{"12":{},"13":{},"29":{}},"component":{},"keyword":{}}],["result.tostring(\"d4",{"_index":2443,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["resultsdiv",{"_index":2057,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["resultsdiv.classlist.add('hidden",{"_index":2149,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["resultsdiv.classlist.remove('hidden",{"_index":2182,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["retri",{"_index":78,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["retriev",{"_index":801,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["return",{"_index":38,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"7":{},"8":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{}},"component":{},"keyword":{}}],["reus",{"_index":1796,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{},"keyword":{}}],["reveng",{"_index":1036,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["review",{"_index":1389,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["revoc",{"_index":2508,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["revok",{"_index":171,"title":{},"name":{},"text":{"1":{},"18":{},"29":{}},"component":{},"keyword":{}}],["rfc",{"_index":34,"title":{},"name":{},"text":{"1":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["rfc4648",{"_index":1415,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["rfc8017",{"_index":1428,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["rgba(0,0,0,0.05",{"_index":1996,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["rgba(0,0,0,0.1",{"_index":1947,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["right",{"_index":128,"title":{},"name":{},"text":{"1":{},"10":{},"13":{},"15":{},"18":{},"20":{},"30":{}},"component":{},"keyword":{}}],["rightmost",{"_index":2369,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["risk",{"_index":881,"title":{"15-6":{},"30-5":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["rivest",{"_index":1424,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["rm",{"_index":1126,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["roboto",{"_index":1472,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["root",{"_index":1127,"title":{},"name":{},"text":{"15":{},"29":{},"30":{},"38":{}},"component":{"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"keyword":{}}],["routin",{"_index":2501,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["rp",{"_index":16,"title":{"1-5":{},"4-2":{},"4-3":{},"15-9":{},"15-15":{},"18-5":{},"22-1":{},"22-2":{},"22-3":{},"26-1":{},"30-8":{},"30-14":{},"38-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"38":{},"39":{},"41":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"keyword":{}}],["rp.com",{"_index":1332,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["rp/v1",{"_index":2742,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["rp/v2",{"_index":2743,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["rp/v3",{"_index":2744,"title":{},"name":{},"text":{"36":{}},"component":{},"keyword":{}}],["rp_challeng",{"_index":1620,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["rp_challenge_base64",{"_index":2406,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["rp_challenge_byt",{"_index":2408,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["rp_challenge_str",{"_index":2569,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rp_challenge_string.as_byt",{"_index":2571,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rpchalleng",{"_index":1440,"title":{"20-6":{},"31-3":{}},"name":{},"text":{"18":{},"20":{},"22":{},"23":{},"27":{},"31":{}},"component":{},"keyword":{}}],["rpchallengebase64",{"_index":2384,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["rpchallengebyt",{"_index":2385,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["rpchallengebytes.tostring('base64",{"_index":2579,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["rprequest",{"_index":769,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["rpv2",{"_index":389,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["rp’",{"_index":964,"title":{},"name":{},"text":{"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["rsa",{"_index":455,"title":{},"name":{},"text":{"5":{},"17":{},"24":{},"38":{}},"component":{},"keyword":{}}],["rsassa",{"_index":2221,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{},"keyword":{}}],["rtrim(strtr(base64_encode($authcodebyt",{"_index":1677,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ru",{"_index":2752,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["rubi",{"_index":1596,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{},"34":{}},"component":{},"keyword":{}}],["rule",{"_index":755,"title":{},"name":{},"text":{"10":{},"20":{},"31":{}},"component":{},"keyword":{}}],["run",{"_index":459,"title":{},"name":{},"text":{"5":{},"13":{},"15":{},"24":{},"35":{},"38":{}},"component":{},"keyword":{}}],["running/complet",{"_index":807,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["russian",{"_index":2753,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["rust",{"_index":1592,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{},"34":{}},"component":{},"keyword":{}}],["rxhhbxbszsbsua",{"_index":1606,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["s",{"_index":439,"title":{},"name":{},"text":{"5":{},"15":{},"24":{},"30":{},"35":{}},"component":{},"keyword":{}}],["s\\n",{"_index":2318,"title":{},"name":{},"text":{"25":{},"31":{}},"component":{},"keyword":{}}],["safari",{"_index":1239,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["safe",{"_index":1003,"title":{},"name":{},"text":{"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["sales@smart",{"_index":2672,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["salt",{"_index":1305,"title":{},"name":{},"text":{"15":{},"29":{},"30":{}},"component":{},"keyword":{}}],["same",{"_index":92,"title":{"23-2":{},"28-2":{}},"name":{},"text":{"1":{},"7":{},"9":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"28":{},"30":{},"31":{},"32":{},"35":{},"38":{},"39":{}},"component":{},"keyword":{}}],["samesite=lax",{"_index":2197,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["sampl",{"_index":1417,"title":{},"name":{},"text":{"17":{},"34":{},"38":{}},"component":{},"keyword":{}}],["san",{"_index":1470,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["save",{"_index":767,"title":{},"name":{},"text":{"11":{},"21":{}},"component":{},"keyword":{}}],["sbe",{"_index":1983,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["scalar",{"_index":1459,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["scalar.createapireference('#app",{"_index":1447,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["scan",{"_index":528,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"23":{},"26":{},"28":{}},"component":{},"keyword":{}}],["scenario",{"_index":650,"title":{},"name":{},"text":{"7":{},"16":{},"23":{}},"component":{},"keyword":{}}],["scheme",{"_index":338,"title":{},"name":{},"text":{"3":{},"5":{},"13":{},"16":{},"20":{},"24":{},"29":{},"31":{}},"component":{},"keyword":{}}],["scheme_nam",{"_index":1619,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["schemenam",{"_index":1570,"title":{"20-4":{}},"name":{},"text":{"20":{},"22":{},"31":{}},"component":{},"keyword":{}}],["schemenameinput",{"_index":2017,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["schemenameinput.valu",{"_index":2154,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["scope",{"_index":1293,"title":{},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["screen",{"_index":489,"title":{},"name":{},"text":{"6":{},"13":{},"15":{},"19":{},"25":{},"30":{}},"component":{},"keyword":{}}],["screenshot",{"_index":2731,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["script",{"_index":1037,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["scroll",{"_index":2356,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["seamless",{"_index":356,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{},"keyword":{}}],["search",{"_index":1523,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["second",{"_index":99,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"15":{},"18":{},"23":{},"25":{},"30":{}},"component":{},"keyword":{}}],["secondari",{"_index":1276,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["secret",{"_index":288,"title":{},"name":{},"text":{"2":{},"7":{},"15":{},"16":{},"20":{},"23":{},"29":{},"30":{}},"component":{},"keyword":{}}],["secretkey",{"_index":1665,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["secretkeyspec",{"_index":1664,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["secretkeyspec(sessionsecret",{"_index":1666,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["section",{"_index":137,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"13":{},"15":{},"16":{},"19":{},"20":{},"23":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["secur",{"_index":139,"title":{"15":{},"30":{},"15-15":{},"15-16":{},"15-19":{},"15-42":{},"30-14":{},"30-15":{},"30-18":{},"30-41":{}},"name":{"15":{},"30":{}},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"38":{},"39":{}},"component":{},"keyword":{}}],["securerandom",{"_index":1408,"title":{},"name":{},"text":{"17":{},"27":{},"31":{}},"component":{},"keyword":{}}],["securerandom().nextbytes(rpchallengebyt",{"_index":2553,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["securerandom.random_bytes(64",{"_index":2581,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["see",{"_index":235,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"27":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"39":{}},"component":{},"keyword":{}}],["seem",{"_index":1329,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["seenonc",{"_index":1309,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["seentwic",{"_index":1310,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["select",{"_index":299,"title":{"15-26":{},"30-25":{}},"name":{},"text":{"2":{},"15":{},"20":{},"30":{},"35":{}},"component":{},"keyword":{}}],["select').foreach(el",{"_index":2134,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["select.invalid",{"_index":1981,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["selectedtyp",{"_index":2101,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["self",{"_index":67,"title":{},"name":{},"text":{"1":{},"29":{},"35":{}},"component":{},"keyword":{}}],["semant",{"_index":722,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["semanticsid",{"_index":190,"title":{"10-2":{}},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"14":{},"16":{},"22":{},"28":{}},"component":{},"keyword":{}}],["semibold",{"_index":1487,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["semicolon",{"_index":1419,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["send",{"_index":679,"title":{},"name":{},"text":{"9":{},"15":{},"21":{},"23":{},"25":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["sens",{"_index":658,"title":{},"name":{},"text":{"8":{},"27":{}},"component":{},"keyword":{}}],["sensit",{"_index":2246,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["sent",{"_index":506,"title":{},"name":{},"text":{"6":{},"15":{},"17":{},"20":{},"21":{},"23":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["separ",{"_index":552,"title":{},"name":{},"text":{"7":{},"8":{},"14":{},"15":{},"17":{},"20":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"41":{}},"component":{},"keyword":{}}],["separator.join",{"_index":1626,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["sequenc",{"_index":660,"title":{},"name":{},"text":{"8":{},"9":{},"27":{}},"component":{},"keyword":{}}],["serde(flatten",{"_index":2334,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["serde(renam",{"_index":2328,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["serde::{deseri",{"_index":2320,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["seri",{"_index":42,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["serial",{"_index":2321,"title":{},"name":{},"text":{"25":{},"38":{}},"component":{},"keyword":{}}],["serialnumb",{"_index":2531,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["serif",{"_index":1471,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["server",{"_index":50,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["server_error",{"_index":2234,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["server_random",{"_index":2609,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["serverrandom",{"_index":821,"title":{},"name":{},"text":{"13":{},"17":{},"22":{},"31":{}},"component":{},"keyword":{}}],["servic",{"_index":68,"title":{"15-9":{},"30-8":{}},"name":{},"text":{"1":{},"3":{},"5":{},"7":{},"9":{},"11":{},"13":{},"15":{},"17":{},"18":{},"20":{},"24":{},"26":{},"30":{},"35":{},"36":{},"40":{}},"component":{},"keyword":{}}],["servicenam",{"_index":923,"title":{"15-25":{},"30-24":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["session",{"_index":82,"title":{"2":{},"3":{},"13":{},"14":{},"16":{},"2-1":{},"2-5":{},"3-1":{},"3-5":{},"13-5":{},"16-1":{},"16-5":{}},"name":{"14":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["session_secret",{"_index":1681,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["session_secret_base64",{"_index":1679,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["session_secret_byt",{"_index":1802,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["session_statu",{"_index":790,"title":{},"name":{"13":{}},"text":{},"component":{},"keyword":{}}],["session_token",{"_index":1882,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["session_typ",{"_index":1883,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["sessionid",{"_index":279,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"14":{},"16":{},"23":{},"28":{}},"component":{},"keyword":{}}],["sessionsecret",{"_index":285,"title":{"20-3":{}},"name":{},"text":{"2":{},"7":{},"16":{},"20":{},"21":{},"23":{},"29":{}},"component":{},"keyword":{}}],["sessionsecretbase64",{"_index":1656,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sessionsecretbyt",{"_index":1800,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sessionsecretdigest",{"_index":2198,"title":{},"name":{},"text":{"21":{},"29":{}},"component":{},"keyword":{}}],["sessionsecretinput",{"_index":2015,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sessionsecretinput.value.trim",{"_index":2153,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sessiontoken",{"_index":280,"title":{"23-6":{}},"name":{},"text":{"2":{},"7":{},"16":{},"20":{},"23":{}},"component":{},"keyword":{}}],["sessiontoken=$sessiontoken",{"_index":1888,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["sessiontyp",{"_index":564,"title":{"23-8":{}},"name":{},"text":{"7":{},"20":{},"23":{}},"component":{},"keyword":{}}],["sessiontype=$sessiontyp",{"_index":1889,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["sessiontyperadio",{"_index":2013,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sessiontyperadios.foreach(radio",{"_index":2187,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["set",{"_index":255,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"13":{},"14":{},"15":{},"16":{},"21":{},"23":{},"29":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["setup",{"_index":1294,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sha",{"_index":575,"title":{},"name":{},"text":{"7":{},"17":{},"20":{},"21":{},"22":{},"27":{},"29":{}},"component":{},"keyword":{}}],["sha256",{"_index":1743,"title":{},"name":{},"text":{"20":{},"23":{},"27":{},"38":{}},"component":{},"keyword":{}}],["sha256(sessionsecret",{"_index":1650,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha256.computehash(rpchallengebyt",{"_index":2440,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256.creat",{"_index":2439,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256.create().computehash(encoding.utf8.getbytes(interact",{"_index":2644,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha256.digest",{"_index":2448,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256.sum256([]byte(interact",{"_index":2621,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha256.sum256(rpchallengebyt",{"_index":2419,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256.update(rpchalleng",{"_index":2447,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256::digest(&rp_challenge_byt",{"_index":2427,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256::digest(interactions.as_byt",{"_index":2627,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha256_hash",{"_index":2410,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256_hash[30",{"_index":2428,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256_hash[31",{"_index":2430,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256hash",{"_index":2390,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256hash.readuint16be(30",{"_index":2449,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256hash[30",{"_index":2441,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256hash[31",{"_index":2442,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sha256hmac",{"_index":1662,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha256hmac.dofinal(authcodepayload",{"_index":1670,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha256hmac.getalgorithm",{"_index":1667,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha256hmac.init(secretkey",{"_index":1668,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha256withrsaencrypt",{"_index":271,"title":{},"name":{},"text":{"2":{},"17":{}},"component":{},"keyword":{}}],["sha2::sha256",{"_index":1704,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sha2::{sha256",{"_index":2425,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{},"keyword":{}}],["sha384withrsaencrypt",{"_index":1432,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["sha512",{"_index":2605,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha512.create().computehash(acspv2payload",{"_index":2646,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha512.sum512([]byte(acspv2payload",{"_index":2625,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha512::new",{"_index":2632,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["sha512withrsaencrypt",{"_index":832,"title":{},"name":{},"text":{"13":{},"16":{},"17":{}},"component":{},"keyword":{}}],["shadow",{"_index":1944,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["shall",{"_index":727,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["shamir",{"_index":1425,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["share",{"_index":251,"title":{"11-1":{}},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"11":{},"13":{},"16":{},"23":{},"26":{}},"component":{},"keyword":{}}],["sharemdclientipaddress",{"_index":249,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"16":{},"22":{}},"component":{},"keyword":{}}],["short",{"_index":275,"title":{},"name":{},"text":{"2":{},"6":{},"15":{},"16":{},"25":{},"30":{},"35":{}},"component":{},"keyword":{}}],["shortcut",{"_index":368,"title":{},"name":{},"text":{"3":{},"16":{}},"component":{},"keyword":{}}],["shortli",{"_index":448,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["shouldfallbacktohref",{"_index":1558,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["shouldn't",{"_index":1213,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["show",{"_index":544,"title":{"15-29":{},"15-30":{},"30-28":{},"30-29":{}},"name":{},"text":{"7":{},"15":{},"19":{},"23":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["shown",{"_index":586,"title":{},"name":{},"text":{"7":{},"8":{},"23":{},"24":{},"26":{},"27":{},"28":{}},"component":{},"keyword":{}}],["showsidebar",{"_index":1450,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["sid.demo.sk.e",{"_index":2762,"title":{"38-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["side",{"_index":436,"title":{},"name":{},"text":{"5":{},"13":{},"15":{},"17":{},"24":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["sidebar",{"_index":1526,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["sign",{"_index":168,"title":{"9-3":{},"14-3":{},"14-6":{},"14-11":{},"14-14":{},"28-5":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{}},"component":{},"keyword":{}}],["signatur",{"_index":86,"title":{"16":{},"17":{},"31":{},"8-2":{},"13-3":{},"13-4":{},"16-1":{},"16-5":{},"17-1":{},"17-2":{},"17-3":{},"27-2":{},"27-4":{},"31-1":{},"31-2":{},"31-4":{},"31-6":{},"31-7":{},"31-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"38":{}},"component":{},"keyword":{}}],["signature.serverrandom",{"_index":1421,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["signature.signaturealgorithm",{"_index":1422,"title":{},"name":{},"text":{"17":{},"29":{},"31":{}},"component":{},"keyword":{}}],["signature.signaturealgorithmparamet",{"_index":2539,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["signature.signaturealgorithmparameters.hashalgorithm",{"_index":2586,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["signature.userchalleng",{"_index":2492,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["signature.valu",{"_index":781,"title":{},"name":{},"text":{"12":{},"17":{},"29":{},"31":{}},"component":{},"keyword":{}}],["signature/certif",{"_index":1439,"title":{},"name":{},"text":{"18":{},"22":{}},"component":{},"keyword":{}}],["signature/notification/link",{"_index":2231,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["signature_protocol",{"_index":1401,"title":{},"name":{"17":{},"31":{}},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["signature_sess",{"_index":1391,"title":{},"name":{"16":{}},"text":{},"component":{},"keyword":{}}],["signaturealgorithm",{"_index":270,"title":{},"name":{},"text":{"2":{},"13":{},"16":{},"17":{}},"component":{},"keyword":{}}],["signaturebuff",{"_index":2177,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocol",{"_index":227,"title":{"20-5":{}},"name":{},"text":{"2":{},"13":{},"16":{},"17":{},"20":{},"23":{},"29":{},"31":{}},"component":{},"keyword":{}}],["signatureprotocolgroup",{"_index":2019,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocolgroup.classlist.add('hidden",{"_index":2111,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocolgroup.classlist.remove('hidden",{"_index":2102,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocollabel",{"_index":2021,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocollabel.classlist.add('requir",{"_index":2103,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocollabel.classlist.remove('requir",{"_index":2112,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocolparamet",{"_index":230,"title":{},"name":{},"text":{"2":{},"16":{},"31":{}},"component":{},"keyword":{}}],["signatureprotocolselect",{"_index":2023,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocolselect.addeventlistener('chang",{"_index":2190,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureprotocolselect.valu",{"_index":2095,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["signatureschem",{"_index":380,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["signer",{"_index":1266,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["signific",{"_index":2281,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["significantli",{"_index":2220,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["silent",{"_index":1317,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sim",{"_index":2698,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["similar",{"_index":657,"title":{},"name":{},"text":{"8":{},"15":{},"23":{},"27":{},"30":{}},"component":{},"keyword":{}}],["similarli",{"_index":718,"title":{},"name":{},"text":{"9":{},"16":{},"26":{}},"component":{},"keyword":{}}],["simpl",{"_index":1069,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["simplest",{"_index":483,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{},"keyword":{}}],["simpli",{"_index":1034,"title":{},"name":{},"text":{"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["simplif",{"_index":1326,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["singl",{"_index":488,"title":{"14-9":{}},"name":{},"text":{"6":{},"7":{},"9":{},"15":{},"17":{},"23":{},"25":{},"30":{}},"component":{},"keyword":{}}],["single→sam",{"_index":2228,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["situat",{"_index":550,"title":{},"name":{},"text":{"7":{},"15":{},"30":{}},"component":{},"keyword":{}}],["size",{"_index":631,"title":{},"name":{},"text":{"7":{},"17":{},"19":{},"20":{},"23":{}},"component":{},"keyword":{}}],["sk",{"_index":999,"title":{},"name":{},"text":{"15":{},"19":{},"29":{},"30":{},"38":{},"41":{}},"component":{},"keyword":{}}],["slow",{"_index":1353,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["small",{"_index":636,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["smart",{"_index":64,"title":{"32":{},"35":{},"15-26":{},"15-30":{},"15-36":{},"15-38":{},"28-6":{},"28-7":{},"28-8":{},"28-9":{},"30-25":{},"30-29":{},"30-35":{},"30-37":{},"32-4":{},"35-1":{},"36-3":{},"38-3":{},"38-4":{},"39-2":{},"39-6":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{}},"component":{},"keyword":{}}],["smartid",{"_index":2694,"title":{},"name":{},"text":{"34":{}},"component":{},"keyword":{}}],["smartphon",{"_index":458,"title":{},"name":{},"text":{"5":{},"24":{}},"component":{},"keyword":{}}],["social",{"_index":898,"title":{"15-14":{},"30-13":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["softwar",{"_index":1050,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sole",{"_index":1273,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["solid",{"_index":1954,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["solut",{"_index":958,"title":{},"name":{},"text":{"15":{},"19":{},"29":{},"30":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["someth",{"_index":1090,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sometim",{"_index":1009,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["somewhat",{"_index":1313,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sourc",{"_index":606,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["space",{"_index":1489,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["spam",{"_index":1056,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["spec",{"_index":2583,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["special",{"_index":2697,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["specif",{"_index":54,"title":{"19":{}},"name":{},"text":{"1":{},"3":{},"14":{},"15":{},"19":{},"20":{},"25":{},"28":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["specifi",{"_index":723,"title":{},"name":{},"text":{"10":{},"13":{},"15":{},"16":{},"17":{},"20":{},"23":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["spoof",{"_index":2468,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["sprintf('%04d",{"_index":2405,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["sr",{"_index":1875,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["sr&sessiontype=auth&version=1.0&lang=eng",{"_index":1614,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sr&sessiontype=auth&version=1.0&lang=eng&authcode=lgfd89xmyfmbssitj5kbyjpn9jgt2dierumrsqs3bxk",{"_index":2261,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["sr&sessiontype=auth&version=1.0&lang=eng&authcode=yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":2257,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["sr&sessiontype=cert&version=1.0&lang=eng",{"_index":1898,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sr&sessiontype=cert&version=1.0&lang=eng&authcode=jazdh7kk5jnasmmm33e28sbve8q5qmrzhn0ylsszbro",{"_index":2259,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["sr&sessiontype=sign&version=1.0&lang=eng",{"_index":1896,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sr&sessiontype=sign&version=1.0&lang=eng&authcode=1vumzbjxusqdh0ocfmgdonv_uzewh0uiy9m",{"_index":2258,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["ssl",{"_index":2786,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["ssl::cert",{"_index":1200,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ssl::verify_result",{"_index":1205,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslcacertificatepath",{"_index":1139,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslcadnrequestpath",{"_index":1131,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslcertificatefil",{"_index":1137,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslcertificatekeyfil",{"_index":1138,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslengin",{"_index":1136,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslocspdefaultrespond",{"_index":1148,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslocspen",{"_index":1146,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["sslocspoverriderespond",{"_index":1150,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["ssloption",{"_index":1182,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["standalon",{"_index":1522,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["standard",{"_index":52,"title":{},"name":{},"text":{"1":{},"10":{},"12":{},"17":{},"20":{},"29":{}},"component":{},"keyword":{}}],["start",{"_index":524,"title":{"35-2":{}},"name":{},"text":{"7":{},"9":{},"15":{},"19":{},"20":{},"23":{},"24":{},"26":{},"29":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["state",{"_index":806,"title":{},"name":{},"text":{"13":{},"15":{},"19":{},"29":{},"30":{}},"component":{},"keyword":{}}],["static",{"_index":1070,"title":{},"name":{},"text":{"15":{},"20":{},"23":{},"25":{},"27":{},"30":{},"31":{}},"component":{},"keyword":{}}],["statu",{"_index":1,"title":{"13":{},"1-1":{},"13-5":{},"18-1":{}},"name":{},"text":{"1":{},"4":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["stay",{"_index":353,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["step",{"_index":519,"title":{"29-1":{}},"name":{},"text":{"7":{},"12":{},"15":{},"20":{},"21":{},"23":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["still",{"_index":703,"title":{},"name":{},"text":{"9":{},"13":{},"15":{},"20":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["stop",{"_index":2485,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["storag",{"_index":710,"title":{},"name":{},"text":{"9":{},"15":{},"21":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["store",{"_index":862,"title":{},"name":{},"text":{"14":{},"15":{},"25":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["str",{"_index":1634,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["str(elapsed_second",{"_index":1904,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["strconv",{"_index":1885,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["strconv.itoa(elapsedsecond",{"_index":1905,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["strengthen",{"_index":672,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["string",{"_index":218,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"13":{},"15":{},"16":{},"17":{},"20":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["string(elapsedsecond",{"_index":1901,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["string(minify(interactionsjson",{"_index":2294,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["string.format(\"%04d",{"_index":2400,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["string.fromcharcode(byt",{"_index":2090,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["string.fromcharcode(bytes[i",{"_index":2082,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["string.join(separ",{"_index":1616,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["strings.join([]str",{"_index":2623,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["strings.join(payloadpart",{"_index":1631,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["strong",{"_index":1101,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["strongli",{"_index":784,"title":{},"name":{},"text":{"12":{},"28":{}},"component":{},"keyword":{}}],["struct",{"_index":2310,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["structur",{"_index":136,"title":{"2-4":{},"2-8":{},"13-2":{},"16-4":{},"16-8":{}},"name":{},"text":{"1":{},"2":{},"3":{},"9":{},"10":{},"13":{},"16":{},"17":{},"18":{},"23":{},"26":{}},"component":{},"keyword":{}}],["strval($elapsedsecond",{"_index":2266,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["style",{"_index":1931,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["subject",{"_index":468,"title":{},"name":{},"text":{"5":{},"12":{},"15":{},"24":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["subjectaltnam",{"_index":779,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["submit",{"_index":783,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["subpag",{"_index":853,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["subsect",{"_index":810,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["subsequ",{"_index":2282,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{},"keyword":{}}],["substitut",{"_index":1578,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["success",{"_index":278,"title":{"3-5":{}},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"10":{},"12":{},"13":{},"15":{},"20":{},"26":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["successfulli",{"_index":306,"title":{},"name":{},"text":{"2":{},"11":{},"13":{},"14":{},"16":{},"20":{},"28":{}},"component":{},"keyword":{}}],["such",{"_index":621,"title":{},"name":{},"text":{"7":{},"10":{},"14":{},"15":{},"23":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["suffici",{"_index":628,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["suggest",{"_index":2714,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["suitabl",{"_index":56,"title":{},"name":{},"text":{"1":{},"15":{},"29":{},"30":{},"38":{}},"component":{},"keyword":{}}],["summari",{"_index":1512,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["superior",{"_index":2472,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["support",{"_index":31,"title":{"17-3":{},"33-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"25":{},"27":{},"30":{},"31":{},"32":{},"35":{},"37":{},"39":{}},"component":{},"keyword":{}}],["support@sk.e",{"_index":995,"title":{},"name":{},"text":{"15":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["support@smart",{"_index":2684,"title":{},"name":{},"text":{"33":{}},"component":{},"keyword":{}}],["sure",{"_index":148,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["surpris",{"_index":1334,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["suspici",{"_index":939,"title":{"15-37":{},"15-38":{},"15-39":{},"30-36":{},"30-37":{},"30-38":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["suspicion",{"_index":1350,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["swiftli",{"_index":948,"title":{"15-42":{},"30-41":{}},"name":{},"text":{},"component":{},"keyword":{}}],["switch",{"_index":873,"title":{},"name":{},"text":{"14":{},"20":{},"28":{}},"component":{},"keyword":{}}],["symbol",{"_index":317,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{},"keyword":{}}],["system",{"_index":75,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"10":{},"14":{},"15":{},"16":{},"20":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"38":{}},"component":{},"keyword":{}}],["system.out.println(authcod",{"_index":1674,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["system.out.println(authcodepayload",{"_index":1617,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["system.out.println(base64.getencoder().encodetostring(digest",{"_index":2603,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["system.out.println(brokeredrpnamebase64",{"_index":1835,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["system.out.println(devicelink",{"_index":2249,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["system.out.println(elapsedsecondsstr",{"_index":2265,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["system.out.println(interactionsbase64",{"_index":2300,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["system.out.println(relyingpartynamebase64",{"_index":1813,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["system.out.println(rpchalleng",{"_index":2555,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["system.out.println(unprotecteddevicelink",{"_index":1878,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["system.out.println(verificationcod",{"_index":2401,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["system.security.cryptographi",{"_index":1727,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["system.text",{"_index":1726,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["tab",{"_index":2202,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["tabl",{"_index":237,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"13":{},"15":{},"16":{},"17":{},"19":{},"23":{},"25":{},"30":{}},"component":{},"keyword":{}}],["tablet",{"_index":456,"title":{},"name":{},"text":{"5":{},"7":{},"14":{},"23":{},"24":{},"28":{},"35":{}},"component":{},"keyword":{}}],["tactic",{"_index":1355,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["take",{"_index":1060,"title":{},"name":{},"text":{"15":{},"20":{},"21":{},"25":{},"27":{},"30":{}},"component":{},"keyword":{}}],["taken",{"_index":505,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["target",{"_index":812,"title":{},"name":{},"text":{"13":{},"15":{},"30":{}},"component":{},"keyword":{}}],["targetlink",{"_index":1564,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["targetlink.getattribute('href",{"_index":1566,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["team",{"_index":1349,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["technic",{"_index":323,"title":{"18":{},"36":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"16":{},"19":{},"23":{},"24":{},"33":{}},"component":{},"keyword":{}}],["technolog",{"_index":953,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["tell",{"_index":1094,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["temporari",{"_index":1171,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["temporarili",{"_index":1042,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["term",{"_index":415,"title":{"5":{},"15-2":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["terminolog",{"_index":2227,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["test",{"_index":1445,"title":{"41":{}},"name":{},"text":{"19":{},"35":{},"36":{},"39":{},"41":{}},"component":{},"keyword":{}}],["test_account",{"_index":2794,"title":{},"name":{"41":{}},"text":{},"component":{},"keyword":{}}],["testflight",{"_index":2705,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["text",{"_index":487,"title":{"25-2":{}},"name":{},"text":{"6":{},"15":{},"20":{},"25":{},"26":{},"30":{}},"component":{},"keyword":{}}],["textarea",{"_index":1969,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["textarea.invalid",{"_index":1980,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["textencoder().encode(authcodepayload",{"_index":2173,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["textencoder().encode(str",{"_index":2088,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["themselv",{"_index":445,"title":{},"name":{},"text":{"5":{},"15":{},"17":{},"24":{},"26":{},"30":{}},"component":{},"keyword":{}}],["therefor",{"_index":133,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"25":{},"30":{}},"component":{},"keyword":{}}],["there’",{"_index":976,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["think",{"_index":1002,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["those",{"_index":44,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"15":{},"16":{},"18":{},"20":{},"30":{},"35":{}},"component":{},"keyword":{}}],["though",{"_index":500,"title":{},"name":{},"text":{"6":{},"9":{},"14":{},"15":{},"20":{},"26":{},"30":{}},"component":{},"keyword":{}}],["thought",{"_index":1020,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["threat",{"_index":877,"title":{"15-4":{},"15-18":{},"30-3":{},"30-17":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["three",{"_index":693,"title":{},"name":{},"text":{"9":{},"10":{},"14":{},"15":{},"22":{},"23":{},"26":{},"30":{}},"component":{},"keyword":{}}],["through",{"_index":1049,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["throughout",{"_index":2366,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["throw",{"_index":1601,"title":{},"name":{},"text":{"20":{},"27":{},"31":{}},"component":{},"keyword":{}}],["thu",{"_index":533,"title":{},"name":{},"text":{"7":{},"8":{},"15":{},"21":{},"23":{},"30":{}},"component":{},"keyword":{}}],["ti",{"_index":1793,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["tie",{"_index":2464,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["time",{"_index":320,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"9":{},"13":{},"15":{},"16":{},"23":{},"26":{},"29":{},"30":{},"33":{},"35":{}},"component":{},"keyword":{}}],["timefram",{"_index":90,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["timelin",{"_index":2658,"title":{"32-1":{},"39-3":{}},"name":{},"text":{},"component":{},"keyword":{}}],["timeout",{"_index":794,"title":{},"name":{},"text":{"13":{},"41":{}},"component":{},"keyword":{}}],["timeoutm",{"_index":792,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["timestamp",{"_index":1301,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["titl",{"_index":1484,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["tl",{"_index":155,"title":{},"name":{},"text":{"1":{},"15":{},"18":{},"30":{},"38":{}},"component":{},"keyword":{}}],["tobytearray(standardcharsets.utf_8",{"_index":1721,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["togeth",{"_index":2213,"title":{},"name":{},"text":{"21":{},"24":{},"25":{},"27":{}},"component":{},"keyword":{}}],["togglebrokeredrpinputvis",{"_index":2122,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["togglebrokeredrprequiredstatu",{"_index":2117,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["token",{"_index":2544,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{},"keyword":{}}],["toler",{"_index":1296,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["tool",{"_index":1038,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["toolkit",{"_index":1297,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["top",{"_index":1215,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"21":{},"30":{}},"component":{},"keyword":{}}],["tor",{"_index":1339,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["tostr",{"_index":2450,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["tostring('base64",{"_index":1831,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["total",{"_index":671,"title":{},"name":{},"text":{"8":{}},"component":{},"keyword":{}}],["track",{"_index":713,"title":{"15-32":{},"15-37":{},"30-31":{},"30-36":{}},"name":{},"text":{"9":{},"15":{},"30":{}},"component":{},"keyword":{}}],["trackingid",{"_index":1306,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["trademark",{"_index":1221,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["trail",{"_index":1581,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["trailer",{"_index":2541,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["transact",{"_index":276,"title":{"15-30":{},"30-29":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"15":{},"16":{},"21":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"33":{}},"component":{},"keyword":{}}],["transfer",{"_index":1082,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["transit",{"_index":1989,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["transmit",{"_index":700,"title":{},"name":{},"text":{"9":{}},"component":{},"keyword":{}}],["transpar",{"_index":1265,"title":{},"name":{},"text":{"15":{},"19":{},"30":{}},"component":{},"keyword":{}}],["transport",{"_index":2374,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["treat",{"_index":717,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["tri",{"_index":997,"title":{"35-3":{},"39-1":{}},"name":{},"text":{"15":{},"19":{},"20":{},"30":{},"31":{},"35":{},"39":{}},"component":{},"keyword":{}}],["trigger",{"_index":864,"title":{},"name":{},"text":{"14":{},"28":{}},"component":{},"keyword":{}}],["trimend",{"_index":1732,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["true",{"_index":277,"title":{},"name":{},"text":{"2":{},"3":{},"11":{},"19":{},"20":{},"27":{},"29":{},"31":{}},"component":{},"keyword":{}}],["trust",{"_index":169,"title":{"15-20":{},"15-23":{},"15-24":{},"15-32":{},"30-19":{},"30-22":{},"30-23":{},"30-31":{}},"name":{},"text":{"1":{},"12":{},"15":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["trustlevel",{"_index":1308,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["trustout",{"_index":1118,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["trustworthi",{"_index":773,"title":{},"name":{},"text":{"12":{},"29":{}},"component":{},"keyword":{}}],["tune",{"_index":803,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["turn",{"_index":839,"title":{},"name":{},"text":{"13":{},"25":{}},"component":{},"keyword":{}}],["tusoave5641iskt6nyzhseeervzi4ly2dli",{"_index":1780,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["tw1hownacw0wd",{"_index":1874,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["two",{"_index":381,"title":{},"name":{},"text":{"4":{},"5":{},"13":{},"14":{},"15":{},"16":{},"20":{},"22":{},"24":{},"28":{},"30":{}},"component":{},"keyword":{}}],["type",{"_index":58,"title":{"14":{}},"name":{},"text":{"1":{},"2":{},"3":{},"6":{},"7":{},"8":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["type\":\"confirmationmessage\",\"displaytext200\":\"long",{"_index":2296,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["type_field",{"_index":2333,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["typic",{"_index":2499,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["u+002d",{"_index":746,"title":{},"name":{},"text":{"10":{}},"component":{},"keyword":{}}],["u+007c",{"_index":1583,"title":{},"name":{},"text":{"20":{},"29":{},"31":{}},"component":{},"keyword":{}}],["u16",{"_index":2429,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["u8",{"_index":1708,"title":{},"name":{},"text":{"20":{},"31":{}},"component":{},"keyword":{}}],["ui",{"_index":583,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["uint8array(buff",{"_index":2080,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["uint8array(len",{"_index":2070,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ul",{"_index":1513,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["unabl",{"_index":553,"title":{},"name":{},"text":{"7":{},"23":{}},"component":{},"keyword":{}}],["unauthent",{"_index":2543,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["unauthor",{"_index":764,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{},"keyword":{}}],["unavail",{"_index":2507,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["under",{"_index":76,"title":{},"name":{},"text":{"1":{},"3":{},"15":{},"22":{},"29":{},"30":{},"41":{}},"component":{},"keyword":{}}],["underli",{"_index":644,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["understand",{"_index":961,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["unfortun",{"_index":1178,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["unifi",{"_index":692,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["uniform",{"_index":1260,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["uniqu",{"_index":281,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"14":{},"16":{},"18":{},"20":{},"21":{},"22":{},"23":{},"29":{}},"component":{},"keyword":{}}],["unit",{"_index":1380,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["univers",{"_index":652,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{}},"component":{},"keyword":{}}],["unknown",{"_index":10,"title":{"1-4":{},"15-32":{},"15-35":{},"15-36":{},"18-4":{},"30-31":{},"30-34":{},"30-35":{}},"name":{},"text":{"1":{},"4":{},"15":{},"18":{},"22":{},"30":{}},"component":{},"keyword":{}}],["unless",{"_index":2471,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["unpredict",{"_index":1856,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{},"keyword":{}}],["unprotect",{"_index":2009,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["unprotected_device_link",{"_index":1624,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["unprotecteddevicelink",{"_index":1573,"title":{"20-11":{}},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["unprotecteddevicelinkinput",{"_index":2051,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["unprotecteddevicelinkinput.valu",{"_index":2159,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["unseen",{"_index":1284,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["unset",{"_index":1534,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["unsign",{"_index":2372,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["unsupport",{"_index":761,"title":{},"name":{},"text":{"11":{},"13":{}},"component":{},"keyword":{}}],["until",{"_index":802,"title":{},"name":{},"text":{"13":{},"15":{},"30":{}},"component":{},"keyword":{}}],["unus",{"_index":2585,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["up",{"_index":239,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"14":{},"15":{},"16":{},"21":{},"23":{},"28":{},"30":{},"35":{},"37":{}},"component":{},"keyword":{}}],["updat",{"_index":525,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"30":{},"32":{},"39":{}},"component":{},"keyword":{}}],["updateformforsessiontyp",{"_index":2100,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["updateinitialcallbackvis",{"_index":2093,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["upload",{"_index":2727,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["upon",{"_index":2491,"title":{},"name":{},"text":{"29":{}},"component":{},"keyword":{}}],["upper",{"_index":757,"title":{},"name":{},"text":{"10":{},"13":{}},"component":{},"keyword":{}}],["urgent",{"_index":1374,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["uri",{"_index":618,"title":{},"name":{},"text":{"7":{}},"component":{},"keyword":{}}],["url",{"_index":185,"title":{"21":{},"21-1":{},"21-3":{},"21-4":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"36":{},"37":{}},"component":{},"keyword":{}}],["url(referr",{"_index":1554,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["url?value=rrkjjt4aggzu27ybddx1bq",{"_index":1609,"title":{},"name":{},"text":{"20":{},"21":{},"31":{}},"component":{},"keyword":{}}],["url?value=rrkjjt4aggzu27ybddx1bq&sessionsecretdigest=tirimorsppxbbnsjhtsppy4gym3zxdhkxj2lfvul2qi",{"_index":2215,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["url?value=rrkjjt4aggzu27ybddx1bq&sessionsecretdigest=tirimorsppxbbnsjhtsppy4gym3zxdhkxj2lfvul2qi&userchallengeverifier=xtpfaga8jngtyrjjbooouf0kfy9smehrwfpsqrsuv9c",{"_index":2214,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["us",{"_index":27,"title":{"14-1":{},"14-9":{},"15-21":{},"15-22":{},"15-25":{},"28-1":{},"28-2":{},"30-20":{},"30-21":{},"30-24":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["usabl",{"_index":714,"title":{},"name":{},"text":{"9":{},"26":{},"28":{}},"component":{},"keyword":{}}],["usag",{"_index":721,"title":{"15-24":{},"15-41":{},"30-23":{},"30-40":{}},"name":{},"text":{"10":{},"15":{},"16":{},"29":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["usebrokeredrpcheckbox",{"_index":2033,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["usebrokeredrpcheckbox.addeventlistener('chang",{"_index":2189,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["usebrokeredrpcheckbox.check",{"_index":2118,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["user",{"_index":60,"title":{"15-5":{},"15-8":{},"15-11":{},"15-26":{},"15-27":{},"15-31":{},"15-36":{},"15-38":{},"15-39":{},"30-4":{},"30-7":{},"30-10":{},"30-25":{},"30-26":{},"30-30":{},"30-35":{},"30-37":{},"30-38":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"35":{},"36":{},"37":{},"39":{},"41":{}},"component":{},"keyword":{}}],["user'",{"_index":1922,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["user_challeng",{"_index":2610,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["user_refus",{"_index":834,"title":{},"name":{},"text":{"13":{},"41":{}},"component":{},"keyword":{}}],["user_refused_cert_choic",{"_index":410,"title":{},"name":{},"text":{"4":{},"13":{},"22":{}},"component":{},"keyword":{}}],["user_refused_confirmationmessag",{"_index":408,"title":{},"name":{},"text":{"4":{},"13":{},"22":{}},"component":{},"keyword":{}}],["user_refused_confirmationmessage_with_vc_choic",{"_index":409,"title":{},"name":{},"text":{"4":{},"13":{},"22":{}},"component":{},"keyword":{}}],["user_refused_displaytextandpin",{"_index":406,"title":{},"name":{},"text":{"4":{},"13":{},"22":{}},"component":{},"keyword":{}}],["user_refused_interact",{"_index":2232,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["user_refused_vc_choic",{"_index":407,"title":{},"name":{},"text":{"4":{},"13":{},"22":{}},"component":{},"keyword":{}}],["userchalleng",{"_index":2206,"title":{},"name":{},"text":{"21":{},"22":{},"31":{}},"component":{},"keyword":{}}],["userchallengeverifi",{"_index":2203,"title":{},"name":{},"text":{"21":{},"29":{}},"component":{},"keyword":{}}],["userinputauthcod",{"_index":2160,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["usernam",{"_index":858,"title":{},"name":{},"text":{"14":{},"15":{},"28":{},"30":{}},"component":{},"keyword":{}}],["user’",{"_index":203,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"17":{},"21":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["usual",{"_index":538,"title":{},"name":{},"text":{"7":{},"15":{},"24":{},"30":{}},"component":{},"keyword":{}}],["utf",{"_index":28,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"10":{},"16":{},"18":{},"20":{},"29":{},"31":{}},"component":{},"keyword":{}}],["utf8",{"_index":1585,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["utf8encod",{"_index":1858,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["utf8tobase64(brokeredrpnam",{"_index":2163,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["utf8tobase64(relyingpartynam",{"_index":2162,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["utf8tobase64(str",{"_index":2087,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["util",{"_index":707,"title":{},"name":{},"text":{"9":{},"14":{},"15":{},"16":{},"20":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["uuid",{"_index":220,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"16":{},"23":{},"35":{}},"component":{},"keyword":{}}],["v1",{"_index":233,"title":{},"name":{},"text":{"2":{},"4":{},"16":{},"22":{},"36":{},"41":{}},"component":{},"keyword":{}}],["v1/v2",{"_index":2667,"title":{},"name":{},"text":{"32":{},"39":{},"41":{}},"component":{},"keyword":{}}],["v1_2_20200630.pdf",{"_index":1161,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["v1_5",{"_index":2223,"title":{},"name":{},"text":{"22":{}},"component":{},"keyword":{}}],["v2",{"_index":394,"title":{},"name":{},"text":{"4":{},"8":{},"16":{},"22":{},"27":{},"36":{}},"component":{},"keyword":{}}],["v2/certificatechoic",{"_index":411,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{},"keyword":{}}],["v29",{"_index":2665,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["v3",{"_index":664,"title":{"26-1":{}},"name":{},"text":{"8":{},"27":{},"31":{},"34":{},"36":{}},"component":{},"keyword":{}}],["v3.1",{"_index":2661,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{},"keyword":{}}],["v3/authent",{"_index":2461,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["v3/session/{sessionid",{"_index":2204,"title":{},"name":{},"text":{"21":{},"28":{}},"component":{},"keyword":{}}],["v3/signatur",{"_index":2218,"title":{},"name":{},"text":{"22":{},"28":{}},"component":{},"keyword":{}}],["v3/signature/certif",{"_index":2462,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["v3/signature/certificate/{docu",{"_index":2463,"title":{},"name":{},"text":{"28":{}},"component":{},"keyword":{}}],["val",{"_index":1640,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["valid",{"_index":166,"title":{"15-22":{},"20-12":{},"30-21":{}},"name":{},"text":{"1":{},"7":{},"9":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"23":{},"25":{},"26":{},"29":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["validateform",{"_index":2136,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["valu",{"_index":231,"title":{"31-8":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{},"36":{}},"component":{},"keyword":{}}],["var",{"_index":1461,"title":{},"name":{},"text":{"19":{},"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["variabl",{"_index":1469,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["vc",{"_index":309,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"15":{},"16":{},"22":{},"24":{},"25":{},"27":{},"28":{},"30":{}},"component":{},"keyword":{}}],["vc.type",{"_index":310,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["vc.valu",{"_index":327,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{},"keyword":{}}],["vec![interaction{type_field",{"_index":2336,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["vec<interaction<'a",{"_index":2323,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["vec<u8",{"_index":2634,"title":{},"name":{},"text":{"31":{}},"component":{},"keyword":{}}],["vector",{"_index":1065,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["veri",{"_index":2195,"title":{},"name":{},"text":{"21":{}},"component":{},"keyword":{}}],["verif",{"_index":497,"title":{"12":{},"29":{},"8-3":{},"15-26":{},"27-3":{},"27-4":{},"29-1":{},"30-25":{},"34-3":{}},"name":{},"text":{"6":{},"8":{},"13":{},"15":{},"17":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["verifi",{"_index":154,"title":{"15-39":{},"30-38":{}},"name":{},"text":{"1":{},"5":{},"7":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{},"keyword":{}}],["verification_cod",{"_index":2414,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["verificationcod",{"_index":2399,"title":{},"name":{},"text":{"27":{}},"component":{},"keyword":{}}],["verificationcodechoic",{"_index":496,"title":{},"name":{},"text":{"6":{},"13":{},"15":{}},"component":{},"keyword":{}}],["version",{"_index":132,"title":{"4-1":{},"4-2":{},"4-3":{},"22-1":{},"22-2":{},"22-3":{},"23-5":{},"32-4":{},"39-6":{}},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"9":{},"13":{},"15":{},"17":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"30":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["version=$vers",{"_index":1890,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["vertic",{"_index":1582,"title":{},"name":{},"text":{"20":{},"29":{},"31":{}},"component":{},"keyword":{}}],["via",{"_index":541,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"15":{},"17":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["view",{"_index":63,"title":{},"name":{},"text":{"1":{},"37":{}},"component":{},"keyword":{}}],["visibl",{"_index":1264,"title":{"23-12":{}},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["visit",{"_index":690,"title":{},"name":{},"text":{"9":{},"26":{},"29":{}},"component":{},"keyword":{}}],["visual",{"_index":2354,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["void",{"_index":1598,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"31":{}},"component":{},"keyword":{}}],["vpn",{"_index":1343,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["vs",{"_index":2242,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["vulner",{"_index":1154,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["w3sidhlwzsi6imnvbmzpcm1hdglvbk1lc3nhz2uilcjkaxnwbgf5vgv4ddiwmci6ikxvbmdlcibkzxnjcmlwdglvbibvzib0agugdhjhbnnhy3rpb24gy29udgv4dcj9lhsidhlwzsi6imrpc3bsyxluzxh0qw5kueloiiwizglzcgxhevrlehq2mci6ilnob3j0igrlc2nyaxb0aw9uig9mihrozsb0cmfuc2fjdglvbibjb250zxh0in1d",{"_index":1607,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["w3sidhlwzsi6imnvbmzpcm1hdglvbk1lc3nhz2uilcjkaxnwbgf5vgv4ddiwmci6ikxvbmdlcibkzxnjcmlwdglvbibvzib0agugdhjhbnnhy3rpb24gy29udgv4dcj9xq",{"_index":2353,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["w3sidhlwzsi6imnvbmzpcm1hdglvbk1lc3nhz2vbbmrwzxjpzmljyxrpb25db2rlq2hvawnliiwizglzcgxhevrlehqymdaioijmb25nzxigzgvzy3jpchrpb24gb2ygdghlihryyw5zywn0aw9uignvbnrlehqifv0",{"_index":2358,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["w3sidhlwzsi6imrpc3bsyxluzxh0qw5kueloiiwizglzcgxhevrlehq2mci6ilnob3j0igrlc2nyaxb0aw9uig9mihrozsb0cmfuc2fjdglvbibjb250zxh0in1d",{"_index":2357,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["wait",{"_index":355,"title":{},"name":{},"text":{"3":{},"9":{},"13":{},"14":{},"15":{},"26":{},"30":{}},"component":{},"keyword":{}}],["wake",{"_index":1016,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["want",{"_index":2241,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["watch",{"_index":2355,"title":{},"name":{},"text":{"25":{},"35":{}},"component":{},"keyword":{}}],["watcho",{"_index":2720,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["way",{"_index":539,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"15":{},"17":{},"25":{},"28":{},"30":{},"31":{},"35":{}},"component":{},"keyword":{}}],["web",{"_index":913,"title":{"15-21":{},"30-20":{}},"name":{},"text":{"15":{},"20":{},"30":{}},"component":{},"keyword":{}}],["web2app",{"_index":387,"title":{"21-1":{}},"name":{},"text":{"4":{},"7":{},"10":{},"14":{},"20":{},"21":{},"22":{},"23":{},"28":{},"29":{},"31":{}},"component":{},"keyword":{}}],["web2app/app2app",{"_index":2239,"title":{},"name":{},"text":{"23":{}},"component":{},"keyword":{}}],["webpag",{"_index":521,"title":{},"name":{},"text":{"7":{},"9":{},"21":{},"23":{},"26":{}},"component":{},"keyword":{}}],["websit",{"_index":551,"title":{"15-13":{},"15-29":{},"15-41":{},"30-12":{},"30-28":{},"30-40":{}},"name":{},"text":{"7":{},"14":{},"15":{},"21":{},"23":{},"24":{},"28":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["weight",{"_index":1486,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["weird",{"_index":1363,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["welcom",{"_index":2696,"title":{"35":{},"39":{}},"name":{},"text":{},"component":{},"keyword":{}}],["well",{"_index":161,"title":{"15-25":{},"30-24":{}},"name":{},"text":{"1":{},"10":{},"15":{},"17":{},"18":{},"28":{},"30":{},"35":{}},"component":{},"keyword":{}}],["wget",{"_index":1110,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["whenev",{"_index":81,"title":{},"name":{},"text":{"1":{},"18":{}},"component":{},"keyword":{}}],["whether",{"_index":250,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"10":{},"13":{},"14":{},"15":{},"16":{},"23":{},"28":{},"30":{}},"component":{},"keyword":{}}],["white",{"_index":1919,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["whitelist",{"_index":624,"title":{},"name":{},"text":{"7":{},"36":{}},"component":{},"keyword":{}}],["whitespac",{"_index":1795,"title":{},"name":{},"text":{"20":{},"25":{},"31":{}},"component":{},"keyword":{}}],["whole",{"_index":1192,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["widespread",{"_index":1046,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["width",{"_index":1497,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["window",{"_index":1238,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["window.crypto.subtle.importkey('raw",{"_index":2176,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["window.crypto.subtle.sign('hmac",{"_index":2178,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["window.location.hostnam",{"_index":1544,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["window.location.href",{"_index":1560,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["window.location.replace(url",{"_index":1568,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["wish",{"_index":676,"title":{},"name":{},"text":{"9":{},"26":{}},"component":{},"keyword":{}}],["withdefaultfont",{"_index":1452,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["withhold",{"_index":1325,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["within",{"_index":135,"title":{},"name":{},"text":{"1":{},"13":{},"15":{},"18":{},"20":{},"21":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["without",{"_index":349,"title":{"14-4":{},"14-6":{},"14-7":{},"14-12":{},"14-14":{},"14-15":{},"28-8":{},"28-9":{}},"name":{},"text":{"3":{},"6":{},"9":{},"15":{},"20":{},"21":{},"23":{},"25":{},"26":{},"30":{},"31":{},"38":{}},"component":{},"keyword":{}}],["withoutpad",{"_index":1672,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["won’t",{"_index":770,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["word",{"_index":449,"title":{},"name":{},"text":{"5":{},"20":{},"24":{}},"component":{},"keyword":{}}],["work",{"_index":620,"title":{"32-4":{},"39-6":{}},"name":{},"text":{"7":{},"15":{},"21":{},"30":{},"32":{},"35":{},"39":{},"41":{}},"component":{},"keyword":{}}],["worthwhil",{"_index":1051,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["wrap",{"_index":1999,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["write",{"_index":2279,"title":{"25-2":{}},"name":{},"text":{"25":{},"36":{}},"component":{},"keyword":{}}],["written",{"_index":971,"title":{},"name":{},"text":{"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["wrong",{"_index":651,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"25":{},"30":{},"36":{}},"component":{},"keyword":{}}],["wrong_vc",{"_index":843,"title":{},"name":{},"text":{"13":{},"41":{}},"component":{},"keyword":{}}],["wrongli",{"_index":2368,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["wstg",{"_index":1251,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["www.exampl",{"_index":1331,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["x.509",{"_index":158,"title":{},"name":{},"text":{"1":{},"12":{},"18":{},"29":{}},"component":{},"keyword":{}}],["x509",{"_index":1115,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["x509::cert_field",{"_index":1204,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["x509::extens",{"_index":1210,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["x509['extensions']['certificatepolici",{"_index":1188,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["x509v3",{"_index":1155,"title":{},"name":{},"text":{"15":{},"30":{}},"component":{},"keyword":{}}],["xades/cad",{"_index":2360,"title":{},"name":{},"text":{"26":{}},"component":{},"keyword":{}}],["ye",{"_index":490,"title":{},"name":{},"text":{"6":{},"15":{},"25":{},"30":{}},"component":{},"keyword":{}}],["yjv6ve47npij5ssk8ycfeklrroasyog_f2gqmr8nix",{"_index":1660,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{},"keyword":{}}],["you’ll",{"_index":2710,"title":{},"name":{},"text":{"35":{}},"component":{},"keyword":{}}],["zhnmymhkzmdozgcgzmrmmtm0ntm",{"_index":1394,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["zhnmymhkzmdozgcgzmrmmtq0ntm",{"_index":269,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Relying Party API is exposed over a REST interface. All messages are encoded using UTF-8. All requests only support HTTP/1.1, as described in RFC 2616. Normally, all positive responses are returned with HTTP status code 200. In some cases, 400 series error codes are used, those cases are described per request. All 500 series error codes indicate some kind of fatal server error. In addition to standard HTTP error codes the following RP API specific codes are used: 471 - No suitable account of requested type found, but user has some other accounts. 472 - Person should view Smart-ID app or Smart-ID self-service portal now. 480 - The RP API client is too old and not supported any more. 580 - System is under maintenance, retry again later. Whenever an RP session creation request (POST to certificatechoice/, signature/, authentication/) is repeated inside a given timeframe with exactly the same parameters, session ID of an existing session can be returned as a result. This allows to retry RP POST requests in case of communication errors. Retry timeframe is 15 seconds. When the caller wants, it can override the idempotent behaviour inside this timeframe using an optional nonce parameter present for all POST requests. Normally, that parameter can be omitted. RP API clients are authenticated based on their originating IP-address and relyingPartyUUID protocol parameter combinations. When authentication fails, server responds with HTTP error 401. relyingPartyName request field is case insensitive, must match one of the names configured for the calling RP. The names are limited to 32 bytes in UTF-8 encoding and are displayed to the user in the Smart-ID application. The Smart-ID service reserves the right to add new fields into responses of the current RP API version. Therefore, the RP must ignore unknown names (fields) in JSON response objects at any location within the JSON structure. This section will be merged with Secure Implementation Guide. It is essential that RP client performs all the required checks when connecting to the Smart-ID RP API HTTPS endpoint, to make sure that the connection endpoint is authentic and that the connection is secure. This is required to prevent Man-in-the-middle (MITM) attacks for the authentication and signature protocols. The RP must perform the following checks: Verify the HTTPS connection and the TLS handshake is performed with a secure TLS ciphersuite. Verify the X.509 certificate of the HTTPS endpoint belongs to the well-known public key of the Smart-ID API. The RP must implement HTTPS key (or certificate) pinning. Verify the X.509 certificate of the HTTPS endpoint is valid (not expired, signed by trusted CA and not revoked). In case the RP fails to verify the connection is genuine and secure an attacker might be able to launch a AITM attack on the connection and either login as the user or have the user sign a forged document.","title":"REST API details","component":"rp-api","version":"3.0.3","name":"api_details","url":"/rp-api/3.0.3/api_details.html","titles":[{"text":"HTTP status codes","hash":"_http_status_codes","id":1},{"text":"Idempotent behaviour","hash":"_idempotent_behaviour","id":2},{"text":"Interface authentication","hash":"_interface_authentication","id":3},{"text":"API client must ignore unknown names (fields) in JSON response object","hash":"_api_client_must_ignore_unknown_names_fields_in_json_response_object","id":4},{"text":"RP API endpoint authentication","hash":"_rp_api_endpoint_authentication","id":5}]},"2":{"id":2,"text":"The signature protocol ACSP_V1 must be used for authentication. Dynamic link based authentication endpoints Method URL POST BASE/v3/authentication/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural POST BASE/v3/authentication/dynamic-link/document/:documentnumber POST BASE/v3/authentication/dynamic-link/anonymous This method is the main entry point to authentication logic for the dynamic link based flows. In contrast to the notification based flows, an \"anonymous\" endpoint is provided. When that endpoint is used, RP learns the user’s identity only after the signing has been completed and the session result is returned to the RP. HTTP error code 403 - Relying Party has no permission to issue the request. This may happen when: Relying Party has no permission to invoke operations on accounts with ADVANCED certificates. Relying Party has no permission to use requested capability. HTTP error code 404 - object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system. Dynamic link based authentication request parameters Parameter Type Mandatory Description relyingPartyUUID string + UUID of Relying Party. relyingPartyName string + RP friendly name, one of those configured for particular RP. Limited to 32 bytes in UTF-8 encoding. certificateLevel string Level of certificate requested. ADVANCED/QUALIFIED, QUALIFIED. signatureProtocol string + Signature protocol. Describes the algorithm how signature is produced and the signatureProtocolParameters object. Currently, the only allowed value is: ACSP_V1 - Data structure V1 with authentication context to be signed. See section ACSP_V1. signatureProtocolParameters object + Signature protocol. An object describing the parameters of the signature algorithm. Its structure depends on the signatureProtocol used. See ACSP_V1 parameters table. nonce string Random string, up to 30 characters. If present, must have at least 1 character. allowedInteractionsOrder array of objects + See section available interactions. requestProperties object A request properties object. Currently, only one property is supported: shareMdClientIpAddress - Whether the RP API server should share user mobile device IP address with the RP. By default it is set to false. The RP must have proper privilege to use this property. See section IP sharing for details. capabilities array Used only when agreed with Smart-ID provider. When omitted request capabilities are derived from certificateLevel parameter. Dynamic link based authentication request example { \"relyingPartyUUID\": \"1f1bfa89-4f8b-420a-a98e-fb3a161a30bc\", \"relyingPartyName\": \"DEMO\", \"certificateLevel\": \"QUALIFIED\", \"signatureProtocol\": \"ACSP_V1\", \"signatureProtocolParameters\": { \"randomChallenge\": \"ZHNmYmhkZmdoZGcgZmRmMTQ0NTM...\", \"signatureAlgorithm\": \"sha256WithRSAEncryption\" }, \"nonce\": \"d8XkbEnA0WsE0PvBZZoxGnPI4ml9qk\", \"allowedInteractionsOrder\": [ { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ], \"requestProperties\": { \"shareMdClientIpAddress\": true } } Successful dynamic link based authentication session creation response parameters Parameter Type Mandatory Description sessionID string + A string that can be used to request the operation result. sessionToken string + Unique random value that will be used to connect this login attempt between the relevant parties (RP, RP-API, mobile app). sessionSecret string + Base64-encoded random key value that should be kept in secret and should be shared only between the RP backend and RP-API server. Dynamic link based authentication session creation response { \"sessionID\": \"de305d54-75b4-431b-adb2-eb6b9e546014\", \"sessionToken\": \"hyBdQYUeQtvXEPqWC7K8a97L\", \"sessionSecret\": \"dztL7Ur49D/YYgUzYl4sMg==\" } Notification based authentication endpoints Method URL POST BASE/v3/authentication/notification/etsi/:id-etsi-qcs-SemanticsId-Natural POST BASE/v3/authentication/notification/document/:documentnumber This method is the main entry point to authentication logic for the notification based flows. It selects user’s authentication key as the one to be used in the process. In order to improve security and prevent phishing attacks, it is recommended to only allow notification based flows on devices and browsers that have successfully completed a dynamic link based flow. Setting up a unique device identifier is left to the RP to implement. HTTP error code 403 - Relying Party has no permission to issue the request. This may happen when: Relying Party has no permission to invoke operations on accounts with ADVANCED certificates. Relying Party has no permission to use requested capability. HTTP error code 404 - object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system. Notification based authentication request parameters Parameter Type Mandatory Description relyingPartyUUID string + UUID of Relying Party. relyingPartyName string + RP friendly name, one of those configured for particular RP. Limited to 32 bytes in UTF-8 encoding. certificateLevel string Level of certificate requested. ADVANCED/QUALIFIED, QUALIFIED. signatureProtocol string + Signature protocol. Describes the algorithm how signature is produced and the signatureProtocolParameters object. Currently, the only allowed value is: ACSP_V1 - Data structure V1 with authentication context to be signed. See section ACSP_V1. signatureProtocolParameters object + Signature protocol. An object describing the parameters of the signature algorithm. Its structure depends on the signatureProtocol used. See ACSP_V1 parameters table. nonce string Random string, up to 30 characters. If present, must have at least 1 character. allowedInteractionsOrder object + See section available interactions. requestProperties object A request properties object. Currently, only one property is supported: shareMdClientIpAddress - Whether the RP API server should share user mobile device IP address with the RP. By default it is set to false. The RP must have proper privilege to use this property. See section IP sharing for details. capabilities array Used only when agreed with Smart-ID provider. When omitted request capabilities are derived from certificateLevel parameter. Notification based authentication request example { \"relyingPartyUUID\": \"1f1bfa89-4f8b-420a-a98e-fb3a161a30bc\", \"relyingPartyName\": \"DEMO\", \"certificateLevel\": \"QUALIFIED\", \"signatureProtocol\": \"ACSP_V1\", \"signatureProtocolParameters\": { \"randomChallenge\": \"ZHNmYmhkZmdoZGcgZmRmMTQ0NTM...\", \"signatureAlgorithm\": \"sha256WithRSAEncryption\" }, \"nonce\": \"d8XkbEnA0WsE0PvBZZoxGnPI4ml9qk\", \"allowedInteractionsOrder\": [ { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ], \"requestProperties\": { \"shareMdClientIpAddress\": true } } Notification based authentication session creation response parameters Parameter Type Mandatory Description sessionID string + A string that can be used to request the operation result. vc string + Object describing the VC code to be displayed by RP. See section VC codes. vc.type string + Type of the VC code. Currently, the only allowed type is alphaNumeric4. Note that the type is \"alphaNumeric4\" to refer to the fact that in the future the 4-symbol code might also contain letters. For the time being, only numeric values are returned for technical reasons. This may change in the future, so RPs should make no assumptions about it containing numeric data only! vc.value string + Value of the VC code. Notification based authentication session creation response { \"sessionID\": \"de305d54-75b4-431b-adb2-eb6b9e546015\", \"vc\": { \"type\": \"alphaNumeric4\", \"value\": \"4927\" } }","title":"authentication session","component":"rp-api","version":"3.0.3","name":"authentication_session","url":"/rp-api/3.0.3/authentication_session.html","titles":[{"text":"Dynamic link based authentication session","hash":"_dynamic_link_based_authentication_session","id":1},{"text":"Error conditions","hash":"_error_conditions","id":2},{"text":"Request parameters","hash":"_request_parameters","id":3},{"text":"Response structure","hash":"_response_structure","id":4},{"text":"Notification based authentication session","hash":"_notification_based_authentication_session","id":5},{"text":"Error conditions","hash":"_error_conditions_2","id":6},{"text":"Request parameters","hash":"_request_parameters_2","id":7},{"text":"Response structure","hash":"_response_structure_2","id":8}]},"3":{"id":3,"text":"This method returns the signing certificate of the user and if needed queries the user which device they intend to use in the following signature session. Having a correct certificate is needed for giving signatures under *AdES schemes. The method should not be used if the signature scheme does not mandate presence of the certificate in the document structure that is to be signed. A Smart-ID user can have multiple active accounts and document number is the unique identifier for a specific Smart-ID account. If an RP has previously done authentication flow for a user, the next signature request should use certificatechoice with the obtained document number, so that the RP can immediately get user’s correct certificate without interaction from the user. In case the certificatechoice with the identifier is used, e.g. in case of a signature request with no prior authentication, the RP must immediately use the notification based signature session after receiving the certificate. This is because when the Smart-ID app receives a certificatechoice session, it will service the request and then stay in the foreground and wait for the notification based signature session for a seamless user experience. A quick guide to choosing which certificatechoice endpoint to use: if a prior authentication was recently completed and a documentnumber was received, use the certificatechoice endpoint with documentnumber; if some time has passed from last authentication (more than a day), it is recommended to use the certificatechoice endpoint referencing a user identifier, not a specific account (and not refer to a specific documentnumber); if there is no prior authentication, the certificatechoice endpoint referencing a user identifier must be used. The method accepts QSCD as a certificate level parameter. This is a shortcut marking a certificate of QUALIFIED level which is also QSCD-capable. ADVANCED certificates cannot be QSCD-capable. certificatechoice session endpoints Method URL POST BASE/v3/certificatechoice/notification/etsi/:id-etsi-qcs-SemanticsId-Natural POST BASE/v3/certificatechoice/notification/document/:documentnumber HTTP error code 403 - Relying Party has no permission to issue the request. This may happen when: Relying Party has no permission to invoke operations on accounts with ADVANCED certificates. Relying Party has no permission to use requested capability. HTTP error code 404 - object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system. certificatechoice session request parameters Parameter Type Mandatory Description relyingPartyUUID string + UUID of Relying Party. relyingPartyName string + RP friendly name, one of those configured for particular RP. Limited to 32 bytes in UTF-8 encoding. certificateLevel string Level of certificate requested. ADVANCED/QUALIFIED/QSCD, defaults to QUALIFIED. nonce string Random string, up to 30 characters. If present, must have at least 1 character. capabilities array Used only when agreed with Smart-ID provider. When omitted request capabilities are derived from certificateLevel parameter. requestProperties object A request properties object. Currently, only one property is supported: shareMdClientIpAddress - Whether the RP API server should share user mobile device IP address with the RP. By default it is set to false. The RP must have proper privilege to use this property. See section IP sharing for details. certificatechoice session request example { \"relyingPartyUUID\": \"1f1bfa89-4f8b-420a-a98e-fb3a161a30bc\", \"relyingPartyName\": \"DEMO\", \"certificateLevel\": \"QUALIFIED\", \"nonce\": \"d8XkbEnA0WsE0PvBZZoxGnPI4ml9qk\", \"requestProperties\": { \"shareMdClientIpAddress\": true } } certificatechoice session response { \"sessionID\": \"de305d54-75b4-431b-adb2-eb6b9e546014\" } Successful certificatechoice session creation response parameters Parameter Type Mandatory Description sessionID string + A string that can be used to request the operation result. Successful session creation response { \"sessionID\": \"de305d54-75b4-431b-adb2-eb6b9e546014\" }","title":"certificatechoice session","component":"rp-api","version":"3.0.3","name":"certificatechoice_session","url":"/rp-api/3.0.3/certificatechoice_session.html","titles":[{"text":"certificatechoice session endpoints","hash":"_certificatechoice_session_endpoints","id":1},{"text":"Error conditions","hash":"_error_conditions","id":2},{"text":"Request parameters","hash":"_request_parameters","id":3},{"text":"Example response","hash":"_example_response","id":4},{"text":"Response on successful session creation","hash":"_response_on_successful_session_creation","id":5}]},"4":{"id":4,"text":"Removed mentions of digestAlgorithm and signatureScheme. Requests authentication and signing have two counter-parts instead of one: dynamic link based (newly added flows, relying on QR codes / Web2App links / App2App links) and notification based (the existing one from RPv2, relying on push notifications). Introduction of new signature protocols (ACSP_V1 and RAW_DIGEST_SIGNATURE). For authentication and signing requests, VC codes are returned from the server. New VC codes formats. Uses v2 instead of v1 in URL, for example https://https://rp-api.smart-id.com/v2/ instead of https://https://rp-api.smart-id.com/v1/. New interactions concept allowed interactions order. New parameter allowedInteractionsOrder added to authentication and signing requests. It replaces parameters displayText and requestProperties.vcChoice. New parameter interactionFlowUsed added into session status response message. New session status end result codes: REQUIRED_INTERACTION_NOT_SUPPORTED_BY_APP USER_REFUSED_DISPLAYTEXTANDPIN USER_REFUSED_VC_CHOICE USER_REFUSED_CONFIRMATIONMESSAGE USER_REFUSED_CONFIRMATIONMESSAGE_WITH_VC_CHOICE USER_REFUSED_CERT_CHOICE New parameter requestProperties for API /v2/certificatechoice New option shareMdClientIpAddress for parameter requestProperties Previously deprecated object reference pno/:country/:national-identity-number removed, use etsi/:id-etsi-qcs-SemanticsId-Natural instead. RP must ignore any unknown names (fields) in JSON response object.","title":"Changes","component":"rp-api","version":"3.0.3","name":"changes","url":"/rp-api/3.0.3/changes.html","titles":[{"text":"Documentation changes in version 3.0.3","hash":"_documentation_changes_in_version_3_0_3","id":1},{"text":"RP API version 3 changes compared to version 2","hash":"_rp_api_version_3_changes_compared_to_version_2","id":2},{"text":"RP API version 2 changes compared to version 1","hash":"_rp_api_version_2_changes_compared_to_version_1","id":3}]},"5":{"id":5,"text":"Smart-ID account A person has to register a Smart-ID account to use services provided by the Smart-ID system. Account binds a Smart-ID app instance (installed on a person’s mobile device) to a person’s identity in the Smart-ID system. In the course of account creation and registration, the identity of the account owner (person) is proofed by a Registration Authority (RA) and the relation between the identity and a key pair is certified by a Certificate Authority (CA). An account has a signature key pair and an authentication key pair. Smart-ID app A technical component of the Smart-ID system. A mobile app instance installed on a person’s mobile device that provides access to Smart-ID functionality for persons. Smart-ID provider An organization that is legally responsible for the Smart-ID system. Smart-ID server A technical component of the Smart-ID system. Server-side counterpart of the Smart-ID app. Handles backend operations and provides API-s to Relying Party (RP). Smart-ID system - A technical and organizational environment, which enables digital authentication and issuing of digital signatures of persons in an electronic environment. The Smart-ID system provides services that allow persons (Smart-ID account owners) to authenticate themselves to RPs, to give digital signatures requested by RPs, and to manage their Smart-ID accounts. Authentication key pair (or authentication key) Key pair, which is used to digitally authenticate a person. Certificate Authority (CA) An entity that issues certificates for Smart-ID account owners. Key pair Pair of keys, which are required for digital signature scheme. There are two kinds of key pairs (or shortly, keys) in the Smart-ID system, authentication key pair and signature key pair. The word pair refers to the private and public keys of each key pair used in an asymmetric cryptographic algorithm, here RSA. Mobile device A tablet computer or smartphone that runs a mobile device operating system (Apple iOS, Google Android). Person A natural person who uses the Smart-ID system to authenticate herself to an RP and to issue digital signatures requested by RP. Registration Authority (RA) An entity responsible for recording or verifying some or all of the information (particularly the identities of subjects) needed by a CA to issue certificates and CRLs and to perform other certificate management functions. Relying Party (RP) An organization or service, for example a bank, which is using the Smart-ID service to authenticate its users and to get them to sign the documents. Relying Party request A request from an RP that requires some kind of operation in the Smart-ID backend system. It may or may not create a transaction. Signature key pair (or signature key) Key pair, which is used to give digital signatures of a person.","title":"Terms and glossary","component":"rp-api","version":"3.0.3","name":"glossary","url":"/rp-api/3.0.3/glossary.html","titles":[]},"6":{"id":6,"text":"An app can support different interaction types and a relying party can demand a particular interaction with or without a fallback possibility. Different interactions can support different amount of data to display information to user. Available interactions are listed in the following table. Availability depends on what type of flow is used. Each interaction is defined by an object that has 2 parameters: type and either displayText60 or displayText200. All possible type value and extra parameter combinations are also listed in the following table. Parameters used for dynamic link generation Interaction type & extra parameter Description Dynamic link flows Notification based flows displayTextAndPIN with displayText60 The simplest interaction with max 60 chars of text and PIN entry on a single screen. Yes No confirmationMessage with displayText200 First screen is for text only (max 200 chars) and has Confirm and Cancel buttons. Second screen is for PIN. Yes No verificationCodeChoice with displayText60 Verification Code Choice interaction. First screen is for code choice and second screen is with max 60 chars text and PIN like displayTextAndPIN is. No Yes confirmationMessageAndVerificationCodeChoice with displayText200 First screen combines text and Verification Code choice. Second screen is for PIN. No Yes RP uses allowedInteractionsOrder array to list interactions it allows for the current session. Not all app versions may support all interactions though. The Smart-ID server is aware of which app installations support which interactions. RP is not allowed to list interaction types not meant for the flow (dynamic link flow or notification based flow). Listing an inappropriate interaction in the allowedInteractionsOrder will result in an error (HTTP 400 Bad Request). When processing an RP request the first interaction supported by the app is taken from allowedInteractionsOrder array and sent to the app. The interaction that was actually used is reported back to RP with interactionFlowUsed response parameter to the session request. If an app cannot support any interaction requested then the session is cancelled with reason code REQUIRED_INTERACTION_NOT_SUPPORTED_BY_APP. RP first choice is confirmationMessage, if not available then fall back to displayTextAndPIN. { \"allowedInteractionsOrder\": [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" }, { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ] } RP first choice is confirmationMessageAndVerificationCodeChoice, if not available then verificationCodeChoice should be used. { \"allowedInteractionsOrder\": [ { \"type\": \"confirmationMessageAndVerificationCodeChoice\", \"displayText200\": \"Longer description of the transaction context\" }, { \"type\": \"verificationCodeChoice\", \"displayText60\": \"Short description of the transaction context\" } ] } displayTextAndPIN only. { \"allowedInteractionsOrder\": [ { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ] } Insists on confirmationMessage, if not available then fail. { \"allowedInteractionsOrder\": [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" } ] }","title":"Interactions","component":"rp-api","version":"3.0.3","name":"interactions","url":"/rp-api/3.0.3/interactions.html","titles":[{"text":"Example allowedInteractionsOrder elements","hash":"_example_allowedinteractionsorder_elements","id":1}]},"7":{"id":7,"text":"On a high level, the dynamic flow consists of the following steps: User interacts with an RP frontend (which is a webpage or an app). RP backend makes a request to RP-API to create a dynamic link based authentication or signature session, obtaining security parameters that are necessary for generating dynamic links. This request may either be anonymous (no personal identifier is provided) or non-anonymous. RP starts dynamically creating dynamic links that update each second. The dynamic links are generated in RP backend and forwarded to RP frontend. RP frontend displays the QR codes / Web2App links / App2App links. The user interacts with one of them by either: Opening Smart-ID app and scanning a QR code (preferred option for QR codes); Using a native camera app to scan a QR code (not supported by all camera apps); Clicking on a Web2App link in an RP webpage, thus opening the Smart-ID app; Clicking on an App2App link in an RP app, thus opening the Smart-ID app. Smart-ID app extracts the necessary parameters and makes a request to the Smart-ID backend to check the integrity, validity and freshness of the dynamic link. If the request was non-anonymous, it is verified that the provided personal identifier agrees with the actual user’s identity. Backend responds by creating a transaction and returning the transaction data. Signing protocol continues in the usual way (user enters the PIN code). After the signature has been given, the RP receives the success result via the session status endpoint. In the case of anonymous flow, RP learns the identity of the user only at this point (via the user’s certificate). The following diagram describes the dynamic link based flow for the authentication session. The flow for the signature session follows the same principles and has been omitted. When RP backend makes a request to RP API to create a new dynamic link based session, Smart-ID server generates and returns the following parameters as a response: sessionID - session ID (RP UUID); sessionToken - unique random value that will be used to connect this login attempt between the relevant parties (RP, RP API, Smart-ID app); sessionSecret - base64-encoded random key value that should be kept in secret and should be shared only between the RP backend and RP API server. RP then starts calculating and showing the QR image, Web2App link, and/or App2App link dynamically (all those links must be updated regularly with the interval of 1 second). The RP may offer multiple options (a QR image and a Web2App link) to the user at the same time. This is useful in the following situations: The user is accessing RP website from a mobile device, for example a tablet device. RP wants to offer to the user the choice to authenticate either on the same device (via a Web2App link) or on a separate device (via a dynamic QR code). RP is unable to detect from the user agent whether the user is using a mobile device or a PC. The next table lists all the parameters and definitions used in the dynamic link generation. They are all explained in more detail below. Parameters used for dynamic link generation Parameter Formula version A pre-defined version value, currently 0.1. sessionToken Generated by RP API. sessionSecret Generated by RP API. dynamicLinkType 'QR' (for QR codes) | 'Web2App' (for Web2App links) | 'App2App' (for App2App links) sessionType 'auth' | 'sign' elapsedSeconds Seconds since receiving the response from the initial request to RP API. payload A concatenating of the following 3 values in string form, separated by periods: dynamicLinkType.sessionType.elapsedSeconds authCode Calculated using HMAC SHA 256 algorithm and represented in Base64URL encoding. lang An ISO 639-2 language code. It should match the language that the user was seeing in the RP UI previously. This only affects the language of the fallback page, not the Smart-ID app itself. The parameter sessionType describes the session type: 'auth' - authentication session 'sign' - signature session The lang parameter defines the interface language for the HTTPS fallback page that will be shown to the user when there are technical problems regarding opening dynamic links (for example, if user’s browser is blocking Web2App links and needs to be configured to allow them or if Smart-ID app is not installed on the phone). It is recommended that for consistent user experience, RP provides here the same language that the user was already using in the RP UI. The elapsedSeconds parameters is seconds since receiving the response from the initial request to RP API. Notice that authCode must be re-calculated every 1s. As the next step, RP calculates payload using string concatenation and then uses it in HMACSHA256 calculation (explained below): payload := dynamicLinkType.sessionType.elapsedSeconds authCode := HMACSHA256(sessionSecret, payload) The calculation of payload must be done in the RP backend. dynamicLinkType, sessionType and elapsedSeconds must all be generated in the RP backend and RP frontend must not be able to change these parameters. Details about formatting the payload and sessionSecret parameters as byte strings for HMACSHA256 calculation: payload should be converted into a byte string from its ASCII string representation; sessionSecret should be used in its binary representation (it is returned from RP API in Base64 encoding); In the QR / Web2App link / App2App link, the result of hash calculation (parameter authCode) must be formatted in Base64URL encoding. The following table aims to clarify which of the parameters should be accessible by which parties. RP-API server RP backend RP frontend/app version sessionId sessionToken sessionSecret elapsedSeconds dynamicLinkType sessionType authCode lang Legend: - source of parameter (the party that generates/calculates it) - knows parameter - MUST NOT know parameter The dynamic link for App2App and Web2App is a URL string: https://https://smart-id.com/dynamic-link/?version=…​&sessionToken=…​&dynamicLinkType=…​&sessionType=…​&elapsedSeconds=…​&lang=…​&authCode=…​ Example of a Web2App link: https://https://smart-id.com/dynamic-link/?version=0.1&sessionToken=kj4mIOLOa75zeNKabFA5f251&dynamicLinkType=Web2App&sessionType=auth&elapsedSeconds=2&lang=eng&authCode=R5oiivdJIhfjJLBCA3AzijU2p8oH45fBKpcN59oSXboo For all flows, the dynamic generation (every 1s) of the authCode parameter must be done in the RP backend, NOT in the RP frontend or RP app so as not to not leak the sessionSecret parameter. Also, it is forbidden to generate values of authCode parameter ahead of time and forward them to the RP frontend/app. In the App2App and Web2App flow it will be possible for the RP to also attach a callback URI that the Smart-ID App can call at the end of the transaction. This will allow for seamless navigation between RP apps and RP websites in the single-device use case. Details for this functionality are being worked on. The callback URL will also be part of the payload and as such protected by the authCode parameter. The allowed callback domains might be whitelisted by the Smart-ID Service. QR message itself is defined as a URL string, just like App2App and Web2App links. The only difference is the dynamicLinkType parameter value. https://https://smart-id.com/dynamic-link/?version=…​&sessionToken=…​&dynamicLinkType=…​&sessionType=…​&elapsedSeconds=…​&lang=…​&authCode=…​ Example: https://https://smart-id.com/dynamic-link/?version=0.1&sessionToken=kj4mIOLOa75zeNKabFA5f251&dynamicLinkType=QR&sessionType=auth&elapsedSeconds=2&lang=eng&authCode=R5oiivdJIhfjJLBCA3AzijU2p8oH45fBKpcN59oSXboo Here parameter authCode is represented in Base64URL encoding. Parameter sessionToken is inserted into the QR message exactly as it was obtained from RP API. Example of a QR code: For generation of QR codes, error correction level LOW should be used. The QR code should have sufficient margins to enable quick scanning by the Smart-ID app. The optimal size for QR code is ~10 pixels per block when displayed on a PC, since: Block sizes 5 pixels and less are too small for easy scanning (devices might have focus issues). Block sizes 20 pixels and above are too big for convenient scanning. When QR code is displayed on a mobile device, it is recommended to show the QR code as big as possible, up to 10 pixels per block. The actual generation of the QR image can be done both in the backend or the frontend, as the underlying message in the QR code is essentially public information. In the App2App flow, it is not necessary to generate the link every second. Instead, the RP app can request a fresh link on-the-fly from the RP backend when the user clicks on a button in the RP app and navigate to it. For cases when the app is not installed or some other problem occurs with opening a dynamic link, a fallback HTTPS webpage is opened with instructions on how to resolve the issue. The lang parameter in the link is used to by default show the same language as on the RP UI. The instructions cover the following scenarios: User is not on a mobile device where Smart-ID is installed and has been allowed by the RP to use a wrong type of dynamic link. Smart-ID App is not installed on the current device. Mobile browser does not support universal links / Android App links. Mobile OS settings disallow the link and user intervention is required.","title":"Dynamic link flows","component":"rp-api","version":"3.0.3","name":"dynamic_link_flows","url":"/rp-api/3.0.3/dynamic_link_flows.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Dynamic link calculation","hash":"_dynamic_link_calculation","id":2},{"text":"Link","hash":"_link","id":3},{"text":"QR","hash":"_qr","id":4},{"text":"Dynamic link and QR presentation","hash":"_dynamic_link_and_qr_presentation","id":5},{"text":"Fallback page","hash":"_fallback_page","id":6}]},"8":{"id":8,"text":"In general, notification based flows are similar to the flows from RP API v2 in the sense that they rely on the push notifications mechanism. The main differences with regard to RP API v2 are: Verification codes are returned to the RP from server, not calculated by the RP; There are changes to the signing protocols of authentication and signature requests; Below, sequence diagrams are given along with explanations of the differences. The following diagram describes the notification based flow for the authentication session. The following sequence diagram illustrates the notification based signing flow. There are separate signing protocols for authentication and signature requests (see here for details). In RP API v3, verification codes (VC) are not generated by RP based on the DTBS (data to be signed), but are returned from the server to RP. Verification codes are only relevant for the notification based flows. Currently, there is only one supported verification code type: alphaNumeric4 The returned verification code consists of 4 characters. It should be shown to the user as received from the server. Note that the type is \"alphaNumeric4\" to refer to the fact that in the future the 4-symbol code might also contain letters. For the time being, only numeric values are returned for technical reasons. This may change in the future, so RPs should make no assumptions about it containing numeric data only! Motivation for adding non-numeric data in future: In the previous API versions the numeric only codes were similar to the users' PIN codes and caused confusion for some of the users. The inclusion of letters also improves the total number of possible combinations, thus strengthening it as a security measure.","title":"Notification based flows","component":"rp-api","version":"3.0.3","name":"notification_based_flows","url":"/rp-api/3.0.3/notification_based_flows.html","titles":[{"text":"Flow diagrams","hash":"_flow_diagrams","id":1},{"text":"Signature protocols","hash":"_signature_protocols","id":2},{"text":"Verification codes","hash":"vc-codes","id":3}]},"9":{"id":9,"text":"This document describes the relying party service interface protocol of Smart-ID server and provides information for integration. The interface offers the entry point to Smart-ID main use cases, i.e. authentication and signing. The main Smart-ID use case is of a relying party to start a session by calling the Smart-ID server RP API with a challenge when the user wishes to authenticate with the relying party’s service or create a signature. Either the user must scan a QR code for multi-device use case to launch the Smart-ID application or click a link for single-device use case to launch the Smart-ID application, or the Smart-ID server must send a push message notification to the user’s device where the user opens the Smart-ID application. The user checks the details of the transaction and enters a PIN code to confirm it. The application communicates with the Smart-ID server and once the final signature is created makes it available for the relying party to be fetched. Meanwhile, the relying party has been waiting for a reply from the Smart-ID server using a long poll connection. In case of success it receives the signature and the user’s certificate to be able to validate the result. The service creates digital signatures as proof of authentication and signing. However, to create electronic signatures the relying party must create the required document structure, calculate the hash and have that signed using this API. The latest version of the API introduces new flows collectively referred to as \"dynamic flows\". for multi-device use cases — dynamic QR codes that the user must scan; for single-device use cases where the user is visiting an RP webpage using a mobile browser — dynamic links which the user must click; for single-device use cases where the user is using an RP app — dynamic links which the user must click. The guiding principle in designing the API has been to unify those three aforementioned flows as much as possible to minimize the integration efforts for the RPs. Because of this, they share the same security mechanisms and principles, even though the medium of transmitting information is completely different. This also means that it is possible for an RP to offer alternative methods of authentication at the same time without doing multiple requests to RP-API. In RP API version 3, the notification based flows will still be available, but for maximum security, it is recommended that they are used only if the user has been authenticated at least once before in that device by one of the more secure dynamic flows. The recommended way for ensuring this is for the RP to utilize the client’s local storage (e.g. browser cookies) to keep track which clients have previously authenticated using the more secure flows. For both usability and security reasons, in the single-device use case the new dynamic links based flows should always be used. Brokers of the Smart-ID service are treated similarly to relying parties and there is no extra configuration compared to previous RP API versions. The following sequence diagram gives an overview of the new (more secure) dynamic link based authentication flow. The following sequence diagram gives an overview of the notification based authentication flow. The following sequence diagram illustrates the notification based signing flow.","title":"Introduction","component":"rp-api","version":"3.0.3","name":"introduction","url":"/rp-api/3.0.3/introduction.html","titles":[{"text":"Dynamic link based authentication flow","hash":"_dynamic_link_based_authentication_flow","id":1},{"text":"Notification based authentication flow","hash":"_notification_based_authentication_flow","id":2},{"text":"Notification based signing flow","hash":"_notification_based_signing_flow","id":3}]},"10":{"id":10,"text":"For dynamic link based flows anonymous REST API endpoints may be used. Here the RP learns the identity of the user only when receiving the successful session result. Usage of the anonymous endpoint is optional. For the dynamic link based flows, the other REST object references may be used as well. In that case the check whether the identifiers match is done right after the user has interacted with the dynamic link (QR code, Web2App link, or App2App link), but before signature creation. Objects referenced by etsi/:id-etsi-qcs-SemanticsId-Natural are persons identified by their ETSI Natural Person Semantics Identifier specified in ETSI EN 319 412-1 in section Natural person semantics identifier. The identifier contains information using the following structure in the presented order: 3 character natural identity type reference, that shall have one of the following defined values (the standard supports more than these three references): PAS for identification based on passport number. IDC for identification based on national identity card number. PNO for identification based on (national) personal number (national civic registration number). 2 character ISO 3166-1 alpha-2 country code (for example EE, LT, LV, KZ) hyphen-minus - (0x2D (ASCII), U+002D (UTF-8)) identifier (according to country and identity type reference) Example values may be: etsi/PASKZ-987654321012 etsi/PNOEE-48010010101 etsi/IDCCZ-1234567890 Please note: :id-etsi-qcs-SemanticsId-Natural value should be encoded according to the rules defined in ETSI EN 319 412-1 the country code part in :id-etsi-qcs-SemanticsId-Natural conforms to ISO 3166-1 alpha-2 code and as such must be in upper case. Objects referenced by document/:documentnumber are particular documents (also known as user accounts) in the Smart-ID system. This may be used for signing once a user has already authenticated, for re-authentication or for signing once the document is known from a certificatechoice session query.","title":"REST object references","component":"rp-api","version":"3.0.3","name":"object_references","url":"/rp-api/3.0.3/object_references.html","titles":[{"text":"anonymous","hash":"_anonymous","id":1},{"text":"etsi/:id-etsi-qcs-SemanticsId-Natural","hash":"_etsiid_etsi_qcs_semanticsid_natural","id":2},{"text":"document/:documentnumber","hash":"_documentdocumentnumber","id":3}]},"11":{"id":11,"text":"The RP can include additional properties to some of the requests for requesting some desired behaviour using the request parameter requestProperties. Any unsupported property will be ignored and will be listed in the ignoredProperties parameter of the Session status response. Mobile device IP address is shared to authorized RP, who are able to use the data in their transaction monitoring mechanisms to detect unauthorized or fraudulent transactions by comparing this shared IP address with the IP address, that person represents to the RP during interaction with RP services. The IP address is saved to the RP session when person reacts to the RpRequest with one of its mobile devices. Saved IP address is returned to the RP in the session status response only if all of the following are true: The RP has privileges to request mobile device IP address (default configuration does not allow the IP sharing). The RP requests the mobile device IP address via requestProperties of RP request. The optional property option shareMdClientIpAddress must be set to true. If property is not defined, or is set to false in the RP request, IP address won’t be shared in session. The RP session is complete. The mobile device IP address was successfully saved to the RP session.","title":"Additional request properties","component":"rp-api","version":"3.0.3","name":"request_properties","url":"/rp-api/3.0.3/request_properties.html","titles":[{"text":"Mobile Device IP sharing","hash":"ip_sharing","id":1}]},"12":{"id":12,"text":"After receiving the transaction response from the Session status API call, the following algorithm must be used to decide, if the authentication result is trustworthy and what the identity of the authenticating end user is. result.endResult has the value OK. The certificate from cert.value is valid: The certificate is trusted (signed by a trusted CA). The certificate has not expired. The person’s certificate given in the cert.value is of required or higher assurance level as requested. The identity of the authenticated person is in the subject field or subjectAltName extension of the X.509 certificate. signature.value is the valid signature over the expected hash as described in Signature protocols, which was submitted by the RP verified using the public key from cert.value. It is strongly recommended to have these steps performed using standard cryptographic libraries. After successful authentication, the RP must invalidate the old user’s browser or API session identifier and generate a new one. For further details and security considerations see also the Secure implementation guide.","title":"Response verification","component":"rp-api","version":"3.0.3","name":"response_verification","url":"/rp-api/3.0.3/response_verification.html","titles":[]},"13":{"id":13,"text":"session status endpoint Method URL GET BASE/v3/session/:sessionId session status query parameter Parameter Type Mandatory Description timeoutMs integer Request long poll timeout value in milliseconds. The upper bound of timeout: 120000, minimum 1000. If not specified by the API client in the request, a value halfway between maximum and minimum is used. This method can be used to retrieve session result from Smart-ID backend. This is a long poll method, meaning it might not return until a timeout expires. Caller can tune the request parameters inside the bounds set by service operator. Example URL: https://https://rp-api.smart-id.com/v3/session/de305d54-75b4-431b-adb2-eb6b9e546016?timeoutMs=10000 HTTP error code 404 - session does not exist or has expired. session status response Parameter Type Mandatory Description state string + State of request. RUNNING/COMPLETE. There are only two possible status codes for now. result object Structure describing end result, may be empty or missing when still running. result.endResult string + End result of the transaction (OK if session was completed successfully). Refer to the subsection below for all possible values. result.documentNumber string for OK Document number, can be used in further signature and authentication requests to target the same device. signatureProtocol string Signature protocol. Possible values: ACSP_V1 - signature protocol used for the authentication sessions. RAW_DIGEST_SIGNATURE - signature protocol used for the signature sessions. See Signature protocols for additional details. signature object Structure describing the signature result, if any. The structure depends on the signature protocol used. cert object for OK Structure describing the certificate related to the request. cert.value string + Certificate value, DER+Base64 encoded. The certificate itself contains info on whether the certificate is QSCD-enabled, data which is not represented by certificate level. cert.certificateLevel string + Level of Smart-ID certificate: ADVANCED or QUALIFIED ignoredProperties array Any values from requestProperties that were unsupported or ignored. interactionFlowUsed string for OK Name of interaction used. See section available interactions. deviceIpAddress string IP address of the mobile device. Is present only when it has been previously requested by the RelyingParty within the session creation parameters. See section IP sharing. Signature body for RAW_DIGEST_SIGNATURE in session response Parameter Type Mandatory Description value string + Signature value, base64 encoded. signatureAlgorithm string + The signature algorithm that was used to generate the signature based on the digest. See Supported signature algorithms. The following table describes the signature body for ACSP_V1 protocol that the RP will receive in the session response. Notice that the actual object that was signed is not present — it needs to be compiled by the RP using the RP-provided randomChallenge and the serverRandom returned in this response. This re-constructed object must then be used to validate the signature. See ACSP_V1 for details. Signature body for ACSP_V1 in session response Parameter Type Mandatory Description value string + Signature value, base64 encoded. signatureAlgorithm string + Signature creation scheme that was used for creating the signature. See Supported signature algorithms. serverRandom string + A random value of 24 or more characters from Base64 alphabet, which is generated at RP API service side. RP must validate that the value contains only valid Base64 characters. This value will be returned from RP API and RelyingParties must use it exactly as it was returned during the validation of signature. There are not any guarantees that the returned value length is the same in each call of the RP API. Successful response when still waiting for user’s response { \"state\": \"RUNNING\" } Successful response after completion, dynamic flow, protocol ACSP_V1 (IP sharing is enabled) { \"state\": \"COMPLETE\", \"result\": { \"endResult\": \"OK\", \"documentNumber\": \"PNOEE-372....\" }, \"signatureProtocol\": \"ACSP_V1\", \"signature\": { \"serverRandom\": \"B+C9XVjIAZnCHH9vfBSv...\", \"value\": \"B+A9CfjIBZnDHHav3B4F...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" }, \"cert\": { \"value\": \"B+C9XVjIAZnCHH9vfBSv...\", \"certificateLevel\": \"QUALIFIED\" }, \"interactionFlowUsed\": \"displayTextAndPIN\", \"deviceIpAddress\": \"203.0.113.34\" } Successful response after completion, notification based flow, protocol RAW_DIGEST_SIGNATURE (IP sharing is enabled) { \"state\": \"COMPLETE\", \"result\": { \"endResult\": \"OK\", \"documentNumber\": \"PNOEE-372....\" }, \"signatureProtocol\": \"RAW_DIGEST_SIGNATURE\", \"signature\": { \"value\": \"B+A9CfjIBZnDHHav3B4F...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" }, \"cert\": { \"value\": \"B+C9XVjIAZnCHH9vfBSv...\", \"certificateLevel\": \"QUALIFIED\" }, \"interactionFlowUsed\": \"displayTextAndPIN\", \"deviceIpAddress\": \"203.0.113.34\" } OK - session was completed successfully, there is a certificate, document number and possibly signature in return structure. USER_REFUSED - user refused the session. TIMEOUT - there was a timeout, i.e. end user did not confirm or refuse the operation within given time frame. DOCUMENT_UNUSABLE - for some reason, this RP request cannot be completed. User must either check his/her Smart-ID mobile application or turn to customer support for getting the exact reason. WRONG_VC - in case the multiple-choice verification code was requested, the user did not choose the correct verification code. REQUIRED_INTERACTION_NOT_SUPPORTED_BY_APP - user app version does not support any of the allowedInteractionsOrder interactions. USER_REFUSED_CERT_CHOICE - user has multiple accounts and pressed Cancel on device choice screen on any device. USER_REFUSED_DISPLAYTEXTANDPIN - user pressed Cancel on PIN screen. Can be from the most common displayTextAndPIN flow or from verificationCodeChoice flow when user chosen the right code and then pressed cancel on PIN screen. USER_REFUSED_VC_CHOICE - user cancelled verificationCodeChoice screen. USER_REFUSED_CONFIRMATIONMESSAGE - user cancelled on confirmationMessage screen. USER_REFUSED_CONFIRMATIONMESSAGE_WITH_VC_CHOICE - user cancelled on confirmationMessageAndVerificationCodeChoice screen.","title":"session status","component":"rp-api","version":"3.0.3","name":"session_status","url":"/rp-api/3.0.3/session_status.html","titles":[{"text":"Error conditions","hash":"_error_conditions","id":1},{"text":"Response structure","hash":"_response_structure","id":2},{"text":"Signature body for RAW_DIGEST_SIGNATURE protocol","hash":"_signature_body_for_raw_digest_signature_protocol","id":3},{"text":"Signature body for ACSP_V1 protocol","hash":"_signature_body_for_acsp_v1_protocol","id":4},{"text":"session status end result codes","hash":"_session_status_end_result_codes","id":5}]},"14":{"id":14,"text":"The API provides four different types of endpoints. The first three are POST requests that return a sessionID and the fourth is a GET used to query for the result based on the sessionID. The authentication session is used to log a user onto a system or otherwise verify the identity of a user; the signature session is used to create digital signature; the certificatechoice session is used immediately prior to the signature session when the user’s signing certificate is required to create the object that will be signed; finally, the session status endpoint provides the result of the above sessions. Their implementation details are described in their respective subpages. There are two types of flows that can be used for authentication and signature sessions - the notification based flow and the dynamic link based flow. The certificatechoice session can only be used with notification based flow. There are different ways to reference users - via their issued identifier, a document number linking a specific account or even not at all (in case of dynamic link based flows). The different object references are described on a dedicated page. The main use cases and which sessions and flows to use are described below. Utilizing the RP API as described below provides the best user experience and security. In the URL examples below and other pages BASE refers to the RP API base address https://https://rp-api.smart-id.com Use case: The RP session is on a separate device from the mobile phone where the Smart-ID app is installed. For example, the user is using a PC browser to access an RP website or a tablet to access an RP application. Using the dynamic link based flow with QR codes is the most secure: RP calls the anonymous dynamic link based authentication session endpoint and displays a QR code that the user must scan with the Smart-ID app. BASE/v3/authentication/dynamic-link/anonymous Instead of using the anonymous authentication session endpoint, the RP can request the user to enter their user identifier and utilize the non-anonymous authentication session endpoint. This may be beneficial when the RP utilizes custom usernames. BASE/v3/authentication/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural Notification based authentication session endpoint can also be used for the same purpose. In order to improve security and prevent phishing attacks, it is recommended to only allow notification based flows on devices and browsers that have successfully completed a dynamic link based flow beforehand. It is up to RP to decide how to identify such devices/browsers (e.g. by setting up a unique device identifier and storing it in the browser’s cookies). Using a notification based authentication session endpoint triggers a push notification to all the user’s devices instead of the user having to scan QR codes. BASE/v3/authentication/notification/etsi/:id-etsi-qcs-SemanticsId-Natural If a user has already logged onto the RP app or website using Smart-ID authentication, the RP can call the notification based signature session endpoint to sign using the same Smart-ID account that was used for authentication. In order to improve security and prevent phishing attacks, it is recommended to only allow notification based flows on devices and browsers that have successfully completed a dynamic link based flow beforehand. It is up to RP to decide how to identify such devices/browsers (e.g. by setting up a unique device identifier and storing it in the device). The document number is attained from the preceding authentication call. BASE/v3/signature/notification/document/:documentnumber In many cases, the user’s signing certificate is required before the signature session can be initiated. Calling the notification based certificatechoice session endpoint allows obtaining it. As the document number is already known, no user interaction is required for the certificatechoice session and the RP API can immediately provide the certificate. BASE/v3/certificatechoice/notification/document/:documentnumber Immediately after receiving the response with the certificate, RP should call the notification based signature session endpoint. The Smart-ID app will wait for the signature session and return only after it has been completed. BASE/v3/signature/notification/document/:documentnumber In case no prior authentication has taken place, the dynamic link based signature session endpoint should be called. BASE/v3/signature/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural Often though the certificate is required prior to the signing request. For this, RP should first call the notification based certificatechoice session endpoint. BASE/v3/certificatechoice/notification/etsi/:id-etsi-qcs-SemanticsId-Natural Immediately after receiving the response with the certificate, RP should call the notification based signature session endpoint. BASE/v3/signature/notification/document/:documentnumber Use case: The RP frontend (whether an RP app or website accessed by a mobile browser) resides on the same mobile device as the Smart-ID app. The client is using a mobile app or RP detects that the user is on a mobile browser so it can be assumed that the user intends to use the Smart-ID app on the same device. However, a fallback option should also be provided to switch to the separate device use case. Use the anonymous dynamic link based authentication session endpoint for App2App and Web2App flows. BASE/v3/authentication/dynamic-link/anonymous Alternatively, the non-anonymous flow can be used to too. BASE/v3/authentication/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural As a fallback (in case the Smart-ID app is on a separate account), RP should provide an option to use QR codes instead of the App2App or Web2App link. There is no need to query the RP API again for this. Call the dynamic link based signature session endpoint and provide the document number from the authentication session to ensure the same account is being used. BASE/v3/signature/dynamic-link/document/:documentnumber As the document number is already known, no user interaction is required for the certificatechoice session and the RP API can immediately provide the certificate. In order to improve security and prevent phishing attacks, it is recommended to only allow notification based flows on devices and browsers that have successfully completed a dynamic link based flow. Setting up a unique device identifier is left to the RP to implement. BASE/v3/certificatechoice/notification/document/:documentnumber BASE/v3/signature/dynamic-link/document/:documentnumber In case no prior authentication has taken place, one should call the dynamic link based signature session endpoint for App2App and Web2App flows. BASE/v3/signature/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural Often though the certificate is required prior to the signing request. For this, RP should first call the notification based certificatechoice session endpoint. BASE/v3/certificatechoice/notification/etsi/:id-etsi-qcs-SemanticsId-Natural Immediately after receiving the response with the certificate, RP should call the notification based signature session endpoint. The Smart-ID app will wait for the signature session and return only after it has been completed. BASE/v3/signature/notification/document/:documentnumber","title":"Session types","component":"rp-api","version":"3.0.3","name":"sessions","url":"/rp-api/3.0.3/sessions.html","titles":[{"text":"Multi-device use cases","hash":"_multi_device_use_cases","id":1},{"text":"Authentication","hash":"_authentication","id":2},{"text":"Signing with prior authentication","hash":"_signing_with_prior_authentication","id":3},{"text":"Without certificate query","hash":"_without_certificate_query","id":4},{"text":"With certificate query","hash":"_with_certificate_query","id":5},{"text":"Signing without prior authentication","hash":"_signing_without_prior_authentication","id":6},{"text":"Without certificate query","hash":"_without_certificate_query_2","id":7},{"text":"With certificate query","hash":"_with_certificate_query_2","id":8},{"text":"Single-device use cases","hash":"_single_device_use_cases","id":9},{"text":"Authentication","hash":"_authentication_2","id":10},{"text":"Signing with prior authentication","hash":"_signing_with_prior_authentication_2","id":11},{"text":"Without certificate query","hash":"_without_certificate_query_3","id":12},{"text":"With certificate query","hash":"_with_certificate_query_3","id":13},{"text":"Signing without prior authentication","hash":"_signing_without_prior_authentication_2","id":14},{"text":"Without certificate query","hash":"_without_certificate_query_4","id":15},{"text":"With certificate query","hash":"_with_certificate_query_4","id":16}]},"15":{"id":15,"text":"This document has not been updated for RP version 3. After the updates it will be restructured and integrated into the rest of the RP API documentation. Although ID-card, Mobile-ID and Smart-ID are all secure technologies for authentication and digital signing, e-service providers (Relying Parties, RPs) need to consider potential risks, which are associated with digital authentication solutions. It is important that RPs implement additional security mechanisms to help users to understand the context of their actions and to protect them from possible attacks. For example, there might be a malicious phishing website controlled by attacker between user’s browser and the RP’s website. This document lists attacks that can be launched against RP’s website or RP’s app, when the RP is using ID-card, Mobile-ID or Smart-ID for authentication and digital signatures. Both user interface options (browser and app) are considered and when it is not specifically stated, attacks and proposed countermeasures are relevant for both cases. Effective security measures for mitigating attacks are described in the following sections. Some security conscious RPs have already deployed them. Others should also consider implementing and deploying these measures and defences to prevent cybercriminals from being successful in their actions. Guidelines are written in affirmative and imperative mood, however, not all security measures are considered mandatory for all RPs. Nevertheless, there’s nobody else, who can implement those defences and security measures on their behalf. It is the relying party’s opportunity and responsibility to carefully assess these risks and select appropriate countermeasures. Relying Party (RP, e-service provider) Organisation developing and managing the website and providing some service to its users. The organisation may bear financial losses in case cybercriminals are successful with their attacks. Website (e-service) Information system built by RP and uses Mobile-ID or Smart-ID service to authenticate users and to create digital signatures. The website is integrated with the Mobile-ID RP API (https://github.com/SK-EID/MID) or the Smart-ID RP API (https://github.com/SK-EID/smart-id-documentation). App RP’s mobile application running on a user’s device. The app is used to interact with the RP’s e-service and in the background, the app is communicating to the RP’s backend or website. Users Natural persons with registered Mobile-ID/Smart-ID accounts. Users authenticate to the RP’s e-service and create digital signatures with the browser or the RP’s app. All feedback to this document and proposed security measures is much appreciated. Please send it to the e-mail address support@sk.ee on the Secure Implementation Guidance. This section describes common attacks, which have been tried in the past against RPs, against their users and against SK ID Solutions. Giving a brief overview of the attacks is necessary as it may be the case some RPs are not aware of some of the attacks and may erroneously think they are safe. Also, not all countermeasures are effective against every possible attack. RPs will need to consider, which attacks could have the most devastating impact on their business and therefore, which countermeasures should be deployed first. Attacks are described in a generic way and don’t differentiate between browser, app, ID-cards, Mobile-ID and Smart-ID. User starts the login process on the RP’s website or app. They enter national identity code, but sometimes make a small error in the code. By random chance the entered incorrect code corresponds to another real person, who also has a Smart-ID or Mobile-ID account. Smart-ID/Mobile-ID system initiates the authentication transaction for the wrong user and the phone of another user wakes up and displays the authentication consent screen. It has occurred in the past the other user accepted the foreign consent dialog without verifying it and without having second thoughts confirmed it by entering PIN1, behaving almost like on auto-pilot. The session of the original user was then authenticated by the RP’s website, although the original user is logged into the wrong person’s account. There was no malicious attempt in the beginning, it was purely accidental error by both users. In this case, an attacker is specifically targeting some particular user. The attacker tries to irritate and to annoy the user by repeatedly initiating an authentication session with the user’s identity. This sends nefarious Smart-ID/Mobile-ID notifications to the user’s phone and disturbs normal phone usage. Attacker could ask for a ransom to cease the attack or simply cause inconvenience as a revenge. In a more advanced situation, an attacker targets the RP itself and starts many authentication sessions with the app or website of RP, using some scripted and automated tools. The attacker could use random usernames and generated national identity codes and this results nefarious notifications on phones of multiple users and disturbs normal phone usage. Not only does this cause inconvenience to users, but also, this kind of attack could result in a large number of complaints to SK ID Solutions and SK could be forced to temporarily cut off the Smart-ID and/or Mobile-ID service to the RP. This results in the outage of the RP’s website or app, because other users cannot login either. Attacker could ask for a ransom to cease the attack or simply cause damage as a revenge. An advanced version of this attack targets multiple RP’s and in such a widespread attack, SK could be forced to temporarily cut off the Smart-ID and/or Mobile-ID service to those RPs, who are not able to filter the malicious authentication attempts by themselves. An attacker is trying to extract and deduce information about Mobile-ID/Smart-ID users through the RP’s website or other information systems or software. For example, the attacker initiates a Smart-ID authentication session on the RP’s website with a generated national identity code. If no error message is returned, the attacker can deduce that this particular user has a Smart-ID account and it may be worthwhile to try some further attacks against that particular user. In more advanced situation, the attacker may be able to use the RP’s information system to download the user’s signing certificate. Phishing attacks are intended to confuse users and to gain access to the RP’s e-service under the user’s name. Usually, these attacks are automated and distributed in large quantities via spam e-mails. The attacker hopes some percentage of users, who are not aware of risks and are not careful, will \"take the bait\" and be \"hooked\". Hence, the name \"phishing\" (fishing). However, e-mail and browsers are not the only attack vector. In case the RP requires digital signatures in order to commit an operation or transaction on the e-service, the attacker tries to further confuse the user and will try to get the user to enter PIN2 for the signing request as well. Previously, phishing has been attempted in a manual (non-automated) ways and with simple (static) counterfeit websites. However, with advances in attack tools, more powerful attackers must be considered. Nowadays, they are able to build authentic looking and well-functioning dynamic websites, which proxy authentic HTML pages and images from the original website of the RP. General steps of such kind of phishing attacks are following: An attacker sends users a phishing e-mail with a URL to the proxy website and waits until the user connects to the attacker’s website. Automatic tools then connect from the proxy website to the original website of the RP. The user enters all the required information (username, national identity code, …​) and starts authenticating on the attacker’s website. The proxy website sends the same information to the original website and starts the same kind of authentication session there as well and mediates back the correct Mobile-ID/Smart-ID verification code and any other displayed information. The user sees the authentication dialog on the mobile device, with correct serviceName, correct displayText and correct verification code. The user will consent to the authentication dialog and enters PIN1, although the attacker’s proxy will be logged in to the user’s account at the RP’s website. After logging in, the attacker’s proxy waits until the user initiates the operation or transaction and changes details of the transaction on the fly (for example, change the destination bank account number of the transfer order) and starts the changed transaction on the original website. The user enters the PIN2 to confirm the transaction, but it will be the attacker’s changed transaction that will be executed. An attacker makes a phone call to a user, posing as an employee of the RP (or some other authoritative person, for example, police officer) and persuades the user that they need to perform a Mobile-ID/Smart-ID authentication in order to confirm something fictional. General steps of such kind of phishing attacks are following: An attacker gathers the required information (username, national identity code, …​) from the user or has already them at hand before the phone call. The attacker navigates with the browser to the RP’s original website and starts the authentication session under the name of the user. Website initiates the Mobile-ID/Smart-ID authentication and displays the verification code to the attacker. (Instead of the website, the attacker could use the RP’s app as well.) The attacker informs the user that Mobile-ID/Smart-ID authentication needs to be performed and tells them the verification code and asks to complete the authentication on the mobile device. The user verifies the authentication dialog on the device, consents and enters PIN1. The Browser of the attacker is logged into the RP’s website under the user’s identity. The attacker starts an operation (for example, a transfer order) on the RP’s website. The website initiates the Mobile-ID/Smart-ID digital signature operation and displays the verification code to the attacker. The attacker informs the user, still on the phone call, that Mobile-ID/Smart-ID digital signature needs to be created as well, and tells them the verification code and asks to complete the signing operation on the mobile device. The user verifies the digital signature dialog on the mobile device, consents and enters PIN2. The operation on the website of the RP is executed. This section lists security measures, which can be deployed by the RP itself in order to protect from threats and attacks listed in the previous section. This table describes proposed security measures. It includes the following information: In case the proposed security measure is considered mandatory for customers of SK ID Solutions, it is marked as \"MUST\". In case it is recommended, it is marked as \"SHOULD\". Information whether the security measure can be applied to websites and/or apps. Most of the measures are universal, but there are specific measures, such as \"keeping track of trusted browsers\" that apply only in certain situations. Information whether the security measure can be applied in case of ID-card, Mobile-ID and/or Smart-ID integration. Security measure Mandatory Applicable with websites Applicable with mobile apps Applicable with Smart-ID Applicable with Mobile-ID Applicable with ID-card secure TLS-CCA SHOULD yes no no no yes good serviceName and displayText MUST yes yes yes yes no select correct VC SHOULD yes yes yes no no display last authentication details SHOULD yes yes yes yes yes display history of operations SHOULD yes yes yes yes yes display generic error messages MUST yes yes yes yes no include details in displayText MUST yes yes yes no no ask for non-public id SHOULD yes yes yes yes no track trusted browsers SHOULD yes no yes yes no track suspicious IP-addresses SHOULD yes yes yes yes yes monitor e-service usage MUST yes yes yes yes yes respond to incidents MUST yes yes yes yes yes This table gives an overview of security measure relations to the described threats. In case there’s a direct mitigation effect and the measure helps to prevent the attack, the cell has \"yes\". In case the effect is not as strong or in case the security measure only helps to detect the attack, the cell has \"some\". In case there’s no relation, the cell has \"no\". Security measure Login by mistake User annoyance DOS against RP User data mining Phishing with proxy website Social engineering over the phone secure TLS-CCA no no no no some no good serviceName and displayText yes no no no some some select correct VC yes no no no no no display last authentication details some no no no some some display history of operations some no no no some some display generic error messages no some some some some some include details in displayText some no no no yes yes ask for non-public id yes yes yes yes no some track trusted browsers some no no no some no track suspicious IP-addresses some some some some some no monitor e-service usage no some some some some some respond to incidents yes yes yes yes yes yes If RP uses TLS Client Certificate Authentication (TLS-CCA) with smart-cards, issued by Estonian government as identity cards, it is important to implement the authentication securely. RP must implement the following checks and controls. Using simple means just to include a number of CA certificates in the TLS server configuation is not enough. SK ID Solutions uses many CAs and TLS server needs information about them all in order to build trust chains. However, not all of the CAs are used to issue ID-card certificates and this information needs to be manually added. It is important to explicitly specify, which CA-s are trusted to issue the certificates for the CCA authentication and which CAs are not trusted to do that. For example the OpenSSL utility can be used for that: cd /path/to/trusted_certificates_directory/ wget https://c.sk.ee/EE-GovCA2018.pem.crt wget https://www.sk.ee/upload/files/EE_Certification_Centre_Root_CA.pem.crt wget https://c.sk.ee/esteid2018.pem.crt ... openssl x509 -addreject clientAuth -trustout -in EE-GovCA2018.pem.crt -out EE-GovCA2018_trusted.pem.crt openssl x509 -addreject clientAuth -trustout -in EE_Certification_Centre_Root_CA.pem.crt -out EE_Certification_Centre_Root_CA_trusted.pem.crt openssl x509 -addtrust clientAuth -trustout -in esteid2018.pem.crt -out esteid2018_trusted.pem.crt ... rm EE-GovCA2018.pem.crt rm EE_Certification_Centre_Root_CA.pem.crt rm esteid2018.pem.crt Note that it is important to include the certificate of root CAs and implicitly configure clientAuth reject for them. When configuring Apache in this way, it is also neccessary to use the SSLCADNRequestPath directive, which specifies the list of acceptable CA-s, which are sent to the client over the TLS handshake. cd /path/to/client_request_CAs_directory/ wget https://c.sk.ee/esteid2018.pem.crt openssl rehash /path/to/client_request_CAs_directory/ After specifying trust settings for individual certificates, allow TLS server to only trust these CAs and to request specific certificates from clients (configuration example is given for Apache mod_ssl): #... SSLEngine on SSLCertificateFile ... SSLCertificateKeyFile ... SSLCACertificatePath /path/to/trusted_certificates_directory/ SSLCADNRequestPath /path/to/client_request_CAs_directory/ #... Web-eID provides authentication using a custom protocol instead of TLS CCA. When implementing it adhere to the requirements and configuration outlined in the documentation. Web-eID validation libraries handle correct verification of ID-card certificates on your behalf. Keeping the Web-eID software libraries updated is critical. https://web-eid.eu/ SK Identity Solutions provides OCSP service to check for the validity of issued certificates. More details are available at https://www.skidsolutions.eu/en/services/validity-confirmation-services/ Configuration example is given for Apache mod_ssl: #... SSLEngine on SSLOCSPEnable leaf SSLOCSPDefaultResponder \"http://responder.example.com:8888/responder\" SSLOCSPOverrideResponder on #... It is important to only accept these certificates, which correspond to production ID-cards, Digi-ID and other identity documents. An attacker could present other certificates as well and in some cases this might lead to a vulnerability. Issuance policy is recorded in the certificate extension X509v3 Certificate Policies and contains an OID identifier. Identifier values of issuance policies are listed at the page https://www.skidsolutions.eu/en/repository/CP/ and https://www.skidsolutions.eu/upload/files/SK-CPR-ESTEID2018-EN-v1_2_20200630.pdf. Following table compiles a helpful list of policies relevant to accept in the TLS-CCA authentication sessions. Name of the CP Issuing CA OID value (authentication certificate) CP for newer ID-card of Estonian citizen ESTEID2018 1.3.6.1.4.1.51361.1.1.1 CP for newer ID-card of EU citizen ESTEID2018 1.3.6.1.4.1.51361.1.1.2 CP for newer Digi-ID ESTEID2018 1.3.6.1.4.1.51361.1.1.3 CP for digital identity card of e-resident ESTEID2018 1.3.6.1.4.1.51361.1.1.4 CP for residence card of long-term resident ESTEID2018 1.3.6.1.4.1.51361.1.1.5 CP for residence card of temporary resident ESTEID2018 1.3.6.1.4.1.51361.1.1.6 CP for residence card of family members of citizen of EU ESTEID2018 1.3.6.1.4.1.51361.1.1.7 CP for diplomatic identity card ESTEID2018 1.3.6.1.4.1.51455.1.1.1 Unfortunately, filtering is not possible with only a TLS-server configuration. RP would need to export the full client certificate from the TLS session to the application server and then apply filtering with PHP or other applications. Configuration example with Apache mod_ssl: #... SSLEngine on #... SSLOptions +ExportCertData #... and source code example with PHP: $cert = getenv('SSL_CLIENT_CERT'); $x509 = openssl_x509_parse($cert); $certificatePolicies = 'Policy: 1.3.6.1.4.1.51361.1.1.1'; if(preg_match(\"/$certificatePolicies$/m\", $x509['extensions']['certificatePolicies']) == 0) { echo \"OK\\n\"; } Note that demo code examples only use a single OID value. Production systems would have to use the whole table. It is important to only accept these certificates, which have the \"TLS Web Client Authentication\" extension and are issued by trusted CAs. Partial configuration example for Apache: #... <Location \"/\"> Require expr \"TLS Web Client Authentication, E-mail Protection\" in PeerExtList('extendedKeyUsage') </Location> #... and partial configuration example for F5 BIG-IP loadbalancer: when CLIENTSSL_CLIENTCERT { HTTP::release if { [SSL::cert count] < 1 } { reject } set client_cert [SSL::cert 0] set clientCA [X509::cert_fields $client_cert [SSL::verify_result] issuer ] #If issuer contains \"-SK 20\" assume it is a SK certificate and process further if {($clientCA contains \"-SK 20\") } { if {($clientCA contains \"ESTEID-SK 20\") } { #If issued by ESTEID check if it is mobile-id or not, mobile-ID profile doesn't have TLS web auth enabled if { !([X509::extensions $client_cert] contains \"TLS Web Client Authentication\") } { log local0. \"Invalid certificate used for authentication, IP: [IP::client_addr], Issued by: $clientCA\" reject } } else { #Not issued by ESTEID, shouldn't allow TLS auth log local0. \"Invalid certificate used for authentication, IP: [IP::client_addr], Issued by: $clientCA\" reject } } } serviceName is a short text string, displayed to the user in the Mobile-ID/Smart-ID authentication or digital signature consent dialog. It helps user to verify that the request is coming from a trusted source. serviceName will be displayed on the top of the consent screen, in bold letters. SK ID Solutions have established basic requirements that serviceName should contain one of the following: name of the company, a DNS domain which your website is using, a registered trademark, associated with the website or app, which the user is interacting with, a brand name, associated with the website or app, which the user is interacting with. Generic serviceName, which does not help user to distinguish between different RP-s, are not accepted (such as \"login\", \"authentication\", etc). displayText is a short text string, displayed to the user in the Mobile-ID or Smart-ID authentication or digital signature consent dialog. It helps the user understand the context of the operation. displayText will be displayed on the authentication or signing consent screen, under the verification code number. The RP can use this to distinguish between the different information systems or different services within the RP, when requesting the authentication. When requesting a digital signature, the RP can use this to give information about the nature of signature, such as the name of the document to be signed or information about the transfer order to be executed. For example, in case the RP is using Mobile-ID or Smart-ID to authenticate users, who are calling the RP’s helpdesk via phone, these authentication requests must use different displayText than requests sent by the RP’s website. This way the user has greater confidence, that the person on the phone (a helpdesk agent, who might be out-sourced from an external company) is not logging into the website of the RP under the name of the user. With signing operations, there’s also possibility to use much longer and descriptive displayText. For more details, see section Defence: show details of transactions in the displayText. At the basic security level, Smart-ID is using a 4-digit verification code, which is displayed to a user on the RP’s website and on the Smart-ID app. The user is expected to match these and thus verify they consent to the correct authentication or signature request. At more advanced security level, the RP can request the Smart-ID app should display three verification codes (one correct code and two random codes) and the user is required to select the correct code, which is displayed by the RP’s website or app. In case the user doesn’t choose the correct code, the Smart-ID app aborts the request. This can be requested in the Smart-ID RP API call using the verificationCodeChoice interaction type. More information in the API documentation: https://github.com/SK-EID/smart-id-documentation/tree/v2 In case the RP is using an app it is recommended to include a small delay after showing the verification code to user and before starting the transaction on the RP-API. This way, the user has additional time to look at the verification code on the RP’s app, before the screen of the Smart-ID app is displayed. In order to increase trust and confidence in users, it is useful to show details of the last successful session. The RP must prominently display the information about the last authentication, including such elements: Date and time of the last successful authentication. Geographic location (country) of the last successful authentication. Short human readable description of the browser last used for successful authentication (such as \"Chrome on Windows\", \"Safari on Mac\"), deduced from the browser’s user-Agent header. This will help users to recognise the last login details and increase their confidence that nobody else has accessed their account after their last login. If they don’t recognise the last session, the user can contact the RP’s user support and raise the alarm. With password-based authentication systems, it was a good practice (https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#authentication-responses) to show same error message for two cases: username was incorrect and the account didn’t exist, and username was correct, but the password was incorrect. This helps to prevent the user account enumeration (WSTG-IDNT-04). With Mobile-ID and Smart-ID services, following the same principle helps to prevent data mining for attack preparation. It also makes some phishing attacks more difficult. Mobile-ID RP API and Smart-ID RP API return different error codes to help debuging: Mobile-ID RP API, HTTP 200, \"result\": \"NOT_MID_CLIENT\" — \"Given user has no active certificates and is not MID client\" Smart-ID RP API, HTTP 404 — \"object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system\" Smart-ID RP API, HTTP 471 — \"No suitable account of requested type found, but user has some other accounts\" However, it is the reponsibility of the RP not to show different UI messages for those cases, but to follow generic, uniform pattern: Request new authentication session from the Mobile-ID or Smart-ID API with the user identifier. In case the API responded with the new authentication session: Display the text \"Authentication session started, verification code 1234\" with the value of the verification code given by Mobile-ID or Smart-ID API In case the authentication is successful, continue with the login In case the authentication session is timed out after 120 seconds, show the error message \"User account not found or user didn’t responded in time\" In case the API responded with \"NOT_MID_CLIENT\" or \"HTTP 404\" or \"HTTP 471\": Generate random verification code value Display the text \"Authentication session started, verification code 1234\" Wait for 120 seconds and then show the error message \"User account not found or user didn’t responded in time\" Good design of the website should include a way for a user to see the history of their actions. For example when the user logged in, what operations the user has executed, what orders the user has placed and so on. This provides the user visibility and transparency about what is happening on the user’s account. It also provides an opportunity to see actions or operations the user doesn’t recognise and that could point to security incidents. On the other hand, when the user does recognise all the history, it will increase the trust in the website and services of the RP. Also, the RP must allow the user to download digitally signed documents that were created after entering PIN2. This applies to any operation that uses PIN2 for additional consent. For example, after signing the terms and conditions for the e-service or when signing a transfer order on the RP’s website the user must be allowed to download the signed document. This allows the signer to verify contents of the signed document. displayText is a short text string, displayed to a user in the Smart-ID signing consent dialog that helps the user understand the context of the operation. There are two options for the string length of the displayText: short displayText string can be up to 60 characters and it will be displayed as a single line below the verification code, on the same screen as the keypad for entering PIN2. longer displayText string can be up to 200 characters and it will be displayed on a separate screen to gain the user’s attention. In case there’s an advanced phishing attack in progress and an attacker is presenting a modified website to the user, with the modified operation details, such as destination account number of the transfer order, the user cannot detect the attack solely with the user’s browser. However, the string of the displayText is coming directly from the RP and the attacker cannot modify it to deceive the user. This way, the RP can use a secondary authentic channel to allow the user to verify and confirm the operation. A common way to start the Mobile-ID or Smart-ID authentication is to ask for a user identifier, either the phone number or national identity number. However, these numbers are not secret and even though they are not outright published, there are ways for an attacker to obtain the national identity number of the user and start authenticating on their behalf. It is also possible for the attacker to create automated scripts to simply generate a list of numbers and try them all to start many authentication sessions under the name of multiple users. A better approach is to ask for an additional identifier. With Mobile-ID, a good option is to ask for both phone number and national identity number. The Mobile-ID API verifies that those identifiers match with each other and doesn’t initiate the authentication session otherwise. With Smart-ID, a good option is to ask for national identity number and some not-so-public identifier as well. It could be a username, which the users can select by themselves, the account contract number or something else only the user knows and is convenient for them to remember and type. A useful security measure is to keep track of trusted browser instances for each user. This allows the RP to take different actions whether the user is connecting from their usual (trusted) browser or attempting to login from a previously unseen, unknown browser. In case of the latter an attacker may be attempting a phishing attack and the RP could ask for more information or alert the user. The tracking should be done with the HTTP cookie (or with similar client-side storage feature supported by modern browsers) with the content of randomly generated identifier. The status of each browser instance for the user is then tracked in the RP’s website database. The fact about placing such a cookie in the browser of the user must be declared in the public cookie policy. The browser cookie has to be set with Secure and HttpOnly flags. The scope of the cookie has to be the URL of the RP’s website. In case of a phishing attack, the proxied website will be setup on a different URL and the browser will not send the value of that cookie to the attacker’s website. Therefore, the attacker cannot pose to the RP’s website as the trusted browser. In order to manage the data associated with the tracking, each user account must have the following extra data for each browser which the user has connected from in the past: displayName — Human recognisable description of the browser, like \"Chrome on Windows\" or \"Safari on my work Mac\", etc. Simple names with tolerable errors could be generated automatically from the browser’s User-Agent header with the help of software libraries and toolkits. The RP could also allow the user to edit this field, so that the user can provide their own meaningful names. lastSeen — Timestamp, when that browser was last used by the user to connect to the RP’s website. hashedTrackingID — Hashed value of the randomly generated identifier. Length of the identifier should be at least 32 bytes. The Base64 encoded clear-text value of the identifier is placed in the browser’s cookie and the hashed value is stored in the database. Storing only hashed values makes the database leak less dangerous. Salting hashes, a common practice when when storing passwords, is not required, because trackingID is already long enough with random bytes and additional protection against brute-forcing is not essential. trustLevel — Information about whether that browser instance could be considered trusted or not. Proposed algorithm uses values \"seenOnce\", \"seenTwice\" and \"trusted\". The RP could use more levels if required. Note that in case multiple users are using the same browser instance then the same hashedTrackingID value will be stored for multiple user accounts. Care must be taken to lookup the correct record, based on the user account, which is starting the authentication. A general algorithm to keep track of the browsers and to manage the trustLevel is described below. When the user navigates with the browser to the RP’s website and requests the Smart-ID authentication, the following cases are possible: If the connecting browser’s trustLevel is not known (i.e. the browser didn’t send the cookie value or the cookie value doesn’t match any value of hashedTrackingID in the user’s account) and the user doesn’t have any other browser’s trustLevel as \"trusted\", proceed with the authentication as usual. After the successful authentication, the RP should update the browser’s trustLevel as \"seenOnce\". If the connecting browser’s trustLevel is not known and the user already has at least one other browser as \"trusted\", then the situation indicates a possible phishing attack. The RP should perform additional checks and controls. If the connecting browser’s trustLevel is \"trusted\", then the RP should proceed with the authentication. The situation indicates somewhat lower risk and the RP could decide not to execute some security measures, which are required otherwise, for example, asking the user to enter multiple identifiers. After successful authentication, the RP should update the lastSeen timestamp. If the connecting browser’s trustLevel is \"seenOnce\", then the RP should proceed with the authentication as usual. After the successful authentication, if the lastSeen timestamp was older than 24 hours, the browser’s trustLevel will be updated as \"seenTwice\". If the connecting browser’s trustLevel is \"seenTwice\", then the RP should proceed with the authentication as usual. After the successful authentication, if the lastSeen timestamp was older than 24 hours, the browser’s trustLevel will be set as \"trusted\". The described algorithm can be implemented and silently deployed by the RP without any additional security measures or checks actually performed in the first phase. Those browsers, which are regularly used by users, will eventually move to the \"trusted\" classification. In the next phase, additional security measures could be put into place and when the new connection is being made from an unknown browser, additional security measures will kick in and protect users. The following sections describe such additional security measures. When the RP detects that a user has started authenticating from a known browser, the RP could withhold the requirement to ask for multiple user identifiers. Good simplification is to only require one identifier, such as the username of the user. After the username is entered on the RP’s website, the RP can lookup the user’s account information from the internal database and then initiate the Smart-ID authentication with the national identity number. However, when the RP detects the user has started an authentication session from an unknown browser, while he usually connects to the website from a different browser, the RP can ask for additional details from the user, to verify that it is indeed the user who is starting the authentication. Such details could be to the national identity number or something else, which the user knows, but the attacker might not know. When the RP detects that a user has started authentication from an unknown browser, while he usually connects to the website from a different browser, the RP can use the longer displayText and send an alert to the user. The alert would be sent in the same authentication session request as usual, but it will be displayed on a separate screen to the user during the authentication consent dialog. The RP could use a message, such as: \"Authentication started from an unknown browser. Are you using a new computer?\", or \"It seems that you are not using your regular browser. Are you using a new computer and are you sure that you are on the correct website www.example-rp.com?\" or something similar. The message will be displayed on a separate screen from the usual PIN1 entry dialog and the user will be asked to either confirm or cancel. In case the user is really connecting from a new computer and is aware of this, they can press \"Confirm\". The authentication then proceeds, the user can enter PIN1 and the user’s browser will be logged in to the user’s account. However, if this comes to the user as a surprise and the user is actually using their regular computer, the user can press \"Cancel\" and investigate further. When a user connects to the RP’s e-service, either with a browser or with the RP’s app, it connects from the IP-address of the user’s device. In case an attacker makes the connection by itself or in case the attacker proxies the connection, the RP will see the attacker’s IP-address. There are commercial services, which provide the general information about IP-addresses. For example, they can tell if the IP-address is known to be used for the following: Sending spam messages, which may indicate the user connecting from such an IP-address might be using a compromised computer. Is known to be an open HTTP proxy host, which may indicate the user connecting from such an IP-address might be using a compromised computer or that the attacker is using this host to proxy their connection to the RP’s website. Is known to be used as a TOR exit node or an anonymising VPN service, which may indicate that the attacker could be using this to hide their connection to the RP’s website. Is known to be an IP-address of a hosting provider, data-centre or content delivery network. This may indicate that the requests coming from such IP-addresses are used to perform denial of service or data mining attack. In addition to such commercial services, the RP’s own incident resolution team or security monitoring team could provide a list of IP-addresses that are related to known incidents or suspicious activities. The following sections describe possible actions to take when there’s suspicion of an attack. RP can use the longer displayText and send an alert to the user. RP could use a message text, such as \"Authentication started from an IP-address with open proxy service. Are you sure that you are on the correct website www.example-rp.com?\", or something similar. The message will be displayed on a separate screen from the usual PIN1 entry and the user will be asked to either confirm or cancel. There could be legitimate reasons why the user is using such IP-address or VPN service and if the user is aware of this, they can press \"Confirm\". However, if this comes to the user as a surprise, the user can press \"Cancel\" and investigate further. In case the source IP-address is used to send many authentication requests and there’s suspicion that a denial of service attack is in progress, RP can perform additional verification on the browser with a CAPTCHA. This can slow down the attackers and forces them to change their scripts and tactics. In case the source IP-address is associated with a previous fraud case and is known to be malicious, the RP can block this connection and deny service. The RP must first record enough information about connections and operations users regularly attempt on the RP’s website. It is then possible to apply log analysis and other security intelligence to the available information (and cross-reference with other data sources) to deduce with some certainty: there is an ongoing attack; some source (IP-address, browser, phone number, e-mail address) behaves in a weird way and perhaps should be more closely monitored or added to the list of suspicious IP-addresses or malicious IP-addresses; some logs might indicate that there’s an unknown vulnerability in the RP’s website. Procedures to respond to fraud and security incidents must be developed and communicated and practiced within the RP organization. When it is known that the RP responds quickly to attacks and attackers are caught by the law enforcement it also acts as a deterrent to future attackers. The RP must be familiar with services and guidelines from law enforcement authorities and other bodies. It is useful to establish contacts with these organisations before the urgent need arises. Good opportunity to do that is to participate in exercise sessions with the local cyber defence league unit. Some security measures described in this document require processing additional data about users (for example, which IP-addresses they have used) and require placing additional information on their browser cookies. This means that the RP must re-evaluate their personal data processing guidelines and public policies. For using cookies a cookie consent must be asked from the data subject and the information about using such cookie must be declared in the public cookie policy. For processing personal data the RP must make sure that they have a lawful basis for doing so (see GDPR art 6(1)). In case the processing is likely to result in a high risk to the rights and freedoms of data subjects a data protection impact assessment (DPIA) must be carried out. It is also useful to review the RP’s privacy policy and update it with relevant information.","title":"Secure Implementation Guide","component":"rp-api","version":"3.0.3","name":"secure","url":"/rp-api/3.0.3/secure.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. Terms and concepts","hash":"_terms_and_concepts","id":2},{"text":"1.2. Feedback","hash":"_feedback","id":3},{"text":"2. Threats and attacks","hash":"_threats_and_attacks","id":4},{"text":"2.1. User mistakes","hash":"_user_mistakes","id":5},{"text":"2.1.1. Risk: Login by mistake","hash":"_risk_login_by_mistake","id":6},{"text":"2.2. Harassment and coercion attacks","hash":"_harassment_and_coercion_attacks","id":7},{"text":"2.2.1. Attack: User annoyance","hash":"_attack_user_annoyance","id":8},{"text":"2.2.2. Attack: Denial of service attack against RP","hash":"_attack_denial_of_service_attack_against_rp","id":9},{"text":"2.3. Data leaks","hash":"_data_leaks","id":10},{"text":"2.3.1. Attack: User data mining","hash":"_attack_user_data_mining","id":11},{"text":"2.4. Phishing attacks","hash":"_phishing_attacks","id":12},{"text":"2.4.1. Attack: Phishing with fully automated website","hash":"_attack_phishing_with_fully_automated_website","id":13},{"text":"2.4.2. Attack: Social engineering over phone","hash":"_attack_social_engineering_over_phone","id":14},{"text":"3. Security measures for RPs","hash":"_security_measures_for_rps","id":15},{"text":"3.1. Effectiveness of proposed security measures","hash":"_effectiveness_of_proposed_security_measures","id":16},{"text":"3.1.1. Requiredness and applicability","hash":"_requiredness_and_applicability","id":17},{"text":"3.1.2. Mitigation of threats","hash":"_mitigation_of_threats","id":18},{"text":"3.2. Defence: implement ID-card authentication securely","hash":"_defence_implement_id_card_authentication_securely","id":19},{"text":"3.2.1. Explicitly trust and reject CA certificates","hash":"_explicitly_trust_and_reject_ca_certificates","id":20},{"text":"3.2.2. ID-card authentication using Web-eID","hash":"_id_card_authentication_using_web_eid","id":21},{"text":"3.2.3. Use OCSP to check for the validity of certificate","hash":"_use_ocsp_to_check_for_the_validity_of_certificate","id":22},{"text":"3.2.4. Only accept certificates with trusted issuance policy","hash":"_only_accept_certificates_with_trusted_issuance_policy","id":23},{"text":"3.2.5. Only accept certificates with trusted key usage","hash":"_only_accept_certificates_with_trusted_key_usage","id":24},{"text":"3.3. Defence: use distinguishing and well-known serviceName and displayText","hash":"_defence_use_distinguishing_and_well_known_servicename_and_displaytext","id":25},{"text":"3.4. Defence: ask users to select correct verification code with Smart-ID app","hash":"_defence_ask_users_to_select_correct_verification_code_with_smart_id_app","id":26},{"text":"3.5. Defence: display information about last authentication to users","hash":"_defence_display_information_about_last_authentication_to_users","id":27},{"text":"3.6. Defence: display generic error messages","hash":"_defence_display_generic_error_messages","id":28},{"text":"3.7. Defence: show history of operations on the website","hash":"_defence_show_history_of_operations_on_the_website","id":29},{"text":"3.8. Defence: show details of transactions in the displayText with Smart-ID","hash":"_defence_show_details_of_transactions_in_the_displaytext_with_smart_id","id":30},{"text":"3.9. Defence: ask for multiple or non-public user identifiers","hash":"_defence_ask_for_multiple_or_non_public_user_identifiers","id":31},{"text":"3.10. Defence: keep track of trusted and unknown browsers","hash":"_defence_keep_track_of_trusted_and_unknown_browsers","id":32},{"text":"3.10.1. Description","hash":"_description","id":33},{"text":"3.10.2. Algorithm","hash":"_algorithm","id":34},{"text":"3.10.3. Ask national identity number when connecting from unknown browser","hash":"_ask_national_identity_number_when_connecting_from_unknown_browser","id":35},{"text":"3.10.4. Alert user with Smart-ID when connecting from an unknown browser","hash":"_alert_user_with_smart_id_when_connecting_from_an_unknown_browser","id":36},{"text":"3.11. Defence: keep track of suspicious and malicious IP-addresses","hash":"_defence_keep_track_of_suspicious_and_malicious_ip_addresses","id":37},{"text":"3.11.1. Alert user with Smart-ID when connecting from suspicious IP-address","hash":"_alert_user_with_smart_id_when_connecting_from_suspicious_ip_address","id":38},{"text":"3.11.2. Verify human users with connections from suspicious IP-addresses","hash":"_verify_human_users_with_connections_from_suspicious_ip_addresses","id":39},{"text":"3.11.3. Block connections from malicious IP-addresses.","hash":"_block_connections_from_malicious_ip_addresses","id":40},{"text":"3.12. Defence: carefully monitor website usage","hash":"_defence_carefully_monitor_website_usage","id":41},{"text":"3.13. Defence: respond swiftly and decisively to security incidents","hash":"_defence_respond_swiftly_and_decisively_to_security_incidents","id":42},{"text":"4. Personal data processing","hash":"_personal_data_processing","id":43}]},"16":{"id":16,"text":"There are two main modes of signature session and Relying Party must choose carefully between them. They look like the ones used in case of the authentication session, but there are important differences. Signature by document number. This is the main and common usage scenario. Document number can be obtained from result of certificatechoice session or previous authentication session result. Signatures utilizing any of the *AdES signature schemes that include the certificate as part of signature must use this method. Otherwise, the signature may be given by the person specified, but not using the key pair corresponding to the certificate chosen by Relying Party. Signature by person’s identifier. This method should only be used if it is acceptable that the end user gives the signature using any of the Smart-ID devices in their possession. signature session creation requests accept QSCD (Qualified Signature Creation Device) as a certificate level parameter. This is a shortcut marking a certificate of QUALIFIED level which is also QSCD-capable. ADVANCED certificates cannot be QSCD-capable. The signature protocol RAW_DIGEST_SIGNATURE must be used for signing. Signing endpoints Method URL POST BASE/v3/signature/dynamic-link/etsi/:id-etsi-qcs-SemanticsId-Natural POST BASE/v3/signature/dynamic-link/document/:documentnumber This method is the main entry point to signature logic for the dynamic link based flows. HTTP error code 403 - Relying Party has no permission to issue the request. This may happen when: Relying Party has no permission to invoke operations on accounts with ADVANCED certificates. Relying Party has no permission to use requested capability. HTTP error code 404 - object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system. Dynamic link based signature request parameters Parameter Type Mandatory Description relyingPartyUUID string + UUID of Relying Party. relyingPartyName string + RP friendly name, one of those configured for particular RP. Limited to 32 bytes in UTF-8 encoding. certificateLevel string Level of certificate requested. ADVANCED/QUALIFIED/QSCD, QUALIFIED. signatureProtocol string + Signature protocol. Describes the signatureProtocolParameters object. Currently, the only allowed value is: RAW_DIGEST_SIGNATURE - scheme where user-provided digest is signed directly (similarly to RP-API v1 and v2). For more details see section RAW_DIGEST_SIGNATURE. signatureProtocolParameters object + An object describing the parameters for the signature algorithm. Its structure depends on the signatureProtocol used. See RAW_DIGEST_SIGNATURE parameters table. allowedInteractionsOrder array of objects + See section available interactions. nonce string Random string, up to 30 characters. If present, must have at least 1 character. requestProperties object A request properties object. Currently, only one property is supported: shareMdClientIpAddress - Whether the RP API server should share user mobile device IP address with the RP. By default it is set to false. The RP must have proper privilege to use this property. See section IP sharing for details. capabilities array Used only when agreed with Smart-ID provider. When omitted request capabilities are derived from certificateLevel parameter. Dynamic link based signature request example { \"relyingPartyUUID\": \"1f1bfa89-4f8b-420a-a98e-fb3a161a30bc\", \"relyingPartyName\": \"DEMO\", \"certificateLevel\": \"QUALIFIED\", \"signatureProtocol\": \"RAW_DIGEST_SIGNATURE\", \"signatureProtocolParameters\": { \"digest\": \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" }, \"nonce\": \"d8XkbEnA0WsE0PvBZZoxGnPI4ml9qk\", \"allowedInteractionsOrder\": [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" }, { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ], \"requestProperties\": { \"shareMdClientIpAddress\": false } } Dynamic link based signature session creation response parameters Parameter Type Mandatory Description sessionID string + A string that can be used to request the operation result. sessionToken string + Unique random value that will be used to connect this signature attempt between the relevant parties (RP, RP-API, mobile app). sessionSecret string + Base64-encoded random key value that should be kept in secret and should be shared only between the RP backend and RP-API server. Dynamic link based signature session creation response { \"sessionID\": \"de305d54-75b4-431b-adb2-eb6b9e546014\", \"sessionToken\": \"hyBdQYUeQtvXEPqWC7K8a97L\", \"sessionSecret\": \"dztL7Ur49D/YYgUzYl4sMg==\" } Signing endpoints Method URL POST BASE/v3/signature/notification/etsi/:id-etsi-qcs-SemanticsId-Natural POST BASE/v3/signature/notification/document/:documentnumber This method is the main entry point to signature logic for the notification based flows. In order to improve security and prevent phishing attacks, it is recommended to only allow notification based flows on devices and browsers that have successfully completed a dynamic link based flow. Setting up a unique device identifier is left to the RP to implement. HTTP error code 403 - Relying Party has no permission to issue the request. This may happen when: Relying Party has no permission to invoke operations on accounts with ADVANCED certificates. Relying Party has no permission to use requested capability. HTTP error code 404 - object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system. Notification based signature request parameters Parameter Type Mandatory Description relyingPartyUUID string + UUID of Relying Party. relyingPartyName string + RP friendly name, one of those configured for particular RP. Limited to 32 bytes in UTF-8 encoding. certificateLevel string Level of certificate requested. ADVANCED/QUALIFIED/QSCD, QUALIFIED. signatureProtocol string + Signature protocol. Describes the signatureProtocolParameters object. Currently, the only allowed value is: RAW_DIGEST_SIGNATURE - scheme where user-provided digest is signed directly (similarly to RP-API v1 and v2). For more details see section RAW_DIGEST_SIGNATURE. signatureProtocolParameters object + An object describing the parameters for the signature algorithm. Its structure depends on the signatureProtocol used. See RAW_DIGEST_SIGNATURE parameters table. nonce string Random string, up to 30 characters. If present, must have at least 1 character. allowedInteractionsOrder object + See section available interactions. requestProperties object A request properties object. Currently, only one property is supported: shareMdClientIpAddress - Whether the RP API server should share user mobile device IP address with the RP. By default it is set to false. The RP must have proper privilege to use this property. See section IP sharing for details. capabilities array Used only when agreed with Smart-ID provider. When omitted request capabilities are derived from certificateLevel parameter. Notification based signature request example { \"relyingPartyUUID\": \"1f1bfa89-4f8b-420a-a98e-fb3a161a30bc\", \"relyingPartyName\": \"DEMO\", \"certificateLevel\": \"QUALIFIED\", \"signatureProtocol\": \"RAW_DIGEST_SIGNATURE\", \"signatureProtocolParameters\": { \"digest\": \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" }, \"nonce\": \"d8XkbEnA0WsE0PvBZZoxGnPI4ml9qk\", \"allowedInteractionsOrder\": [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" }, { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ], \"requestProperties\": { \"shareMdClientIpAddress\": false } } Notification based signature session creation response parameters Parameter Type Mandatory Description sessionID string + A string that can be used to request the operation result. vc string + Object describing the VC code to be displayed by RP. See section VC codes. vc.type string + Type of the VC code. Currently, the only allowed type is alphaNumeric4. Note that the type is \"alphaNumeric4\" to refer to the fact that in the future the 4-symbol code might also contain letters. For the time being, only numeric values are returned for technical reasons. This may change in the future, so RPs should make no assumptions about it containing numeric data only! vc.value string + Value of the VC code. Notification based signature session creation response { \"sessionID\": \"ce305d54-45b4-a31b-2db2-fb6b9e546015\", \"vc\": { \"type\": \"alphaNumeric4\", \"value\": \"4927\" } }","title":"signature session","component":"rp-api","version":"3.0.3","name":"signature_session","url":"/rp-api/3.0.3/signature_session.html","titles":[{"text":"Dynamic link based signature session","hash":"_dynamic_link_based_signature_session","id":1},{"text":"Error conditions","hash":"_error_conditions","id":2},{"text":"Request parameters","hash":"_request_parameters","id":3},{"text":"Response structure","hash":"_response_structure","id":4},{"text":"Notification based signature session","hash":"_notification_based_signature_session","id":5},{"text":"Error conditions","hash":"_error_conditions_2","id":6},{"text":"Request parameters","hash":"_request_parameters_2","id":7},{"text":"Response structure","hash":"_response_structure_2","id":8}]},"17":{"id":17,"text":"The RP API’s main use case is to provide digital signatures which is enabled by use of signature protocols. The signature protocol ACSP_V1 is used for authentication requests and RAW_DIGEST_SIGNATURE signature protocol for signing. Authentication Context Signature Protocol version 1 makes the signature non-replayable by adding a server-side component to the signed object. The RP must provide the digest algorithm to use as well a challenge it needs signed. The challenge must be generated anew for every single authentication request. It must be remembered by the RP for the duration of the authentication session, and later it is used to reconstruct and validate the signed authentication data structure. The recommended way of generating the challenge this is to use the Java SecureRandom class[1] or equivalent method in other programming languages, to generate a random value for each new authentication request. The value of the randomChallenge must be kept in the current user’s session on the backend for later use in response validation. Signature protocol parameters for authentication request with signature protocol ACSP_V1 Parameter Type Mandatory Description randomChallenge string + A random value which is calculated by generating random bits with size in the range of 32 bytes …​ 64 bytes and applying Base64 encoding (according to rfc4648). It is generated per each authentication session in the RP backend. See above for details. signatureAlgorithm string + Digital signature algorithm name. See here for supported signature algorithms. The following table describes the signature body for ACSP_V1 protocol that the RP will receive in the session response. Notice that the actual object that was signed is not present — it needs to be compiled by the RP using the previously sent randomChallenge and the serverRandom returned in this response. This re-constructed object is then used to validate the signature. Signature body for ACSP_V1 in session response Parameter Type Mandatory Description value string + Signature value, base64 encoded. serverRandom string + A random value of 24 or more characters from Base64 alphabet, which is generated at RP API service side. RP must validate that the value contains only valid Base64 characters, and that the length is not less than 24 characters. This value will be returned from RP API and RelyingParties must use it exactly as it was returned during the validation of signature. There are not any guarantees that the returned value length is the same in each call of the RP API. signatureAlgorithm string + Digital signature algorithm name. This is a reference name to algorithm defined in some Public-Key cryptography standards. See here for supported signature algorithms. ACSP_V1 signature sample { \"signatureProtocol\": \"ACSP_V1\", \"signature\": { \"value\": \"B+A9CfjIBZnDHHav3B4F...\", \"serverRandom\": \"B+C9XVjIAZnCHH9vfBSv...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" } } To verify the signature.value the RP client must reconstruct its input digest (hash) and calculate it themselves. The digest is calculated over the concatenation of the signatureProtocol, the Base64 encoded serverRandom and the Base64 encoded randomChallenge separated by semicolons: digest(signatureProtocol + \";\" + serverRandom + \";\" + randomChallenge) Note that signature.serverRandom in the response and the randomChallenge in the initial request are already Base64 encoded. The signature algorithm that was used to generate the signature based on the digest is specified in signature.signatureAlgorithm. Full verification of the signature and response is described in Response verification. The RAW_DIGEST_SIGNATURE signature protocol allows direct signing of the digest that is requested by the RP. The RP must provide the digest algorithm to use as well the digest hash that is being signed. In case an electronic signature is being created this is calculated from the electronic signature container. Signature protocol parameters for signing request with signature protocol RAW_DIGEST_SIGNATURE Parameter Type Mandatory Description digest string + Base64 encoded digest to be signed (RFC 4648). signatureAlgorithm string + Digital signature algorithm name. This is a reference name to algorithm defined in some Public-Key cryptography standards. See here for supported signature algorithms. The following table describes the signature body for the RAW_DIGEST_SIGNATURE protocol that the RP will receive in the session response. Signature body for RAW_DIGEST_SIGNATURE in session response Parameter Type Mandatory Description value string + Signature value, base64 encoded. signatureAlgorithm string + Digital signature algorithm name. This is a reference name to algorithm defined in some Public-Key cryptography standards. See here for supported signature algorithms. RAW_DIGEST_SIGNATURE signature { \"signatureProtocol\": \"RAW_DIGEST_SIGNATURE\", \"signature\": { \"value\": \"B+A9CfjIBZnDHHav3B4F...\", \"signatureAlgorithm\": \"sha512WithRSAEncryption\" } } Supported signature algorithms Algorithm Description sha256WithRSAEncryption Secure Hash Algorithm 256 (SHA-256) with Rivest, Shamir and Adleman (RSA) encryption RFC8017, Appendix A.2.4, OID 1.2.840.113549.1.1.11. sha384WithRSAEncryption Secure Hash Algorithm 384 (SHA-384) with Rivest, Shamir and Adleman (RSA) Encryption RFC8017, Appendix A.2.4, OID 1.2.840.113549.1.1.12. sha512WithRSAEncryption Secure Hash Algorithm 512 (SHA-512) with Rivest, Shamir and Adleman (RSA) encryption RFC8017, Appendix A.2.4, OID 1.2.840.113549.1.1.13. Smart-ID supports signature operations based on algorithms from the SHA-2 family (SHA-256, SHA-384 and SHA-512). This information is expressed via the signatureAlgorithm parameter. 1. See https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/security/SecureRandom.html","title":"Signature protocols","component":"rp-api","version":"3.0.3","name":"signature_protocols","url":"/rp-api/3.0.3/signature_protocols.html","titles":[{"text":"ACSP_V1 signature protocol","hash":"acsp_v1","id":1},{"text":"RAW_DIGEST_SIGNATURE signature protocol","hash":"raw_digest_signature","id":2},{"text":"Supported signature algorithms","hash":"supported_signature_algorithms","id":3},{"text":"Hash algorithms","hash":"hash_algorithms","id":4}]},"18":{"id":18,"text":"Relying Party API is exposed over a REST interface. All messages are encoded using UTF-8. All requests only support HTTP/1.1, as described in RFC 2616. Normally, all positive responses are returned with HTTP status code 200. In some cases, 400 series error codes are used, those cases are described per request. All 500 series error codes indicate some kind of fatal server error. Whenever an RP session creation request (POST to signature/certificate-choice/ or signature/) is repeated inside a 15 second timeframe with exactly the same parameters, session ID of an existing session can be returned as a result. This allows to retry RP POST requests in case of communication errors. When the caller wants, it can override the idempotent behaviour inside this timeframe using an optional nonce parameter present for signature/certificate-choice and signature POST requests. Normally, that parameter can be omitted. IMPORTANT Providing nonce parameter is not allowed for authentication requests, since each authentication request must provide a randomly generated value for rpChallenge, making each authentication request already unique. RP API clients are authenticated based on their originating IP-address and relyingPartyUUID protocol parameter combinations. When authentication fails, server responds with HTTP error 401. relyingPartyName request field is case-insensitive and must match one of the names configured for the calling RP. The names are UTF-8 encoded and are displayed to the user in the Smart-ID application. The Smart-ID service reserves the right to add new fields into responses of the current RP API version. Therefore, the RP must ignore unknown names (fields) in JSON response objects at any location within the JSON structure. It is essential that RP client performs all the required checks when connecting to the Smart-ID RP API HTTPS endpoint, to make sure that the connection endpoint is authentic and that the connection is secure. This is required to prevent man-in-the-middle (MITM) attacks for the authentication and signature protocols. The RP must perform the following checks: Verify the HTTPS connection and the TLS handshake is performed with a secure TLS ciphersuite. Verify the X.509 certificate of the HTTPS endpoint belongs to the well-known public key of the Smart-ID API. The RP must implement HTTPS key (or certificate) pinning. Verify the X.509 certificate of the HTTPS endpoint is valid (not expired, signed by trusted CA and not revoked). In case the RP fails to verify the connection is genuine and secure an attacker might be able to launch an MITM attack on the connection and either login as the user or have the user sign a forged document. See Secure implementation guide for more information.","title":"API technical description","component":"rp-api","version":"3.1.3","name":"api_details","url":"/rp-api/api_details.html","titles":[{"text":"HTTP status codes","hash":"_http_status_codes","id":1},{"text":"Idempotent behaviour","hash":"_idempotent_behaviour","id":2},{"text":"Interface authentication","hash":"_interface_authentication","id":3},{"text":"API client must ignore unknown names (fields) in JSON response object","hash":"_api_client_must_ignore_unknown_names_fields_in_json_response_object","id":4},{"text":"RP API endpoint authentication","hash":"_rp_api_endpoint_authentication","id":5}]},"19":{"id":19,"text":"OpenAPI specification :: Smart-ID documentation Smart-ID documentation Back to docs Smart-ID Documentation Getting started Try out Smart-ID integration Environments Device-link fallback page Implementing HTTPS pinning Client libraries Logos Test accounts Contact Relying Party API Introduction Overview Changes Glossary Device link flows authCode calculation Notification based flows OpenAPI specification API technical description Interactions Signature protocols Callback URLs Response verification Secure Implementation Guide Relying Party API 3.1.3 Documentation Relying Party API 3.1.3 3.0.3 Scalar.createApiReference('#app', { url: '../_/static/RP-API_V3.yml', showSidebar: true, hideModels: true, withDefaultFonts: false, darkMode: false, hideDarkModeToggle: true, forceDarkModeState: 'light', hideDarkModeToggle: true, hideClientButton: true, customCss: ` #app { --scalar-color-1: var(--caption-font-color); --scalar-color-2: var(--body-font-color); --scalar-link-color: var(--link-font-color); --scalar-link-color-hover: var(--link_hover-font-color); --scalar-border-color: var(--panel-border-color); --scalar-font: 'Inter Variable', sans-serif; --scalar-font-code: 'Roboto Mono Variable', monospace; --scalar-micro: 13px; } .scalar-app .dark-mode { --scalar-background-1: var(--color-neutral-950); --scalar-background-2: var(--pre-background); --scalar-background-3: var(--color-neutral-900); --scalar-border-color: var(--pre-border-color); } .scalar-app .introduction-section { padding-top: 32px; } .scalar-app .section-header { color: var(--heading-font-color); } .scalar-app .parameter-list-title, .scalar-app .request-body-title { color: var(--heading-font-color); font-size: 1.125rem; font-weight: var(--body-font-weight-semibold); } .scalar-app .introduction-section .section-header { font-size: 1.875rem; letter-spacing: -0.05rem; margin-top: 4px; } .scalar-app .section-container { padding: 0 40px; } .scalar-app .scalar .scalar-app-layout { height: calc(100% - 48px); max-width: calc(100% - 48px); border-color: transparent; } .scalar-app .fade-request-section-content { background: none; } .scalar-app .scalar .scalar-app-exit { background: #00000096; } .scalar-app .markdown p { line-height: 1.75; } .scalar-app .markdown h1, .scalar-app .markdown h2, .scalar-app .markdown h3, .scalar-app .markdown h4, .scalar-app .markdown h5, .scalar-app .markdown h6, .scalar-app .markdown p, .scalar-app .markdown div, .scalar-app .markdown img, .scalar-app .markdown details, .scalar-app .markdown summary, .scalar-app .markdown ul, .scalar-app .markdown ol, .scalar-app .markdown table, .scalar-app .markdown blockquote, .scalar-app .markdown code { margin: 16px 0; } .scalar-app .app-exit-button { background: #00000098; } .scalar-app .app-exit-button:hover { background: #000; } .scalar-app .darklight-reference { display: none; } .scalar-app .show-more { background-color: #fff; } .scalar-app .scalar-api-references-standalone-search { padding: 72px 16px 8px 16px } .scalar-app .sidebar-pages { padding: 8px 16px 64px 16px } .scalar-app .scalar-modal-search { min-width: 960px; } .scalar-app .scalar-address-bar { --scalar-address-bar-height: 40px; width: 90%; } .scalar-app .address-bar-bg-states { min-width: unset !important; max-width: 100% !important; } @media screen and (max-width: 1000px) { .scalar-app .scalar-api-references-standalone-search { padding: 8px 16px 8px 16px } .scalar-app .sidebar-pages { padding: 8px 16px 8px 16px } .scalar-app .section-container { padding-inline: 0; } .scalar-app .section-container .section { padding-inline: 16px; } .scalar-app .scalar-address-bar { --scalar-address-bar-height: 32px; padding-inline: 40px; margin-top: -8px; width: 100%; } } `, }); document.addEventListener('DOMContentLoaded', function() { const backLinks = document.querySelectorAll('.nav-back-link'); const currentDomain = window.location.hostname; backLinks.forEach(link => { link.addEventListener('click', function(event) { event.preventDefault(); const referrer = document.referrer; let referrerDomain = null; if (referrer) { try { const referrerUrl = new URL(referrer); referrerDomain = referrerUrl.hostname; } catch (e) { console.error(\"Invalid referrer URL:\", referrer, e); referrerDomain = null; } } const shouldFallbackToHref = history.length <= 1 || !referrer || referrerDomain !== currentDomain; if (shouldFallbackToHref) { window.location.href = link.href; } else { history.back(); } }); }); }); document.addEventListener('DOMContentLoaded', function() { document.body.addEventListener('click', function(event) { const targetLink = event.target.closest('.sidebar-heading-link'); if (targetLink) { event.preventDefault(); const url = targetLink.getAttribute('href'); if (url) { history.replaceState({}, '', url); window.location.replace(url); } } }); }); © 2024 SK ID Solutions AS","title":"OpenAPI specification","component":"rp-api","version":"3.1.3","name":"api_specification","url":"/rp-api/api_specification.html","titles":[{"text":"Relying Party API","id":1}]},"20":{"id":20,"text":"The authCode parameter is calculated using a sessionSecret value and added to the device links (QR/Web2App/App2App) in order to protect the link from unauthorized changes. Calculation of the authCode parameter also relies on the assembled device link itself (except for the authCode parameter). This assembled device link without the authCode parameter is referred to as unprotectedDeviceLink. authCodePayload fields The order of the fields in the authCodePayload must be the same as specified in the examples below. All values are required and must be non-empty; the only exceptions to this are: in QR flows, initialCallbackUrl must be empty and the separator must still be used, i.e. ||; in same-device flows (App2App & Web2App), elapsedSeconds parameter must be missing from unprotectedDeviceLink. in certificate-choice session requests parameters digest, interactions and signatureProtocol must be included as empty fields; Encoding Both Base64 and Base64URL encodings are used in the RP API, be careful to use the appropriate encoding as specified. As specified in RFC 4648 Section 5, Base64URL makes the following two substitutions in comparison with the standard Base64 alphabet: + → - and / → _ and as allowed in RFC 4648 Section 3.2 all trailing = characters must be omitted. However, it is recommended to use a standard library function for encoding Base64URL. As the first step, RP assembles authCodePayload using byte concatenation, using the byte representation of vertical bar (| (U+007C)) as a separator: Web2App App2App QR Authentication Session Signature Session Certificate-choice Session For authentication session device links signatureProtocol value is ACSP_V2: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'ACSP_V2', '|', rpChallenge, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"ACSP_V2\"; String rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'ACSP_V2'; $rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $rpChallenge, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"ACSP_V2\" var rpChallenge string = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"ACSP_V2\"; let rp_challenge: &str = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"ACSP_V2\" val rpChallenge: String = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"ACSP_V2\"; string rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'ACSP_V2'; const rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For signature session device links digest value replaces the rpChallenge, and signatureProtocol value is RAW_DIGEST_SIGNATURE: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'RAW_DIGEST_SIGNATURE', '|', digest, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; String digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'RAW_DIGEST_SIGNATURE'; $digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"RAW_DIGEST_SIGNATURE\" var digest string = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"RAW_DIGEST_SIGNATURE\"; let digest: &str = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"RAW_DIGEST_SIGNATURE\" val digest: String = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; string digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'RAW_DIGEST_SIGNATURE'; const digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For certificate-choice session device links, digest, interactions and signatureProtocol values are omitted: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', '', '|', '', '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', '', '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"\"; String digest = \"\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = ''; $digest = ''; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = ''; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"\" var digest string = \"\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"\"; let digest: &str = \"\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"\" val digest: String = \"\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"\"; string digest = \"\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = ''; const digest = ''; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = ''; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload After the RP assembles the authCodePayload, authCode can be calculated as follows: Authentication Session Signature Session Certificate-choice Session authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 1. authCode parameter YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 2. authCode parameter MwMJ_oKImUP-0i9AoayhqQkZVIvoqB4XD2tCFKSdkIc authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 3. authCode parameter jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo Authentication Session Signature Session Certificate-choice Session For authentication session device links signatureProtocol value is ACSP_V2: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'ACSP_V2', '|', rpChallenge, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"ACSP_V2\"; String rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'ACSP_V2'; $rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $rpChallenge, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"ACSP_V2\" var rpChallenge string = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"ACSP_V2\"; let rp_challenge: &str = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"ACSP_V2\" val rpChallenge: String = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"ACSP_V2\"; string rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'ACSP_V2'; const rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For signature session device links digest value replaces the rpChallenge, and signatureProtocol value is RAW_DIGEST_SIGNATURE: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'RAW_DIGEST_SIGNATURE', '|', digest, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; String digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'RAW_DIGEST_SIGNATURE'; $digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"RAW_DIGEST_SIGNATURE\" var digest string = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"RAW_DIGEST_SIGNATURE\"; let digest: &str = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"RAW_DIGEST_SIGNATURE\" val digest: String = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; string digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'RAW_DIGEST_SIGNATURE'; const digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For certificate-choice session device links, digest, interactions and signatureProtocol values are omitted: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', '', '|', '', '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', '', '|', initialCallbackUrl, '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"\"; String digest = \"\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = ''; $digest = ''; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = ''; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"\" var digest string = \"\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"\"; let digest: &str = \"\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"\" val digest: String = \"\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"\"; string digest = \"\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = ''; const digest = ''; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = ''; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload After the RP assembles the authCodePayload, authCode can be calculated as follows: Authentication Session Signature Session Certificate-choice Session authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 4. authCode parameter JvO5yOpliVhqQAHW4iVPx2_kGqizBE99iooupeqxbK0 authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = '1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = '1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = '1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 5. authCode parameter 1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = '-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = '-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = '-GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 6. authCode parameter -GAyjx30TDVzg8If4V97NII5d-61MOE3pr7uG0RCC8c IMPORTANT If QR flow is used, the initialCallbackUrl is empty and the field must be included as an empty byte array. Authentication Session Signature Session Certificate-choice Session For authentication session device links signatureProtocol value is ACSP_V2: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'ACSP_V2', '|', rpChallenge, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', '', '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"ACSP_V2\"; String rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'ACSP_V2'; $rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = ''; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $rpChallenge, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"ACSP_V2\" var rpChallenge string = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"ACSP_V2\"; let rp_challenge: &str = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"ACSP_V2\" val rpChallenge: String = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"ACSP_V2\"; string rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'ACSP_V2'; const rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = ''; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, rpChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, rp_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For signature session device links digest value replaces the rpChallenge, and signatureProtocol value is RAW_DIGEST_SIGNATURE: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', 'RAW_DIGEST_SIGNATURE', '|', digest, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', interactions, '|', '', '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; String digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String initialCallbackUrl = \"\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = 'RAW_DIGEST_SIGNATURE'; $digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $initialCallbackUrl = ''; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"RAW_DIGEST_SIGNATURE\" var digest string = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var initialCallbackUrl string = \"\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"RAW_DIGEST_SIGNATURE\"; let digest: &str = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let initial_callback_url: &str = \"\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"RAW_DIGEST_SIGNATURE\" val digest: String = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val initialCallbackUrl: String = \"\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"RAW_DIGEST_SIGNATURE\"; string digest = \"FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string initialCallbackUrl = \"\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'RAW_DIGEST_SIGNATURE'; const digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ=='; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const initialCallbackUrl = ''; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = 'RAW_DIGEST_SIGNATURE' digest = 'FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ==' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload For certificate-choice session device links, digest, interactions and signatureProtocol values are omitted: authCodePayload := UTF8-ENCODE(STR-CONCAT( 'smart-id', '|', '', '|', '', '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', '', '|', '', '|', unprotectedDeviceLink)) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class AuthCodePayload { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"\"; String digest = \"\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"\"; String initialCallbackUrl = \"\"; String unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; String[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; String authCodePayload = String.join(separator, payloadParts); System.out.println(authCodePayload); } } <?php $separator = '|'; $schemeName = 'smart-id'; $signatureProtocol = ''; $digest = ''; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = ''; $initialCallbackUrl = ''; $unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; $authCodePayload = implode($separator, [ $schemeName, $signatureProtocol, $digest, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactions, $initialCallbackUrl, $unprotectedDeviceLink ]); echo $authCodePayload; ?> separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = separator.join([ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]) print(auth_code_payload) package main import ( \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"\" var digest string = \"\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"\" var initialCallbackUrl string = \"\" var unprotectedDeviceLink string = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" var payloadParts = []string{ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink, } var authCodePayload string = strings.Join(payloadParts, separator) fmt.Printf(\"%q\\n\", authCodePayload) } fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"\"; let digest: &str = \"\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"\"; let initial_callback_url: &str = \"\"; let unprotected_device_link: &str = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; let auth_code_payload_parts: [&str; 7] = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ]; let auth_code_payload: String = auth_code_payload_parts.join(separator); println!(\"{}\", auth_code_payload) } fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"\" val digest: String = \"\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"\" val initialCallbackUrl: String = \"\" val unprotectedDeviceLink: String = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\" val payloadParts: List<String> = listOf( schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ) val authCodePayload: String = payloadParts.joinToString(separator) println(authCodePayload) } using System; public class AuthCodePayload { public static void Main() { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"\"; string digest = \"\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"\"; string initialCallbackUrl = \"\"; string unprotectedDeviceLink = \"https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng\"; string[] payloadParts = { schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink }; string authCodePayload = string.Join(separator, payloadParts); Console.WriteLine(authCodePayload); } } const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = ''; const digest = ''; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = ''; const initialCallbackUrl = ''; const unprotectedDeviceLink = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng'; const authCodePayload = [ schemeName, signatureProtocol, digest, relyingPartyNameBase64, brokeredRpNameBase64, interactions, initialCallbackUrl, unprotectedDeviceLink ].join(separator); console.log(authCodePayload); separator = '|' scheme_name = 'smart-id' signature_protocol = '' digest = '' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = '' initial_callback_url = '' unprotected_device_link = 'https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng' auth_code_payload = [ scheme_name, signature_protocol, digest, relying_party_name_base64, brokered_rp_name_base64, interactions, initial_callback_url, unprotected_device_link ].join(separator) puts auth_code_payload After the RP assembles the authCodePayload, authCode can be calculated as follows: Authentication Session Signature Session Certificate-choice Session authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 7. authCode parameter lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = '3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = '3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = '3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 8. authCode parameter 3fXZ00X-tusoAVe5641iSkt6NyzhSeeerVzi4Ly2DLI authCode := BASE64URL-ENCODE(HMAC-SHA256(sessionSecret, authCodePayload)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; public class AuthCodeCalculator { public static void main(String[] args) throws Exception { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Base64.getDecoder() .decode(sessionSecretBase64); byte[] authCodePayload = \"C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro\" .getBytes(StandardCharsets.UTF_8); Mac sha256Hmac = Mac.getInstance(\"HmacSHA256\"); SecretKeySpec secretKey = new SecretKeySpec(sessionSecret, sha256Hmac.getAlgorithm()); sha256Hmac.init(secretKey); byte[] authCodeBytes = sha256Hmac.doFinal(authCodePayload); String authCode = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes); System.out.println(authCode); } } <?php $sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; $sessionSecret = base64_decode($sessionSecretBase64); $authCodePayload = 'C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro'; $authCodeBytes = hash_hmac('sha256', $authCodePayload, $sessionSecret, true); $authCode = rtrim(strtr(base64_encode($authCodeBytes), '+/', '-_'), '='); echo $authCode; ?> import hmac import hashlib import base64 session_secret_base64 = b'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = base64.b64decode(session_secret_base64) auth_code_payload = b'C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro' auth_code_bytes = hmac.new(session_secret, auth_code_payload, hashlib.sha256).digest() auth_code = base64.urlsafe_b64encode(auth_code_bytes).rstrip(b'=').decode('utf-8') print(auth_code) package main import ( \"crypto/hmac\" \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var authCodePayload []byte = []byte(\"C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro\") sessionSecret, err := base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } mac := hmac.New(sha256.New, sessionSecret) mac.Write(authCodePayload) var authCodeBytes []byte = mac.Sum(nil) var authCode string = base64.RawURLEncoding.EncodeToString(authCodeBytes) fmt.Printf(\"%s\\n\", authCode) } use hmac::{Hmac, Mac}; use sha2::Sha256; use base64::{Engine as _, engine::{self, general_purpose}, alphabet}; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); let auth_code_payload: &[u8] = &b\"C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro\"[..]; let mut mac = Hmac::<Sha256>::new_from_slice(session_secret).expect(\"HMAC can take key of any size\"); mac.update(auth_code_payload); let auth_code_bytes = mac.finalize().into_bytes(); const CUSTOM_ENGINE: engine::GeneralPurpose = base64::engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD); let auth_code: String = CUSTOM_ENGINE.encode(auth_code_bytes); println!(\"{}\", auth_code) } import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecret: ByteArray = Base64.getDecoder() .decode(sessionSecretBase64) val authCodePayload: ByteArray = \"C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro\" .toByteArray(StandardCharsets.UTF_8) val hmac: Mac = Mac.getInstance(\"HmacSHA256\") val secretKey: SecretKey = SecretKeySpec(sessionSecret, hmac.algorithm) hmac.init(secretKey) val authCodeBytes: ByteArray = hmac.doFinal(authCodePayload) val authCode: String = Base64.getUrlEncoder() .withoutPadding() .encodeToString(authCodeBytes) println(authCode) } using System; using System.Text; using System.Security.Cryptography; public class AuthCodeCalculator { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecret = Convert.FromBase64String(sessionSecretBase64); byte[] authCodePayload = Encoding.UTF8.GetBytes(\"C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro\"); HMACSHA256 hmac = new HMACSHA256(sessionSecret); byte[] authCodeBytes = hmac.ComputeHash(authCodePayload); string authCode = Convert.ToBase64String(authCodeBytes) .Replace('+', '-') .Replace('/', '_') .TrimEnd('='); Console.WriteLine(authCode); } } const crypto = require('crypto'); const sessionSecretBase64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps='; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); const authCodePayload = 'C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro'; const hmac = crypto.createHmac('sha256', sessionSecret); hmac.update(authCodePayload); const authCode = hmac.digest('base64url') .replace(/=+$/, ''); console.log(authCode); require 'base64' require 'openssl' session_secret_base64 = 'B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=' session_secret = Base64.decode64(session_secret_base64) auth_code_payload = 'C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro' hmac = OpenSSL::HMAC.digest( 'sha256', session_secret, auth_code_payload ) auth_code = Base64.urlsafe_encode64(hmac).sub(/=*$/, '') puts auth_code Example 9. authCode parameter C6kDqVN94UM2dp82TTIs9apQhXnFM-CcFoyMx32Y4ro The parameters included in the authCode calculation are explained below: Parameter Formula sessionSecret Generated by RP API. Used as the key in authCode calculation. Must be base64 decoded before use. schemeName Scheme name is defined by Smart-ID service and it ties the link to the Smart-ID context. Only allowed value is: smart-id signatureProtocol Allowed values: ACSP_V2 - for authentication session, RAW_DIGEST_SIGNATURE - for signature session, empty - for certificate-choice session. rpChallenge rpChallenge used in the initial authentication request. For more details, see ACSP_V2 signature request parameters. digest digest used in the initial signature request. For more details, see RAW_DIGEST_SIGNATURE signature request parameters. relyingPartyName relyingPartyName used in the initial authentication or signature requests in Base64 encoded form. brokeredRpName brokeredRpName used in the initial authentication or signature requests in Base64 encoded form. This is only used by those RPs that act as a broker for other RPs. Otherwise must be empty. interactions interactions used in the initial authentication or signature request in Base64 encoded form. Empty for certificate-choice session request. Since JSON to Base64 encoding is non-deterministic (parameters may be ordered randomly, whitespace can be optional), the specific Base64-encoded string generated from the interactions object to initiate the session must be reused here in order to guarantee that the values match exactly. initialCallbackUrl Callback URL the Smart-ID app will add parameters to and launch after a successful signature has been given (only in Web2App and App2App flows). Must use HTTPS scheme. unprotectedDeviceLink The final URL without the authCode field. Including this in authCode calculation ensures that the link itself can’t be changed by any malicious party. RP API returns sessionSecret in Base64 encoded form. The Base64 string value must be decoded into a byte array before use: sessionSecret := BASE64-DECODE(sessionSecret) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.util.Base64; public class Base64Decode { public static void main(String[] args) { String sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecretBytes = Base64.getDecoder().decode( sessionSecretBase64 ); } } <?php $sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; $sessionSecret = base64_decode($sessionSecretBase64); ?> import base64 session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" session_secret_bytes = base64.b64decode(session_secret_base64) package main import ( \"encoding/base64\" \"fmt\" ) func main() { var sessionSecretBase64 string = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" var sessionSecretBytes, err = base64.StdEncoding.DecodeString(sessionSecretBase64) if err != nil { panic(err) } fmt.Printf(\"%q\\n\", sessionSecretBytes) } use base64::Engine as _; fn main() { let session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; let session_secret_bytes: &[u8] = &base64::engine::general_purpose::STANDARD.decode(session_secret_base64).unwrap(); } import java.util.Base64 fun main() { val sessionSecretBase64: String = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" val sessionSecretBytes: ByteArray = Base64.getDecoder().decode(sessionSecretBase64) } using System; public class Base64Decode { public static void Main(string[] args) { string sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; byte[] sessionSecretBytes = Convert.FromBase64String(sessionSecretBase64); } } const sessionSecretBase64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\"; const sessionSecret = Buffer.from(sessionSecretBase64, 'base64'); require 'base64' session_secret_base64 = \"B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps=\" session_secret = Base64.decode64(session_secret_base64) Example 10. sessionSecret parameter B98ODiVCebRedSwdTk51zFSaGYyHtY1H2A0ocAi3/Ps= Scheme name that ties the link to the Smart-ID context. Only one value is allowed smart-id. Example 11. schemeName parameter smart-id The same signatureProtocol value that was sent in the initial authentication or signature request. Currently, the only allowed types are: ACSP_V2 for authentication, RAW_DIGEST_SIGNATURE for signature requests, empty - for certificate-choice session. Example 12. signatureProtocol parameter ACSP_V2 The same rpChallenge value or digest value that was sent in the initial authentication or signature request, respectively. This value must be empty for certificate-choice session request. rpChallenge and digest parameters are sent to RP API by RPs in Base64 encoded form. They must be used in Base64 form. Example 13. rpChallenge parameter GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg== Example 14. digest parameter FNZFFya5wGLv9b27fZngaWrOBqle4tGwxZuDFRBdPl1RQvxJsfoqvTbjafd+8BcehMOQGvak6zlP+F8tga4bfQ== The parameter relyingPartyName describes the RP name as specified in the initial authentication, signature or certificate-choice request. The string value must be UTF-8 encoded into a byte array and Base64 encoded before use in authCodePayload assembly: relyingPartyName := BASE64-ENCODE(UTF8-ENCODE(relyingPartyName)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; public class Base64Encode { public static void main(String[] args) { String relyingPartyName = \"DEMO\"; String relyingPartyNameBase64 = Base64.getEncoder().encodeToString( relyingPartyName.getBytes(StandardCharsets.UTF_8) ); System.out.println(relyingPartyNameBase64); } } <?php $relyingPartyName = \"DEMO\"; $relyingPartyNameBase64 = base64_encode($relyingPartyName); echo $relyingPartyNameBase64; ?> import base64 relying_party_name = \"DEMO\" relying_party_name_base64 = base64.b64encode(relying_party_name.encode('utf-8')) print(relying_party_name_base64) package main import ( \"encoding/base64\" \"fmt\" ) func main() { var relyingPartyName string = \"DEMO\" var relyingPartyNameBase64 []byte = []byte(base64.StdEncoding.EncodeToString([]byte(relyingPartyName))) fmt.Printf(\"%q\\n\", relyingPartyNameBase64) } use base64::Engine as _; fn main() { let relying_party_name: &str = \"DEMO\"; let relying_party_name_base64_string: String = base64::engine::general_purpose::STANDARD.encode(relying_party_name.as_bytes()); let relying_party_name_base64: &[u8] = relying_party_name_base64_string.as_bytes(); println!(\"{:?}\\n{}\", relying_party_name_base64, relying_party_name_base64_string); } import java.util.Base64 fun main() { val relyingPartyName: String = \"DEMO\" val relyingPartyNameBase64: String = Base64.getEncoder() .encodeToString(relyingPartyName.toByteArray(Charsets.UTF_8)) println(relyingPartyNameBase64) } using System; using System.Text; public class Base64Encode { public static void Main(string[] args) { string relyingPartyName = \"DEMO\"; byte[] relyingPartyNameBytes = Encoding.UTF8.GetBytes(relyingPartyName); string relyingPartyNameBase64 = Convert.ToBase64String(relyingPartyNameBytes); Console.WriteLine(relyingPartyNameBase64); } } let relyingPartyName = 'DEMO'; let relyingPartyNameBase64 = Buffer.from(relyingPartyName, 'utf-8') .toString('base64'); console.log(relyingPartyNameBase64); require 'base64' relying_party_name = \"DEMO\" relying_party_name_base64 = Base64.strict_encode64(relying_party_name.encode('UTF-8')) puts relying_party_name_base64 Example 15. relyingPartyName parameter QmFuayAxMjM= The parameter brokeredRpName describes the RP name as specified in the initial authentication, signature or certificate-choice request. Must only be used by RPs that act as a broker and for other RPs otherwise must be empty. The string value must be UTF-8 encoded into a byte array and Base64 encoded before use in authCodePayload assembly: brokeredRpName := BASE64-ENCODE(UTF8-ENCODE(brokeredRpName)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; public class Base64Encode { public static void main(String[] args) { String brokeredRpName = \"Example RP\"; String brokeredRpNameBase64 = Base64.getEncoder().encodeToString( brokeredRpName.getBytes(StandardCharsets.UTF_8) ); System.out.println(brokeredRpNameBase64); } } <?php $brokeredRpName = \"Example RP\"; $brokeredRpNameBase64 = base64_encode($brokeredRpName); echo $brokeredRpNameBase64; ?> import base64 brokered_rp_name = \"Example RP\" brokered_rp_name_base64 = base64.b64encode(brokered_rp_name.encode('utf-8')) print(brokered_rp_name_base64) package main import ( \"encoding/base64\" \"fmt\" ) func main() { var brokeredRpName string = \"Example RP\" var brokeredRpNameBase64 []byte = []byte(base64.StdEncoding.EncodeToString([]byte(brokeredRpName))) fmt.Printf(\"%q\\n\", brokeredRpNameBase64) } use base64::Engine as _; fn main() { let brokered_rp_name: &str = \"Example RP\"; let brokered_rp_name_base64_string: String = base64::engine::general_purpose::STANDARD.encode(brokered_rp_name.as_bytes()); let brokered_rp_name_base64: &[u8] = brokered_rp_name_base64_string.as_bytes(); println!(\"{:?}\\n{}\", brokered_rp_name_base64, brokered_rp_name_base64_string); } import java.util.Base64 fun main() { val brokeredRpName: String = \"Example RP\" val brokeredRpNameBase64: String = Base64.getEncoder() .encodeToString(brokeredRpName.toByteArray(Charsets.UTF_8)) println(brokeredRpNameBase64) } using System; using System.Text; public class Base64Encode { public static void Main(string[] args) { string brokeredRpName = \"Example RP\"; byte[] brokeredRpNameBytes = Encoding.UTF8.GetBytes(brokeredRpName); string brokeredRpNameBase64 = Convert.ToBase64String(brokeredRpNameBytes); Console.WriteLine(brokeredRpNameBase64); } } let brokeredRpName = 'Example RP'; let brokeredRpNameBase64 = Buffer.from(brokeredRpName, 'utf-8') .toString('base64'); console.log(brokeredRpNameBase64); require 'base64' brokered_rp_name = \"Example RP\" brokered_rp_name_base64 = Base64.strict_encode64(brokered_rp_name.encode('UTF-8')) puts brokered_rp_name_base64 Example 16. brokeredRpName parameter RXhhbXBsZSBSUA== The parameter interactions as described in interactions section. Empty for certificate-choice session request. Example 17. interactions parameter W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d Web2App App2App QR The initialCallbackUrl parameter specified by the RP in the initial request. Must use HTTPS scheme. In case of QR flows, must be empty. RPs must append a unique parameter to each session in the callback URL to make the URL unpredictable. NOTE The Smart-ID app will launch the callback URL after a successful signature has been obtained in Web2App and App2App flows. For verifying the callback URL once the user successfully completes the flow, see Callback URLs page. The string value must be UTF-8 encoded into a byte array before use in authCodePayload assembly: initialCallbackUrl := UTF8-ENCODE(initialCallbackUrl) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; public class Utf8Encode { public static void main(String[] args) { String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; byte[] initialCallbackUrlBytes = initialCallbackUrl.getBytes(StandardCharsets.UTF_8); } } <?php $initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; $initialCallbackUrlBytes = mb_convert_encoding($initialCallbackUrl, 'UTF-8'); ?> initial_callback_url = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" initial_callback_url_bytes = initial_callback_url.encode('utf-8') package main import ( \"fmt\" ) func main() { var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var initialCallbackUrlBytes []byte = []byte(initialCallbackUrl) fmt.Printf(\"%q\\n\", initialCallbackUrlBytes) } fn main() { let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let initial_callback_url_bytes: &[u8] = initial_callback_url.as_bytes(); } import java.nio.charset.Charset fun main() { val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val initialCallbackUrlBytes: ByteArray = initialCallbackUrl.toByteArray(Charsets.UTF_8) } using System.Text; public class Utf8Encode { public static void Main() { string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; byte[] initialCallbackUrlBytes = Encoding.UTF8.GetBytes(initialCallbackUrl); } } let initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let initialCallbackUrlBytes = Buffer.from(initialCallbackUrl, 'utf-8'); initial_callback_url = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" initial_callback_url_bytes = initial_callback_url.encode('UTF-8') Example 18. initialCallbackUrl parameter https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ The initialCallbackUrl parameter specified by the RP in the initial request. Must use HTTPS scheme. In case of QR flows, must be empty. RPs must append a unique parameter to each session in the callback URL to make the URL unpredictable. NOTE The Smart-ID app will launch the callback URL after a successful signature has been obtained in Web2App and App2App flows. For verifying the callback URL once the user successfully completes the flow, see Callback URLs page. The string value must be UTF-8 encoded into a byte array before use in authCodePayload assembly: initialCallbackUrl := UTF8-ENCODE(initialCallbackUrl) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; public class Utf8Encode { public static void main(String[] args) { String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; byte[] initialCallbackUrlBytes = initialCallbackUrl.getBytes(StandardCharsets.UTF_8); } } <?php $initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; $initialCallbackUrlBytes = mb_convert_encoding($initialCallbackUrl, 'UTF-8'); ?> initial_callback_url = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" initial_callback_url_bytes = initial_callback_url.encode('utf-8') package main import ( \"fmt\" ) func main() { var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var initialCallbackUrlBytes []byte = []byte(initialCallbackUrl) fmt.Printf(\"%q\\n\", initialCallbackUrlBytes) } fn main() { let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let initial_callback_url_bytes: &[u8] = initial_callback_url.as_bytes(); } import java.nio.charset.Charset fun main() { val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val initialCallbackUrlBytes: ByteArray = initialCallbackUrl.toByteArray(Charsets.UTF_8) } using System.Text; public class Utf8Encode { public static void Main() { string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; byte[] initialCallbackUrlBytes = Encoding.UTF8.GetBytes(initialCallbackUrl); } } let initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let initialCallbackUrlBytes = Buffer.from(initialCallbackUrl, 'utf-8'); initial_callback_url = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" initial_callback_url_bytes = initial_callback_url.encode('UTF-8') Example 19. initialCallbackUrl parameter https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ In case of QR flows, initialCallbackUrl must be empty. Web2App App2App QR The final device link URL without the authCode field. RP must use deviceLinkType = Web2App for flows that start from a browser, deviceLinkType = App2App for flows that start from an RP app, and deviceLinkType = QR for cross-device flows. elapsedSeconds value must not be added for Web2App and App2App flows. unprotectedDeviceLink must be assembled as follows to be used in authCodePayload calculation: unprotectedDeviceLink := STR-CONCAT( deviceLinkBase, \"?\", \"deviceLinkType=\", deviceLinkType, \"&sessionToken=\", sessionToken, \"&sessionType=\", sessionType, \"&version=\", version, \"&lang=\", lang) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class UnprotectedDeviceLink { public static void main(String[] args) { String deviceLinkBase = \"https://smart-id.com\"; String deviceLinkType = \"Web2App\"; String sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; String sessionType = \"auth\"; String version = \"1.0\"; String lang = \"eng\"; String unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; System.out.println(unprotectedDeviceLink); } } <?php $deviceLinkBase = \"https://smart-id.com\"; $deviceLinkType = \"Web2App\"; $sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; $sessionType = \"auth\"; $version = \"1.0\"; $lang = \"eng\"; $unprotectedDeviceLink = $deviceLinkBase . \"?\" . 'deviceLinkType=' . $deviceLinkType . '&sessionToken=' . $sessionToken . '&sessionType=' . $sessionType . '&version=' . $version . '&lang=' . $lang; echo $unprotectedDeviceLink . PHP_EOL; ?> device_link_base = \"https://smart-id.com\" device_link_type = \"Web2App\" # One of \"Web2App\", \"App2App\", \"QR\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \\ \"deviceLinkType=\" + device_link_type + \\ \"&sessionToken=\" + session_token + \\ \"&sessionType=\" + session_type + \\ \"&version=\" + version + \\ \"&lang=\" + lang print(unprotected_device_link) package main import ( \"fmt\" \"strconv\" ) func main() { var deviceLinkBase string = \"https://smart-id.com\" var deviceLinkType string = \"Web2App\" // One of \"Web2App\", \"App2App\", \"QR\" var sessionToken string = \"tw1hOWNAcw0wd-e9OalXV-Sr\" var sessionType string = \"auth\" var version string = \"1.0\" var lang string = \"eng\" var unprotectedDeviceLink string = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang fmt.Printf(\"%q\\n\", unprotectedDeviceLink) } fn main() { let device_link_base: &str = \"https://smart-id.com\"; let device_link_type: &str = \"Web2App\"; // One of \"Web2App\", \"App2App\", \"QR\" let session_token: &str = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; let session_type: &str = \"auth\"; let version: &str = \"1.0\"; let lang: &str = \"eng\"; let unprotected_device_link: String = format!(\"{}?deviceLinkType={}&sessionToken={}&sessionType={}&version={}&lang={}\", device_link_base, device_link_type, session_token, session_type, version, lang); println!(\"{}\", unprotected_device_link); } package main fun main() { val deviceLinkBase: String = \"https://smart-id.com\" val deviceLinkType: String = \"Web2App\" val sessionToken: String = \"tw1hOWNAcw0wd-e9OalXV-Sr\" val sessionType: String = \"auth\" val version: String = \"1.0\" val lang: String = \"eng\" val unprotectedDeviceLink: String = \"$deviceLinkBase\" + \"?\" + \"deviceLinkType=$deviceLinkType\" + \"&sessionToken=$sessionToken\" + \"&sessionType=$sessionType\" + \"&version=$version\" + \"&lang=$lang\" println(unprotectedDeviceLink) } using System; public class UnprotectedDeviceLink { public static void Main(string[] args) { string deviceLinkBase = \"https://smart-id.com\"; string deviceLinkType = \"Web2App\"; string sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; string sessionType = \"auth\"; string version = \"1.0\"; string lang = \"eng\"; string unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; Console.WriteLine(unprotectedDeviceLink); } } const deviceLinkBase = \"https://smart-id.com\"; const deviceLinkType = \"Web2App\"; const sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; const sessionType = \"auth\"; const version = \"1.0\"; const lang = \"eng\"; const unprotectedDeviceLink = deviceLinkBase + '?' + 'deviceLinkType=' + deviceLinkType + '&sessionToken=' + sessionToken + '&sessionType=' + sessionType + '&version=' + version + '&lang=' + lang; console.log(unprotectedDeviceLink); device_link_base = \"https://smart-id.com\" device_link_type = \"Web2App\" # One of \"Web2App\", \"App2App\", \"QR\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang puts unprotected_device_link Example 20. unprotectedDeviceLink parameter (Web2App authentication) https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng Example 21. unprotectedDeviceLink parameter (Web2App signature) https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=sign&version=1.0&lang=eng Example 22. unprotectedDeviceLink parameter (Web2App certificate-choice) https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=cert&version=1.0&lang=eng The final device link URL without the authCode field. RP must use deviceLinkType = Web2App for flows that start from a browser, deviceLinkType = App2App for flows that start from an RP app, and deviceLinkType = QR for cross-device flows. elapsedSeconds value must not be added for Web2App and App2App flows. unprotectedDeviceLink must be assembled as follows to be used in authCodePayload calculation: unprotectedDeviceLink := STR-CONCAT( deviceLinkBase, \"?\", \"deviceLinkType=\", deviceLinkType, \"&sessionToken=\", sessionToken, \"&sessionType=\", sessionType, \"&version=\", version, \"&lang=\", lang) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class UnprotectedDeviceLink { public static void main(String[] args) { String deviceLinkBase = \"https://smart-id.com\"; String deviceLinkType = \"App2App\"; String sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; String sessionType = \"auth\"; String version = \"1.0\"; String lang = \"eng\"; String unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; System.out.println(unprotectedDeviceLink); } } <?php $deviceLinkBase = \"https://smart-id.com\"; $deviceLinkType = \"App2App\"; $sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; $sessionType = \"auth\"; $version = \"1.0\"; $lang = \"eng\"; $unprotectedDeviceLink = $deviceLinkBase . \"?\" . 'deviceLinkType=' . $deviceLinkType . '&sessionToken=' . $sessionToken . '&sessionType=' . $sessionType . '&version=' . $version . '&lang=' . $lang; echo $unprotectedDeviceLink . PHP_EOL; ?> device_link_base = \"https://smart-id.com\" device_link_type = \"App2App\" # One of \"Web2App\", \"App2App\", \"QR\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \\ \"deviceLinkType=\" + device_link_type + \\ \"&sessionToken=\" + session_token + \\ \"&sessionType=\" + session_type + \\ \"&version=\" + version + \\ \"&lang=\" + lang print(unprotected_device_link) package main import ( \"fmt\" \"strconv\" ) func main() { var deviceLinkBase string = \"https://smart-id.com\" var deviceLinkType string = \"App2App\" // One of \"Web2App\", \"App2App\", \"QR\" var sessionToken string = \"tw1hOWNAcw0wd-e9OalXV-Sr\" var sessionType string = \"auth\" var version string = \"1.0\" var lang string = \"eng\" var unprotectedDeviceLink string = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang fmt.Printf(\"%q\\n\", unprotectedDeviceLink) } fn main() { let device_link_base: &str = \"https://smart-id.com\"; let device_link_type: &str = \"App2App\"; // One of \"Web2App\", \"App2App\", \"QR\" let session_token: &str = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; let session_type: &str = \"auth\"; let version: &str = \"1.0\"; let lang: &str = \"eng\"; let unprotected_device_link: String = format!(\"{}?deviceLinkType={}&sessionToken={}&sessionType={}&version={}&lang={}\", device_link_base, device_link_type, session_token, session_type, version, lang); println!(\"{}\", unprotected_device_link); } package main fun main() { val deviceLinkBase: String = \"https://smart-id.com\" val deviceLinkType: String = \"App2App\" val sessionToken: String = \"tw1hOWNAcw0wd-e9OalXV-Sr\" val sessionType: String = \"auth\" val version: String = \"1.0\" val lang: String = \"eng\" val unprotectedDeviceLink: String = \"$deviceLinkBase\" + \"?\" + \"deviceLinkType=$deviceLinkType\" + \"&sessionToken=$sessionToken\" + \"&sessionType=$sessionType\" + \"&version=$version\" + \"&lang=$lang\" println(unprotectedDeviceLink) } using System; public class UnprotectedDeviceLink { public static void Main(string[] args) { string deviceLinkBase = \"https://smart-id.com\"; string deviceLinkType = \"App2App\"; string sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; string sessionType = \"auth\"; string version = \"1.0\"; string lang = \"eng\"; string unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; Console.WriteLine(unprotectedDeviceLink); } } const deviceLinkBase = \"https://smart-id.com\"; const deviceLinkType = \"App2App\"; const sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; const sessionType = \"auth\"; const version = \"1.0\"; const lang = \"eng\"; const unprotectedDeviceLink = deviceLinkBase + '?' + 'deviceLinkType=' + deviceLinkType + '&sessionToken=' + sessionToken + '&sessionType=' + sessionType + '&version=' + version + '&lang=' + lang; console.log(unprotectedDeviceLink); device_link_base = \"https://smart-id.com\" device_link_type = \"App2App\" # One of \"Web2App\", \"App2App\", \"QR\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang puts unprotected_device_link Example 23. unprotectedDeviceLink parameter (App2App authentication) https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng Example 24. unprotectedDeviceLink parameter (App2App signature) https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=sign&version=1.0&lang=eng Example 25. unprotectedDeviceLink parameter (App2App certificate-choice) https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=cert&version=1.0&lang=eng The final device link URL without the authCode field. RP must use deviceLinkType = Web2App for flows that start from a browser, deviceLinkType = App2App for flows that start from an RP app, and deviceLinkType = QR for cross-device flows. elapsedSeconds value must not be added for Web2App and App2App flows. unprotectedDeviceLink must be assembled as follows to be used in authCodePayload calculation: unprotectedDeviceLink := STR-CONCAT( deviceLinkBase, \"?\", \"deviceLinkType=\", deviceLinkType, \"&elapsedSeconds=\", TO-STRING(elapsedSeconds), \"&sessionToken=\", sessionToken, \"&sessionType=\", sessionType, \"&version=\", version, \"&lang=\", lang) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class UnprotectedDeviceLink { public static void main(String[] args) { String deviceLinkBase = \"https://smart-id.com\"; String deviceLinkType = \"QR\"; int elapsedSeconds = 22; String sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; String sessionType = \"auth\"; String version = \"1.0\"; String lang = \"eng\"; String unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + elapsedSeconds + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; System.out.println(unprotectedDeviceLink); } } <?php $deviceLinkBase = \"https://smart-id.com\"; $deviceLinkType = \"QR\"; $elapsedSeconds = 22; $sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; $sessionType = \"auth\"; $version = \"1.0\"; $lang = \"eng\"; $unprotectedDeviceLink = $deviceLinkBase . \"?\" . 'deviceLinkType=' . $deviceLinkType . '&elapsedSeconds=' . $elapsedSeconds . '&sessionToken=' . $sessionToken . '&sessionType=' . $sessionType . '&version=' . $version . '&lang=' . $lang; echo $unprotectedDeviceLink . PHP_EOL; ?> device_link_base = \"https://smart-id.com\" device_link_type = \"QR\" elapsed_seconds = 22 session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \\ \"deviceLinkType=\" + device_link_type + \\ \"&elapsedSeconds=\" + str(elapsed_seconds) + \\ \"&sessionToken=\" + session_token + \\ \"&sessionType=\" + session_type + \\ \"&version=\" + version + \\ \"&lang=\" + lang print(unprotected_device_link) package main import ( \"fmt\" \"strconv\" ) func main() { var deviceLinkBase string = \"https://smart-id.com\" var deviceLinkType string = \"QR\" var elapsedSeconds int = 22 var sessionToken string = \"tw1hOWNAcw0wd-e9OalXV-Sr\" var sessionType string = \"auth\" var version string = \"1.0\" var lang string = \"eng\" var unprotectedDeviceLink string = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + strconv.Itoa(elapsedSeconds) + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang fmt.Printf(\"%q\\n\", unprotectedDeviceLink) } fn main() { let device_link_base: &str = \"https://smart-id.com\"; let device_link_type: &str = \"QR\"; let elapsed_seconds: i32 = 22; let session_token: &str = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; let session_type: &str = \"auth\"; let version: &str = \"1.0\"; let lang: &str = \"eng\"; let unprotected_device_link: String = format!(\"{}?deviceLinkType={}&elapsedSeconds={}&sessionToken={}&sessionType={}&version={}&lang={}\", device_link_base, device_link_type, elapsed_seconds, session_token, session_type, version, lang); println!(\"{}\", unprotected_device_link); } package main fun main() { val deviceLinkBase: String = \"https://smart-id.com\" val deviceLinkType: String = \"QR\" val elapsedSeconds: Int = 22 val sessionToken: String = \"tw1hOWNAcw0wd-e9OalXV-Sr\" val sessionType: String = \"auth\" val version: String = \"1.0\" val lang: String = \"eng\" val unprotectedDeviceLink: String = \"$deviceLinkBase\" + \"?\" + \"deviceLinkType=$deviceLinkType\" + \"&elapsedSeconds=$elapsedSeconds\" + \"&sessionToken=$sessionToken\" + \"&sessionType=$sessionType\" + \"&version=$version\" + \"&lang=$lang\" println(unprotectedDeviceLink) } using System; public class UnprotectedDeviceLink { public static void Main(string[] args) { string deviceLinkBase = \"https://smart-id.com\"; string deviceLinkType = \"QR\"; int elapsedSeconds = 22; string sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; string sessionType = \"auth\"; string version = \"1.0\"; string lang = \"eng\"; string unprotectedDeviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + elapsedSeconds.ToString() + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang; Console.WriteLine(unprotectedDeviceLink); } } const deviceLinkBase = \"https://smart-id.com\"; const deviceLinkType = \"QR\"; const elapsedSeconds = 22; const sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; const sessionType = \"auth\"; const version = \"1.0\"; const lang = \"eng\"; const unprotectedDeviceLink = deviceLinkBase + '?' + 'deviceLinkType=' + deviceLinkType + '&elapsedSeconds=' + elapsedSeconds + '&sessionToken=' + sessionToken + '&sessionType=' + sessionType + '&version=' + version + '&lang=' + lang; console.log(unprotectedDeviceLink); device_link_base = \"https://smart-id.com\" device_link_type = \"QR\" elapsed_seconds = 22 session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" unprotected_device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&elapsedSeconds=\" + elapsed_seconds.to_s + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang puts unprotected_device_link Example 26. unprotectedDeviceLink parameter (QR authentication) https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng Example 27. unprotectedDeviceLink parameter (QR signature) https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=sign&version=1.0&lang=eng Example 28. unprotectedDeviceLink parameter (QR certificate-choice) https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=cert&version=1.0&lang=eng The following web form can be used to validate authCode values. AuthCode Calculator /* Define CSS Variables scoped to the calculator container */ .authcode-calculator { /* Define the base neutral color - **ADJUST THIS VALUE AS NEEDED** */ --calc-color-neutral-100: #f8f9fa; /* Example: A common light grey/off-white */ /* Define the panel background using the neutral color */ --calc-panel-background: var(--calc-color-neutral-100); /* Define other variables scoped to the calculator */ --calc-validation-error-color: #dc3545; --calc-button-background-color: #ff3c12; /* User's custom color */ --calc-button-hover-background-color: #0066cc; /* User's custom color */ --calc-match-color: #339900; /* User's custom color */ --calc-mismatch-color: #ffeeee; /* User's custom color */ --calc-match-background-color: #d4edda; --calc-mismatch-background-color: #f8d7da; --calc-match-border-color: #c3e6cb; --calc-mismatch-border-color: #f5c6cb; /* Add some base styles for the container itself if needed */ margin: 1em 0; /* Example margin when embedded */ line-height: 1.6; } /* Apply general styles only within the calculator */ .authcode-calculator h1 { /* Add specific styles for h1 inside the calculator if needed */ font-size: 1.5em; margin-bottom: 1em; color: #333; text-align: center; } /* Prefix all previous rules */ .authcode-calculator form { background-color: var(--calc-panel-background); padding: 25px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); max-width: 700px; margin: 10px 0; /* Changed 'auto' to '0' for left/right margins */ } .authcode-calculator fieldset { margin-top: 20px; border: 1px solid #ccc; border-radius: 4px; padding: 15px 20px; margin-bottom: 20px; } .authcode-calculator legend { font-weight: bold; padding: 0 10px; font-size: 1.1em; color: #333; } .authcode-calculator fieldset div.radio-group-item { display: inline-flex; align-items: center; margin-right: 20px; margin-bottom: 10px; } .authcode-calculator fieldset input[type=\"radio\"] { margin: 0 5px 0 0; } .authcode-calculator fieldset label { display: inline-block; margin: 0; font-weight: normal; vertical-align: middle; } .authcode-calculator label { display: block; margin-top: 15px; margin-bottom: 5px; font-weight: bold; color: #555; } .authcode-calculator label.required::after { content: \" *\"; color: var(--calc-validation-error-color); /* Use scoped variable */ font-weight: bold; } .authcode-calculator label[for=\"useBrokeredRp\"]::after, .authcode-calculator fieldset label::after { content: \"\"; } .authcode-calculator input[type=\"text\"], .authcode-calculator textarea, .authcode-calculator select { display: block; width: 100%; max-width: 100%; padding: 10px; margin-top: 0; border: 1px solid #ccc; border-radius: 4px; font-family: monospace; font-size: 1em; box-sizing: border-box; line-height: 1.4; background-color: #fff; } .authcode-calculator select { height: calc(2.4em + 20px); background-color: #fff; } .authcode-calculator textarea { min-height: 80px; resize: vertical; } .authcode-calculator input[type=\"checkbox\"] { margin-right: 8px; vertical-align: middle; } .authcode-calculator label[for=\"useBrokeredRp\"] { display: inline-block; margin-top: 10px; font-weight: normal; vertical-align: middle; } .authcode-calculator .form-group { margin-bottom: 15px; } .authcode-calculator .hidden { display: none !important; } .authcode-calculator .validation-error { color: var(--calc-validation-error-color); /* Use scoped variable */ font-size: 0.9em; margin-top: 4px; display: block; min-height: 1.2em; } .authcode-calculator input.invalid, .authcode-calculator textarea.invalid, .authcode-calculator select.invalid { border-color: var(--calc-validation-error-color) !important; /* Use scoped variable */ /* background-color: #fbe Sbe !important; */ } .authcode-calculator button { display: block; width: auto; min-width: 150px; margin: 30px auto 10px auto; padding: 12px 20px; background-color: var(--calc-button-background-color); /* Use scoped variable */ color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1.1em; transition: background-color 0.2s ease; } .authcode-calculator button:hover { background-color: var(--calc-button-hover-background-color); /* Use scoped variable */ } .authcode-calculator #results { margin-top: 30px; padding: 20px; border: 1px solid #d6d6d6; background-color: #f9f9f9; border-radius: 4px; box-shadow: inset 0 1px 3px rgba(0,0,0,0.05); } .authcode-calculator #results h2 { margin-top: 0; color: #333; } .authcode-calculator #results code { display: block; background-color: #e9ecef; color: #212529; padding: 10px; margin-top: 8px; border-radius: 4px; word-wrap: break-word; white-space: pre-wrap; font-size: 0.95em; border: 1px solid #dee2e6; } .authcode-calculator #results p { margin-bottom: 10px; color: #444; } .authcode-calculator #comparisonResult { font-weight: bold; padding: 3px 6px; border-radius: 3px; display: inline-block; } .authcode-calculator .match { color: var(--calc-match-color); background-color: var(--calc-match-background-color); border: 1px solid var(--calc-match-border-color); } .authcode-calculator .mismatch { color: var(--calc-mismatch-color); background-color: var(--calc-mismatch-background-color); border: 1px solid var(--calc-mismatch-border-color); } /* Prefixed utility classes if needed, though less common */ .authcode-calculator .mt-1 { margin-top: 0.5rem; } .authcode-calculator .mb-1 { margin-bottom: 0.5rem; } Session Type Authentication Signature Certificate-Choice Session Secret (Base64): Scheme Name: Signature Protocol: ACSP_V2 ACSP_V1 RP Challenge (Base64): Relying Party Name: Use Brokered RP Name Brokered RP Name: Interactions (Base64 JSON): W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d Initial Callback URL: Unprotected Device Link: Auth Code (User Input - Compare Against): Calculate & Compare AuthCode Calculated Auth Code (Base64URL): Comparison Result: Payload Used for Calculation (Processed): const separator = '|'; const calculatorContainer = document.querySelector('.authcode-calculator'); const form = document.getElementById('authForm'); const sessionTypeRadios = calculatorContainer.querySelectorAll('input[name=\"sessionType\"]'); const sessionSecretInput = document.getElementById('sessionSecretBase64'); const schemeNameInput = document.getElementById('schemeName'); const signatureProtocolGroup = document.getElementById('signatureProtocolGroup'); const signatureProtocolLabel = document.getElementById('signatureProtocolLabel'); const signatureProtocolSelect = document.getElementById('signatureProtocol'); const challengeDigestGroup = document.getElementById('challengeDigestGroup'); const challengeOrDigestLabel = document.getElementById('challengeOrDigestLabel'); const challengeOrDigestInput = document.getElementById('challengeOrDigest'); const relyingPartyNameInput = document.getElementById('relyingPartyName'); const useBrokeredRpCheckbox = document.getElementById('useBrokeredRp'); const brokeredRpContainer = document.getElementById('brokeredRpContainer'); const brokeredRpNameInput = document.getElementById('brokeredRpName'); const brokeredRpNameLabel = brokeredRpContainer.querySelector('label'); const interactionsGroup = document.getElementById('interactionsGroup'); const interactionsLabel = document.getElementById('interactionsLabel'); const interactionsInput = document.getElementById('interactions'); const initialCallbackUrlGroup = document.getElementById('initialCallbackUrlGroup'); const initialCallbackUrlInput = document.getElementById('initialCallbackUrl'); const unprotectedDeviceLinkInput = document.getElementById('unprotectedDeviceLink'); const authCodeInput = document.getElementById('authCodeInput'); const calculateButton = document.getElementById('calculateButton'); const resultsDiv = calculatorContainer.querySelector('#results'); const calculatedAuthCodeElement = document.getElementById('calculatedAuthCode'); const comparisonResultElement = document.getElementById('comparisonResult'); const payloadUsedElement = document.getElementById('payloadUsed'); function base64ToUint8Array(base64) { try { const binaryString = atob(base64); const len = binaryString.length; const bytes = new Uint8Array(len); for (let i = 0; i < len; i++) { bytes[i] = binaryString.charCodeAt(i); } return bytes; } catch (e) { console.error(\"Failed to decode Base64 string:\", e); if (e instanceof DOMException && e.name === 'InvalidCharacterError') { throw new Error(\"Invalid character found in Base64 input string (likely the Session Secret). Please check the value.\"); } else { throw new Error(\"Invalid Base64 input string.\"); } } } function arrayBufferToBase64Url(buffer) { const bytes = new Uint8Array(buffer); let binary = ''; for (let i = 0; i < bytes.byteLength; i++) { binary += String.fromCharCode(bytes[i]); } let base64 = btoa(binary); return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, ''); } function utf8ToBase64(str) { try { const bytes = new TextEncoder().encode(str); let binaryString = ''; bytes.forEach(byte => { binaryString += String.fromCharCode(byte); }); return btoa(binaryString); } catch (e) { console.error(\"Failed to encode string to Base64:\", str, e); throw new Error(\"Could not encode one of the name fields to Base64.\"); } } function updateInitialCallbackVisibility() { const sessionType = calculatorContainer.querySelector('input[name=\"sessionType\"]:checked').value; if (sessionType === 'authentication' && signatureProtocolSelect.value === 'ACSP_V1') { initialCallbackUrlGroup.classList.add('hidden'); } else { initialCallbackUrlGroup.classList.remove('hidden'); } if (initialCallbackUrlGroup.classList.contains('hidden')) { clearValidationError(initialCallbackUrlInput); } } function updateFormForSessionType() { const selectedType = calculatorContainer.querySelector('input[name=\"sessionType\"]:checked').value; signatureProtocolGroup.classList.remove('hidden'); signatureProtocolLabel.classList.add('required'); challengeDigestGroup.classList.remove('hidden'); challengeOrDigestLabel.classList.add('required'); interactionsGroup.classList.remove('hidden'); interactionsLabel.classList.add('required'); initialCallbackUrlGroup.classList.remove('hidden'); brokeredRpNameLabel.classList.remove('required'); clearAllValidation(); switch (selectedType) { case 'authentication': challengeOrDigestLabel.textContent = 'RP Challenge (Base64):'; challengeOrDigestLabel.classList.add('required'); interactionsLabel.classList.add('required'); signatureProtocolLabel.classList.add('required'); updateInitialCallbackVisibility(); break; case 'signature': challengeOrDigestLabel.textContent = 'Digest (Base64):'; challengeOrDigestLabel.classList.add('required'); interactionsLabel.classList.add('required'); signatureProtocolGroup.classList.add('hidden'); signatureProtocolLabel.classList.remove('required'); break; case 'certificate-choice': challengeDigestGroup.classList.add('hidden'); challengeOrDigestLabel.classList.remove('required'); interactionsGroup.classList.add('hidden'); interactionsLabel.classList.remove('required'); signatureProtocolGroup.classList.add('hidden'); signatureProtocolLabel.classList.remove('required'); break; } toggleBrokeredRpRequiredStatus(); } function toggleBrokeredRpRequiredStatus() { if (useBrokeredRpCheckbox.checked && !brokeredRpContainer.classList.contains('hidden')) { brokeredRpNameLabel.classList.add('required'); } else { brokeredRpNameLabel.classList.remove('required'); clearValidationError(brokeredRpNameInput); } } function toggleBrokeredRpInputVisibility() { if (useBrokeredRpCheckbox.checked) { brokeredRpContainer.classList.remove('hidden'); } else { brokeredRpContainer.classList.add('hidden'); clearValidationError(brokeredRpNameInput); } toggleBrokeredRpRequiredStatus(); } function clearValidationError(inputElement) { const errorEl = calculatorContainer.querySelector(`#${inputElement.id}-error`); if (errorEl) errorEl.textContent = ''; inputElement.classList.remove('invalid'); } function clearAllValidation() { calculatorContainer.querySelectorAll('.validation-error').forEach(el => el.textContent = ''); calculatorContainer.querySelectorAll('input, textarea, select').forEach(el => el.classList.remove('invalid')); } function validateForm() { let isValid = true; clearAllValidation(); const sessionType = calculatorContainer.querySelector('input[name=\"sessionType\"]:checked').value; const checkField = (field) => { const { el, name } = field; if (!el.closest('.form-group, #brokeredRpContainer')?.classList.contains('hidden')) { if (!el.value.trim()) { isValid = false; const errorEl = calculatorContainer.querySelector(`#${el.id}-error`); if (errorEl) errorEl.textContent = `${name} is required.`; el.classList.add('invalid'); } } }; checkField({ el: sessionSecretInput, name: \"Session Secret\" }); checkField({ el: schemeNameInput, name: \"Scheme Name\" }); checkField({ el: relyingPartyNameInput, name: \"Relying Party Name\" }); checkField({ el: unprotectedDeviceLinkInput, name: \"Unprotected Device Link\" }); if (sessionType === 'authentication') { checkField({ el: signatureProtocolSelect, name: \"Signature Protocol\" }); checkField({ el: challengeOrDigestInput, name: \"RP Challenge\" }); checkField({ el: interactionsInput, name: \"Interactions\" }); } else if (sessionType === 'signature') { checkField({ el: challengeOrDigestInput, name: \"Digest\" }); checkField({ el: interactionsInput, name: \"Interactions\" }); } if (useBrokeredRpCheckbox.checked && !brokeredRpContainer.classList.contains('hidden')) { checkField({ el: brokeredRpNameInput, name: \"Brokered RP Name\" }); } return isValid; } async function calculateAndCompareAuthCode() { if (!validateForm()) { alert(\"Please fill in all required fields indicated by *.\"); resultsDiv.classList.add('hidden'); return; } resultsDiv.classList.add('hidden'); calculatedAuthCodeElement.textContent = ''; comparisonResultElement.textContent = ''; payloadUsedElement.textContent = ''; try { const sessionType = calculatorContainer.querySelector('input[name=\"sessionType\"]:checked').value; const sessionSecretBase64 = sessionSecretInput.value.trim(); const schemeName = schemeNameInput.value; const relyingPartyName = relyingPartyNameInput.value; const includeBrokeredRp = useBrokeredRpCheckbox.checked; const brokeredRpName = includeBrokeredRp ? brokeredRpNameInput.value : null; let initialCallbackUrl = initialCallbackUrlInput.value; const unprotectedDeviceLink = unprotectedDeviceLinkInput.value; const userInputAuthCode = authCodeInput.value.trim(); const relyingPartyNameBase64 = utf8ToBase64(relyingPartyName); const brokeredRpNameBase64 = includeBrokeredRp ? utf8ToBase64(brokeredRpName) : null; let authCodePayloadArray = []; let signatureProtocol = ''; let challengeOrDigest = ''; let interactions = ''; switch (sessionType) { case 'authentication': signatureProtocol = signatureProtocolSelect.value; challengeOrDigest = challengeOrDigestInput.value; interactions = interactionsInput.value; if (signatureProtocol === 'ACSP_V1') { initialCallbackUrl = ''; } authCodePayloadArray = [ schemeName, signatureProtocol, challengeOrDigest, relyingPartyNameBase64 ]; if (includeBrokeredRp) authCodePayloadArray.push(brokeredRpNameBase64); authCodePayloadArray.push(interactions, initialCallbackUrl, unprotectedDeviceLink); break; case 'signature': signatureProtocol = 'RAW_DIGEST_SIGNATURE'; challengeOrDigest = challengeOrDigestInput.value; interactions = interactionsInput.value; authCodePayloadArray = [ schemeName, signatureProtocol, challengeOrDigest, relyingPartyNameBase64 ]; if (includeBrokeredRp) authCodePayloadArray.push(brokeredRpNameBase64); authCodePayloadArray.push(interactions, initialCallbackUrl, unprotectedDeviceLink); break; case 'certificate-choice': signatureProtocol = ''; challengeOrDigest = ''; interactions = ''; authCodePayloadArray = [ schemeName, signatureProtocol, challengeOrDigest, relyingPartyNameBase64 ]; if (includeBrokeredRp) authCodePayloadArray.push(brokeredRpNameBase64); authCodePayloadArray.push(interactions, initialCallbackUrl, unprotectedDeviceLink); break; } const authCodePayload = authCodePayloadArray.join(separator); payloadUsedElement.textContent = authCodePayload; const sessionSecretBytes = base64ToUint8Array(sessionSecretBase64); const payloadBytes = new TextEncoder().encode(authCodePayload); const cryptoKey = await window.crypto.subtle.importKey('raw', sessionSecretBytes, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']); const signatureBuffer = await window.crypto.subtle.sign('HMAC', cryptoKey, payloadBytes); const calculatedAuthCode = arrayBufferToBase64Url(signatureBuffer); calculatedAuthCodeElement.textContent = calculatedAuthCode; if (!userInputAuthCode) { comparisonResultElement.textContent = \"Enter an Auth Code above to compare.\"; comparisonResultElement.className = \"\"; } else if (calculatedAuthCode === userInputAuthCode) { comparisonResultElement.textContent = \"Match!\"; comparisonResultElement.className = \"match\"; } else { comparisonResultElement.textContent = \"Mismatch!\"; comparisonResultElement.className = \"mismatch\"; } resultsDiv.classList.remove('hidden'); } catch (error) { console.error(\"Error during AuthCode calculation:\", error); alert(`An error occurred during calculation: ${error.message}. Check the console for details.`); resultsDiv.classList.add('hidden'); } } if (calculatorContainer) { updateFormForSessionType(); toggleBrokeredRpInputVisibility(); sessionTypeRadios.forEach(radio => radio.addEventListener('change', updateFormForSessionType)); useBrokeredRpCheckbox.addEventListener('change', toggleBrokeredRpInputVisibility); signatureProtocolSelect.addEventListener('change', updateInitialCallbackVisibility); calculateButton.addEventListener('click', calculateAndCompareAuthCode); } else { console.error(\"Calculator container '.authcode-calculator' not found.\"); }","title":"authCode calculation","component":"rp-api","version":"3.1.3","name":"authcode","url":"/rp-api/authcode.html","titles":[{"text":"authCode parameter","hash":"_authcode_parameter","id":1},{"text":"Parameters in authCode","hash":"_parameters_in_authcode","id":2},{"text":"sessionSecret parameter","hash":"_sessionsecret_parameter","id":3},{"text":"schemeName parameter","hash":"_schemename_parameter","id":4},{"text":"signatureProtocol parameter","hash":"_signatureprotocol_parameter","id":5},{"text":"rpChallenge or digest parameter","hash":"_rpchallenge_or_digest_parameter","id":6},{"text":"relyingPartyName parameter","hash":"_relyingpartyname_parameter","id":7},{"text":"brokeredRpName parameter","hash":"_brokeredrpname_parameter","id":8},{"text":"interactions parameter","hash":"_interactions_parameter","id":9},{"text":"initialCallbackUrl parameter","hash":"initialCallbackUrl_parameter","id":10},{"text":"unprotectedDeviceLink parameter","hash":"unprotectedDeviceLink_parameter","id":11},{"text":"authCode validation form","hash":"_authcode_validation_form","id":12},{"text":"AuthCode Calculator & Comparator","id":13},{"text":"Results","id":14}]},"21":{"id":21,"text":"For device link flows that use a callback URL (Web2App and App2App links), the callback URL handling is very important to achieve a secure and phishing-resistant flow. For Web2App callback URLs, the following steps must be followed: The user initiates authentication or signing flow on RP website. RP website backend has to set a session cookie to the user’s browser. This cookie must be set as SameSite=Lax because later, the Smart-ID app will launch the callback URL using top-level navigation and the request type will be GET. RP website backend makes a request to RP API and in the initialCallbackUrl, attaches a random parameter which it also saves in the backend and associates it with the session. The objective is for every initialCallbackUrl in any session to be unique and unpredictable. RP website backend saves the BASE64URL encoded SHA-256 digest of sessionSecret as sessionSecretDigest for later use during verification of the callbackUrl. Once the user has signed (or rejected the transaction), they are redirected to the callback URL address of RP website and their browser will have the same session cookie. Some aspects to take into account are: User will end up on a new browser tab; The callback URL contains an additional parameter sessionSecretDigest which is the Base64URL encoded SHA-256 digest of the sessionSecret; and in case of authentication flows, it also contains the parameter userChallengeVerifier which is also Base64URL encoded. RP website sends the callback URL to RP website backend. RP website backend polls RP API /v3/session/{sessionID} endpoint for the session API response. Note that this can be done before or after the user has returned to the RP website via the callback URL. RP website backend performs the following checks: Verify that the user’s session cookie matches with the random parameter attached in the callback URL; In authentication flows, verify that after applying the SHA-256 hash algorithm to userChallengeVerifier value (as is, without Base64URL decoding), the result equals to the userChallenge within the signature object sent by the RP API in the session API response; Perform the response verification steps described in Response verification page. Note that this cannot be performed before the user has returned to the RP website via the callback URL; Invalidate the old user session and generate a new one. IMPORTANT If any of these steps fail to verify, deny the authentication or signature attempt. In cases where user initiated the authentication/signing flow on a mobile browser that was not their default browser, the HTTPS callback URL will probably be opened in the default browser which will not have the session cookie and thus the verification must fail. The protocol steps for handling App2App callback URLs are functionally the same as for Web2App; however, there are also some differences in the steps below due to fundamental differences between webpages and apps. For App2App callback URLs, the following steps must be followed: The user initiates authentication or signing flow on RP app. RP app has to save a session identifier in the app’s storage. RP app backend makes a request to RP API and in the initialCallbackUrl, attaches a random parameter which it also saves in the backend and associates it with the session identifier. The objective is for every initialCallbackUrl in any session to be unique and unpredictable. RP app backend saves the BASE64URL encoded SHA-256 digest of sessionSecret as sessionSecretDigest for later use during verification of the callbackUrl. Once the user has signed (or rejected the transaction), they are redirected to the callback URL, which will cause RP app to open (for this to work, RP app has to be configured to handle that domain and path of the URL). The callback URL contains an additional parameter sessionSecretDigest which is the Base64URL encoded SHA-256 digest of the sessionSecret; and in case of authentication flows, it also contains the parameter userChallengeVerifier which is also Base64URL encoded. RP app sends the callback URL together with the session identifier from storage to RP app backend. RP website backend polls RP API /v3/session/{sessionID} endpoint for the session API response. Note that this can be done before or after the user has returned to the RP website via the callback URL. RP app backend performs the following checks: Verify that the user’s session identifier matches with the random parameter attached in the callback URL; In authentication flows, verify that after applying the SHA-256 hash algorithm to userChallengeVerifier value (as is, without Base64URL decoding), the result equals to the userChallenge within the signature object sent by the RP API in the session API response; Perform the response verification steps described in Response verification page. Note that this cannot be performed before the user has returned to the RP website via the callback URL; Invalidate the old user session and generate a new one. IMPORTANT If any of these steps fail to verify, deny the authentication or signature attempt. If the initial callback URL provided by RP backend is: https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ then in the authentication flow the full callback URL would be: https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ&sessionSecretDigest=TIRImorSPPxBbNSJhTSPpY4GYM3ZXdHkXj2LFVUL2QI&userChallengeVerifier=XtPfaGa8JnGtYrJjboooUf0KfY9sMEHrWFpSQrsUv9c In the signature and certificate-choice flows the full callback URL would be: https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ&sessionSecretDigest=TIRImorSPPxBbNSJhTSPpY4GYM3ZXdHkXj2LFVUL2QI For both Web2App and App2App callback URLs, the checks described above provide complete phishing resistance. Always prefer device link flows if possible. For the response verification steps, see Response verification page. Also, for further details and security considerations, consult the Secure implementation guide.","title":"Callback URLs","component":"rp-api","version":"3.1.3","name":"callback_urls","url":"/rp-api/callback_urls.html","titles":[{"text":"Web2App callback URL","hash":"_web2app_callback_url","id":1},{"text":"Multiple browser challenges","hash":"_multiple_browser_challenges","id":2},{"text":"App2App callback URL","hash":"_app2app_callback_url","id":3},{"text":"Callback URL examples","hash":"_callback_url_examples","id":4},{"text":"Phishing resistance","hash":"_phishing_resistance","id":5}]},"22":{"id":22,"text":"Dynamic links are renamed to device links. certificatechoice is renamed to certificate-choice and is now under /v3/signature/. randomChallenge parameter renamed to rpChallenge. RP API server now returns the device link base URL to RPs. Final status response to RP now contains userChallenge and flowType in addition to serverRandom. Authentication Verification Code (VC) is calculated from rpChallenge, but signature VC is randomly generated by RP API server. Authentication signature protocol version increased from ACSP_V1 to ACSP_V2. ACSP_V2 protocol significantly changed compared to ACSP_V1 protocol. For all signatures, RSASSA-PKCS-v1_5 is replaced with RSASSA-PSS. Support for SHA-3 hash algorithms has been added for RSASSA-PSS. authCode now includes some other parameters. Callback URLs for App2App and Web2App flows are now introduced and are mandatory. For App2App and Web2App flows, the RP needs to add the “initialCallbackUrl” in the initial request. Request examples now include nonce, requestProperties.shareMdClientIpAddress and response examples now include interactionTypeUsed and deviceIpAddress. allowedInteractionsOrder is renamed to interactions and is now Base64 encoded JSON array. schemeName is removed from the initial RP request. terminology changes (single→same, multi→cross device flows) For authentication requests, there is no parameter nonce anymore (since RP must generate unique rpChallenge for each request). certificate-choice request also has a device link version, and is renamed to contain a hyphen and was moved under /signature/certificate-choice/ Device link certificate-choice request can now be connected to the following notification signature request. This is done via a dedicated endpoint signature/notification/linked/ New session status end result codes: USER_REFUSED_INTERACTION, PROTOCOL_FAILURE and SERVER_ERROR. Allowed all three interaction types for notification based flows: displayTextAndPIN, confirmationMessage and confirmationMessageAndVerificationCodeChoice. Requests authentication and signing have two counter-parts instead of one: dynamic link based (newly added flows, relying on QR codes / Web2App links / App2App links) and notification based (the existing one from RPv2, relying on push notifications). Introduction of new signature protocols (ACSP_V1 and RAW_DIGEST_SIGNATURE). For authentication and signing requests, VC codes are returned from the server. New VC codes formats. Uses v2 instead of v1 in URL, for example {rp-api-baseurl}/v2/ instead of {rp-api-baseurl}/v1/. New interactions concept allowed interactions order. New parameter allowedInteractionsOrder added to authentication and signing requests. It replaces parameters displayText and requestProperties.vcChoice. New parameter interactionTypeUsed added into session status response message. New session status end result codes: REQUIRED_INTERACTION_NOT_SUPPORTED_BY_APP USER_REFUSED_DISPLAYTEXTANDPIN USER_REFUSED_VC_CHOICE USER_REFUSED_CONFIRMATIONMESSAGE USER_REFUSED_CONFIRMATIONMESSAGE_WITH_VC_CHOICE USER_REFUSED_CERT_CHOICE New parameter requestProperties for API /v2/certificatechoice New option shareMdClientIpAddress for parameter requestProperties Previously deprecated object reference pno/:country/:national-identity-number removed, use etsi/:id-etsi-qcs-SemanticsId-Natural instead. RP must ignore any unknown names (fields) in JSON response object.","title":"Changes","component":"rp-api","version":"3.1.3","name":"changes","url":"/rp-api/changes.html","titles":[{"text":"RP API version 3.1 changes compared to version 3","hash":"_rp_api_version_3_1_changes_compared_to_version_3","id":1},{"text":"RP API version 3 changes compared to version 2","hash":"_rp_api_version_3_changes_compared_to_version_2","id":2},{"text":"RP API version 2 changes compared to version 1","hash":"_rp_api_version_2_changes_compared_to_version_1","id":3}]},"23":{"id":23,"text":"The device link flows are the primary flows to be used for initiating Smart-ID transactions. It consists of the following steps: User interacts with an RP frontend (a webpage or an app). RP backend makes a request to RP API to create a device link based session (authentication, signature, or certificate-choice) to obtain security parameters that are necessary for generating device links. For authentication and certificate-choice sessions, the request may either be anonymous (no personal identifier is provided) or non-anonymous (signature session can’t be anonymous). RP starts creating device links. In case of QR codes, but not Web2App nor App2App links, the links must be updated each second. The device links must be generated in the RP backend and then forwarded to the RP frontend each time. RP frontend displays QR codes / Web2App links / App2App links. The user interacts with one of them by either: Opening Smart-ID app and scanning the dynamic QR code (preferred option for QR codes); Using a native camera app to scan the dynamic QR code (not supported by all camera apps) which opens the Smart-ID app where user has to scan the QR code again. Clicking on the Web2App link in an RP webpage, thus opening the Smart-ID app; Clicking on the App2App link in an RP app, thus opening the Smart-ID app. Smart-ID app extracts the necessary parameters and makes a request to the Smart-ID backend to check the integrity, validity and freshness of the device link. If the request was non-anonymous, it is verified that the provided personal identifier agrees with the actual user’s identity. The user is asked to verify the transaction details and enter their PIN. After the signature has been given, the RP receives the result via the session status endpoint. In case of anonymous flow, RP learns the identity of the user only at this point (via the user’s certificate). User is redirected back to the RP with the given callback URL in same-device flows and RP performs the callback URL verification steps described in Callback URLs page. IMPORTANT For device link flows, a single request must be sent. For a single session that displays both a dynamic QR code and a Web2App or App2App link, multiple requests must not be sent. Some examples: If an RP would like to display a Web2App or App2App link without a dynamic QR code, a device link flow with a callback URL must be started. If an RP would like to display a dynamic QR code without the option for Web2App or App2App links, a device link flow can be started without a callback URL. If an RP would like to display both, a dynamic QR code and a Web2App or App2App link, a device link flow with a callback URL must be started (but the callback URL will only be relevant if the user interacts with the Web2App/App2App link, not the QR code). In same-device flow, it may be easier for RP to send a request to session status endpoint only after the callback has been received. This is only relevant when the QR code flow is not provided. The following diagram describes the device link based flow for the authentication session. The following diagram describes the device link based flow for the signature session. The following diagram describes the device link based flow for the certificateChoice session. When RP backend makes a request to RP API to create a new device link based session, RP-API server generates and returns the following parameters as a response: sessionID - session ID (RP UUID); sessionToken - unique value that is used to connect this authentication/signing attempt between the relevant parties (RP, RP API, Smart-ID app); sessionSecret - Base64 encoded key value that must be kept secret and must not be shared with any other party (including RP frontend); deviceLinkBase - the base URL to be used to generate the QR/Web2App/App2App device links. RP then calculates the Web2App or App2App device link and dynamic QR code and shows it to the end user. The dynamic QR code must be updated regularly with the interval of 1 second. It is recommended that RP offers multiple options, QR image and Web2App link, to the user at the same time if either: RP is unable to detect from the user agent whether the user is using a mobile device or a PC, The user is accessing RP website from a mobile device, for example a tablet device, and might want to authenticate using a separate mobile device. NOTE The device link structure is similar for both same-device and cross-device flows. The differences between them are: The value of deviceLinkType is different (Web2App, App2App vs QR), same-device links do not have elapsedSeconds and should not be dynamically regenerated, the final representation of the link to the user is different (a clickable HTTPS link vs a dynamic QR code). IMPORTANT All values in the deviceLink are case-sensitive. The resulting deviceLink must match bit by bit with the expected deviceLink in the Smart-ID backend. There must not be URL encoding in the deviceLink. There must not be URL fragment (#) in the deviceLink. The order of the path parameters in the device link must be the same as specified in the examples below. All values are required and must be non-empty; the only exceptions to this are: in certificate-choice session requests parameters digest, interactions and signatureProtocol must be included as empty fields; in QR flows, callbackUrl must be included as an empty field; in same-device flows, elapsedSeconds parameter must be missing from unprotectedDeviceLink. The device link for App2App and Web2App is a URL: deviceLink := STR-CONCAT( deviceLinkBase, \"?\", \"deviceLinkType=\", deviceLinkType, \"&sessionToken=\", sessionToken, \"&sessionType=\", sessionType, \"&version=\", version, \"&lang=\", lang, \"&authCode=\", authCode) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class DeviceLinkGenerator { public static void main(String[] args) { String deviceLinkBase = \"https://smart-id.com\"; String deviceLinkType = \"Web2App\"; String sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; String sessionType = \"auth\"; String version = \"1.0\"; String lang = \"eng\"; String authCode = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"; String deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; System.out.println(deviceLink); } } <?php $deviceLinkBase = \"https://smart-id.com\"; $deviceLinkType = \"Web2App\"; $sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; $sessionType = \"auth\"; $version = \"1.0\"; $lang = \"eng\"; $authCode = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"; $deviceLink = $deviceLinkBase . \"?\" . \"deviceLinkType=\" . $deviceLinkType . \"&sessionToken=\" . $sessionToken . \"&sessionType=\" . $sessionType . \"&version=\" . $version . \"&lang=\" . $lang . \"&authCode=\" . $authCode; echo $deviceLink; ?> device_link_base = \"https://smart-id.com\" device_link_type = \"Web2App\" # One of \"Web2App\", \"App2App\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" auth_code = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + auth_code print(device_link) package main import ( \"fmt\" \"strconv\" ) func main() { var deviceLinkBase string = \"https://smart-id.com\" var deviceLinkType string = \"Web2App\" // One of \"Web2App\", \"App2App\" var sessionToken string = \"tw1hOWNAcw0wd-e9OalXV-Sr\" var sessionType string = \"auth\" var version string = \"1.0\" var lang string = \"eng\" var authCode string = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" var deviceLink string = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode fmt.Printf(\"%s\\n\", deviceLink) } fn main() { let device_link_base: &str = \"https://smart-id.com\"; let device_link_type: &str = \"Web2App\"; // One of \"Web2App\", \"App2App\" let session_token: &str = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; let session_type: &str = \"auth\"; let version: &str = \"1.0\"; let lang: &str = \"eng\"; let auth_code: &str = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"; let device_link: String = format!(\"{}?deviceLinkType={}&sessionToken={}&sessionType={}&version={}&lang={}&authCode={}\", device_link_base, device_link_type, session_token, session_type, version, lang, auth_code); println!(\"{}\", device_link); } fun main() { val deviceLinkBase: String = \"https://smart-id.com\" val deviceLinkType: String = \"Web2App\" val sessionToken: String = \"tw1hOWNAcw0wd-e9OalXV-Sr\" val sessionType: String = \"auth\" val version: String = \"1.0\" val lang: String = \"eng\" val authCode: String = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" val deviceLink: String = \"$deviceLinkBase\" + \"?\" + \"deviceLinkType=$deviceLinkType&\" + \"sessionToken=$sessionToken&\" + \"sessionType=$sessionType&\" + \"version=$version&\" + \"lang=$lang&\" + \"authCode=$authCode\" println(deviceLink) } using System; public class DeviceLinkGenerator { public static void Main(string[] args) { string deviceLinkBase = \"https://smart-id.com\"; string deviceLinkType = \"Web2App\"; string sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; string sessionType = \"auth\"; string version = \"1.0\"; string lang = \"eng\"; string authCode = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"; string deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; Console.WriteLine(deviceLink); } } const deviceLinkBase = \"https://smart-id.com\"; const deviceLinkType = \"Web2App\"; const sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; const sessionType = \"auth\"; const version = \"1.0\"; const lang = \"eng\"; const authCode = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\"; const deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; console.log(deviceLink); device_link_base = \"https://smart-id.com\" device_link_type = \"Web2App\" # One of \"Web2App\", \"App2App\" session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" auth_code = \"YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs\" device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + auth_code puts device_link Example 1. Web2App link (authentication session) https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng&authCode=YJV6Ve47nPIJ5SSk8yCFEKlRRoaSYoG_F2Gqmr8nIXs Example 2. App2App link (signature session) https://smart-id.com/device-link?deviceLinkType=App2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=sign&version=1.0&lang=eng&authCode=1vUMZbjXusQdh0oCfmgdoNV_UZeWh0uIy9m-DIJhrOU Example 3. Web2App link (certificate-choice session) https://smart-id.com/device-link?deviceLinkType=Web2App&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=cert&version=1.0&lang=eng&authCode=jAZDh7kk5jnasMMm33E28sBVE8q5QmRzhn0ylSSzBRo QR message itself is defined as a URL, just like App2App and Web2App links. deviceLink := STR-CONCAT( deviceLinkBase, \"?\", \"deviceLinkType=\", deviceLinkType, \"&elapsedSeconds=\", TO-STRING(elapsedSeconds), \"&sessionToken=\", sessionToken, \"&sessionType=\", sessionType, \"&version=\", version, \"&lang=\", lang, \"&authCode=\", authCode) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class DeviceLinkGenerator { public static void main(String[] args) { String deviceLinkBase = \"https://smart-id.com\"; String deviceLinkType = \"QR\"; int elapsedSeconds = 22; String sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; String sessionType = \"auth\"; String version = \"1.0\"; String lang = \"eng\"; String authCode = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"; String deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + elapsedSeconds + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; System.out.println(deviceLink); } } <?php $deviceLinkBase = \"https://smart-id.com\"; $deviceLinkType = \"QR\"; $elapsedSeconds = 22; $sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; $sessionType = \"auth\"; $version = \"1.0\"; $lang = \"eng\"; $authCode = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"; $deviceLink = $deviceLinkBase . \"?\" . \"deviceLinkType=\" . $deviceLinkType . \"&elapsedSeconds=\" . $elapsedSeconds . \"&sessionToken=\" . $sessionToken . \"&sessionType=\" . $sessionType . \"&version=\" . $version . \"&lang=\" . $lang . \"&authCode=\" . $authCode; echo $deviceLink; ?> device_link_base = \"https://smart-id.com\" device_link_type = \"QR\" # \"QR\" elapsed_seconds = 22 session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" auth_code = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&elapsedSeconds=\" + str(elapsed_seconds) + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + auth_code print(device_link) package main import ( \"fmt\" \"strconv\" ) func main() { var deviceLinkBase string = \"https://smart-id.com\" var deviceLinkType string = \"QR\" // \"QR\" var elapsedSeconds int = 22 var sessionToken string = \"tw1hOWNAcw0wd-e9OalXV-Sr\" var sessionType string = \"auth\" var version string = \"1.0\" var lang string = \"eng\" var authCode string = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" var deviceLink string = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + strconv.Itoa(elapsedSeconds) + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode fmt.Printf(\"%s\\n\", deviceLink) } fn main() { let device_link_base: &str = \"https://smart-id.com\"; let device_link_type: &str = \"QR\"; // \"QR\" let elapsed_seconds: i32 = 22; let session_token: &str = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; let session_type: &str = \"auth\"; let version: &str = \"1.0\"; let lang: &str = \"eng\"; let auth_code: &str = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"; let device_link: String = format!(\"{}?deviceLinkType={}&elapsedSeconds={}&sessionToken={}&sessionType={}&version={}&lang={}&authCode={}\", device_link_base, device_link_type, elapsed_seconds, session_token, session_type, version, lang, auth_code); println!(\"{}\", device_link); } fun main() { val deviceLinkBase: String = \"https://smart-id.com\" val deviceLinkType: String = \"QR\" val elapsedSeconds: Int = 22 val sessionToken: String = \"tw1hOWNAcw0wd-e9OalXV-Sr\" val sessionType: String = \"auth\" val version: String = \"1.0\" val lang: String = \"eng\" val authCode: String = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" val deviceLink: String = \"$deviceLinkBase\" + \"?\" + \"deviceLinkType=$deviceLinkType&\" + \"elapsedSeconds=$elapsedSeconds&\" + \"sessionToken=$sessionToken&\" + \"sessionType=$sessionType&\" + \"version=$version&\" + \"lang=$lang&\" + \"authCode=$authCode\" println(deviceLink) } using System; public class DeviceLinkGenerator { public static void Main(string[] args) { string deviceLinkBase = \"https://smart-id.com\"; string deviceLinkType = \"QR\"; int elapsedSeconds = 22; string sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; string sessionType = \"auth\"; string version = \"1.0\"; string lang = \"eng\"; string authCode = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"; string deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + elapsedSeconds.ToString() + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; Console.WriteLine(deviceLink); } } const deviceLinkBase = \"https://smart-id.com\"; const deviceLinkType = \"QR\"; const elapsedSeconds = 22; const sessionToken = \"tw1hOWNAcw0wd-e9OalXV-Sr\"; const sessionType = \"auth\"; const version = \"1.0\"; const lang = \"eng\"; const authCode = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\"; const deviceLink = deviceLinkBase + \"?\" + \"deviceLinkType=\" + deviceLinkType + \"&elapsedSeconds=\" + elapsedSeconds + \"&sessionToken=\" + sessionToken + \"&sessionType=\" + sessionType + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + authCode; console.log(deviceLink); device_link_base = \"https://smart-id.com\" device_link_type = \"QR\" # \"QR\" elapsed_seconds = 22 session_token = \"tw1hOWNAcw0wd-e9OalXV-Sr\" session_type = \"auth\" version = \"1.0\" lang = \"eng\" auth_code = \"lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk\" device_link = device_link_base + \"?\" + \"deviceLinkType=\" + device_link_type + \"&elapsedSeconds=\" + elapsed_seconds.to_s + \"&sessionToken=\" + session_token + \"&sessionType=\" + session_type + \"&version=\" + version + \"&lang=\" + lang + \"&authCode=\" + auth_code puts device_link Example 4. QR link (authentication session) https://smart-id.com/device-link?deviceLinkType=QR&elapsedSeconds=22&sessionToken=tw1hOWNAcw0wd-e9OalXV-Sr&sessionType=auth&version=1.0&lang=eng&authCode=lGfD89xMYFmbSsItj5KbyjPn9JgT2dieRuMrSQS3BXk Example 5. QR code (authentication session) For more details on how the dynamic QR code or other device links should be presented in the RP frontend, see Device link and QR presentation section. The table below explains the parameters that are included in the device link calculation. Parameter Formula version A pre-defined version value, currently 1.0. sessionToken Generated by RP API. It is a URL safe value and it must be used as is. deviceLinkType Allowed values: QR - for dynamic QR codes, Web2App - for non-dynamic Web2App device links, App2App - for non-dynamic App2App device links. sessionType Allowed values: auth - for authentication session, sign - signature session, cert - certificate-choice session. elapsedSeconds Seconds since receiving the response from the initial request to RP API. Only used in cross-device flows (dynamic QR code). lang An ISO 639-2 three-letter language code. It should match the language that the user was seeing in the RP UI previously. This only affects the language of the fallback page, not the Smart-ID app itself. authCode Calculated using HMAC-SHA256 algorithm, using sessionSecret as the key, authCodePayload as the payload, and represented in Base64URL encoding. Explained in a separate page. IMPORTANT The calculation of device links must be performed in the RP backend. All values (including elapsedSeconds) must all be generated in the RP backend and the RP frontend must not be able to change or affect these parameters. For dynamic QR code flows, the dynamic generation (every 1s) of the authCode parameter must be done in the RP backend, NOT in the RP frontend or RP app so as not to leak the sessionSecret parameter. Also, it is forbidden to generate values of authCode parameter ahead of time and forward them to the RP frontend/app. version parameter is a pre-defined value. Currently, only 1.0 is supported. It must be used in string form in device links. Example 6. version parameter \"1.0\" RP API returns sessionToken. It is a URL safe value and it must be used as is (in string form) in device links. Example 7. sessionToken parameter \"tw1hOWNAcw0wd-e9OalXV-Sr\" The parameter deviceLinkType describes the device link type: QR - for dynamic QR codes, Web2App - for non-dynamic Web2App device links, App2App - for non-dynamic App2App device links. The string value must be used as is (in string form) in device links. Example 8. deviceLinkType parameter \"QR\" The parameter sessionType describes the session type: auth - for authentication session, sign - for signature session, cert - for certificate-choice session. The string value must be used as is (in string form) in device links. Example 9. sessionType parameter \"auth\" The elapsedSeconds parameters is seconds since receiving the response from the initial session creation request to RP API. Notice that dynamic QR code link must be re-calculated each second because the elapsedSeconds value changes. elapsedSeconds value must be converted to string value to be used in QR code links: elapsedSeconds := TO-STRING(elapsedSeconds) Java PHP Python Go Rust Kotlin C# Node.js Ruby public class Int2Str { public static void main(String[] args) { int elapsedSeconds = 22; String elapsedSecondsStr = Integer.toString(elapsedSeconds); System.out.println(elapsedSecondsStr); } } <?php $elapsedSeconds = 22; $elapsedSecondsStr = strval($elapsedSeconds); echo $elapsedSecondsStr; ?> elapsed_seconds = 22 elapsed_seconds_str = str(elapsed_seconds) print(elapsed_seconds_str) package main import ( \"fmt\" \"strconv\" ) func main() { var elapsedSeconds int = 22 var elapsedSecondsStr string = strconv.Itoa(elapsedSeconds) fmt.Printf(\"%s\\n\", elapsedSecondsStr) } fn main() { let elapsed_seconds: i32 = 22; let elapsed_seconds_str: String = elapsed_seconds.to_string(); println!(\"{}\", elapsed_seconds_str) } fun main() { val elapsedSeconds: Int = 22 val elapsedSecondsStr: String = elapsedSeconds.toString() println(elapsedSecondsStr) } using System; public class Int2Str { public static void Main() { int elapsedSeconds = 22; string elapsedSecondsStr = elapsedSeconds.ToString(); Console.WriteLine(elapsedSecondsStr); } } let elapsedSeconds = 22; let elapsedSecondsStr = elapsedSeconds.toString(); console.log(elapsedSecondsStr); elapsed_seconds = 22 elapsed_seconds_str = elapsed_seconds.to_s puts elapsed_seconds_str Example 10. elapsedSeconds parameter \"22\" The lang parameter defines the interface language for the HTTPS fallback page that is shown to the user when there are technical problems regarding opening device links (for example, if user’s browser does not support Web2App links and needs to be configured to allow them or if Smart-ID app is not installed on the phone). Its format must be ISO 639-2 three-letter language code. It is recommended that for consistent user experience, RP provides here the same language that the user was already using in the RP UI. This parameter only affects the language of the fallback page, not the Smart-ID app itself. Example 11. lang parameter \"eng\" authCode parameter generation is explained in detail in authCode calculation page. The following table aims to clarify which of the parameters involved in device link construction should be accessible by which parties (see legend below). The table also includes parameters which are used for authCode calculation (e.g. unprotectedDeviceLink) — for their descriptions, see authCode calculation page. RP API server RP backend RP frontend/app version sessionID sessionToken sessionSecret deviceLinkType sessionType signatureProtocol rpChallenge digest relyingPartyName brokeredRpName interactions initialCallbackUrl unprotectedDeviceLink elapsedSeconds authCode lang Legend: - source of parameter (the party that generates/calculates it) - knows parameter - does not know parameter - MUST NOT know parameter For generation of QR codes, error correction level LOW should be used. The QR code should have sufficient margins to enable quick scanning by the Smart-ID app. The optimal size for QR code is ~10 pixels per block when displayed on a PC, since: Block sizes 5 pixels and less are too small for easy scanning (devices might have focus issues). Block sizes 20 pixels and above are too big for convenient scanning. When QR code is displayed on a mobile device, it is recommended to show the QR code as big as possible, up to 10 pixels per block. IMPORTANT The actual generation of the QR image can be done both in the backend or the frontend, however the device link embedded in the QR code must only be generated by the PR backend. Keep in mind that regardless of the approach chosen, sensitive parameters such as sessionSecret must never be sent to the RP frontend itself. For cases when the app is not installed or some other problem occurs with opening a device link, a fallback HTTPS webpage is opened with instructions on how to resolve the issue. The lang parameter in the link is by default used to show the same language as on the RP UI. The instructions cover the following scenarios: User is not on a mobile device where Smart-ID app is installed and has been allowed by the RP to use a wrong type of device link (e.g. a same-device link on a PC). Smart-ID App is not installed on the current device. Mobile browser does not support universal links / Android App links. Mobile OS/browser settings disallow the link and user intervention is required.","title":"Device link flows","component":"rp-api","version":"3.1.3","name":"device_link_flows","url":"/rp-api/device_link_flows.html","titles":[{"text":"Device link calculation","hash":"_device_link_calculation","id":1},{"text":"Same-device flows","hash":"same_device_flows","id":2},{"text":"Cross-device (dynamic QR code) flows","hash":"cross_device_flows","id":3},{"text":"Device link parameters","hash":"_device_link_parameters","id":4},{"text":"version parameter","hash":"_version_parameter","id":5},{"text":"sessionToken parameter","hash":"_sessiontoken_parameter","id":6},{"text":"deviceLinkType parameter","hash":"_devicelinktype_parameter","id":7},{"text":"sessionType parameter","hash":"_sessiontype_parameter","id":8},{"text":"elapsedSeconds parameter","hash":"_elapsedseconds_parameter","id":9},{"text":"lang parameter","hash":"_lang_parameter","id":10},{"text":"authCode parameter","hash":"_authcode_parameter","id":11},{"text":"Parameter visibility","hash":"_parameter_visibility","id":12},{"text":"Device link and QR presentation","hash":"device_link_and_qr_presentation","id":13},{"text":"Fallback page","hash":"fallback_page","id":14}]},"24":{"id":24,"text":"Smart-ID account A person has to register a Smart-ID account to use services provided by the Smart-ID system. Account binds a Smart-ID app instance (installed on a person’s mobile device) to a person’s identity in the Smart-ID system. In the course of account creation and registration, the identity of the account owner (person) is proofed by a Registration Authority (RA) and the relation between the identity and a key pair is certified by a Certificate Authority (CA). An account has a signature key pair and an authentication key pair. Smart-ID app A technical component of the Smart-ID system. A mobile app instance installed on a person’s mobile device that provides access to Smart-ID functionality for persons. Smart-ID provider An organization that is legally responsible for the Smart-ID system. Smart-ID server A technical component of the Smart-ID system. Server-side counterpart of the Smart-ID app. Handles backend operations and provides API-s to Relying Party (RP). Smart-ID system A technical and organizational environment that enables digital authentication and issuing of digital signatures of persons in an electronic environment. The Smart-ID system provides services that allow persons (Smart-ID account owners) to authenticate themselves to RPs, to give digital signatures requested by RPs, and to manage their Smart-ID accounts. Authentication key pair (or authentication key) Key pair that is used to digitally authenticate a person. Certificate Authority (CA) An entity that issues certificates for Smart-ID account owners. Cross-device use case Use cases that start from an RP in one device and continues with the Smart-ID app in a different device. These use cases are usually used with dynamic QR codes and notification flows. Key pair Pair of keys that are required for digital signature scheme. There are two kinds of key pairs (or shortly, keys) in the Smart-ID system, authentication key pair and signature key pair. The word pair refers to the private and public keys of each key pair used in an asymmetric cryptographic algorithm, here RSA. Mobile device A tablet computer or smartphone that runs a mobile device operating system (Apple iOS, Google Android). Person A natural person who uses the Smart-ID system to authenticate herself to an RP and to issue digital signatures requested by RP. Registration Authority (RA) An entity responsible for recording or verifying some or all of the information (particularly the identities of subjects) needed by a CA to issue certificates and CRLs and to perform other certificate management functions. Relying Party (RP) An organization or service, for example a bank, that uses the Smart-ID service to authenticate its users and to get them to sign the documents. Website (e-service) Information system built by RP and uses Mobile-ID or Smart-ID service to authenticate users and to create digital signatures. The website is integrated with the Mobile-ID RP API (https://github.com/SK-EID/MID) or the Smart-ID RP API (https://github.com/SK-EID/smart-id-documentation). App RP’s mobile application running on a user’s device. The app is used to interact with the RP’s e-service and in the background, the app is communicating to the RP’s backend or website. Users Natural persons with registered Mobile-ID/Smart-ID accounts. Users authenticate to the RP’s e-service and create digital signatures with the browser or the RP’s app. Relying Party request A request from an RP that requires some kind of operation in the Smart-ID backend system. It may or may not create a transaction. Same-device use case Use cases that start from an RP in one device and continues with the Smart-ID app in the same device. Signature key pair (or signature key) Key pair that is used to give digital signatures of a person. Verification Code (VC) Verification codes are 4 numbers shown to the user for notification based (authentication and signature) flows to let the user bind together the session on the browser or RP app and the authentication request on the Smart-ID app.","title":"Glossary","component":"rp-api","version":"3.1.3","name":"glossary","url":"/rp-api/glossary.html","titles":[]},"25":{"id":25,"text":"A Smart-ID app can support different interaction types and a relying party can demand a particular interaction with or without a fallback possibility. Different interactions can support different amount of data to display information to user. Available interactions and possible type value and extra parameter combinations are listed in the following table. Availability depends on the chosen link flow. Linked notification based flow refers to the BASE/v3/signature/notification/linked endpoint. Each interaction is defined by an object that has 2 parameters: type and either displayText60 or displayText200. Interaction type & extra parameter Description Device link based flows Notification based flows Linked notification based flow displayTextAndPIN with displayText60 The simplest interaction with max 60 chars of text and PIN entry on a single screen. Yes Yes Yes confirmationMessage with displayText200 First screen is for text only (max 200 chars) and has Confirm and Cancel buttons. Second screen is for PIN. Yes Yes Yes confirmationMessageAndVerificationCodeChoice with displayText200 First screen combines text and Verification Code choice. Second screen is for PIN. No Yes No RP uses interactions parameter to list interactions it allows for the current session. The interactions parameter is a JSON array that is Base64 encoded. Not all app versions may support all interactions. The order of the array items are significant as the Smart-ID server is aware of which app installations support which interactions and will send the interactions to the Smart-ID app in the same order as they are in the interactions array. IMPORTANT The following requirements apply for the interaction object: For each interaction, the type and the corresponding displayText (either displayText60 or displayText200) parameters are mandatory. Meaning that each interaction must include a non-empty displayText60 or displayText200 parameter. It is forbidden to provide both displayText60 and displayText200 parameters. It is not allowed to have more than one interaction with the same type value. In addition, it is not allowed to list interaction types not meant for the flow (device link flow or notification based flow). JSON to Base64 encoding is non-deterministic (parameters may be ordered randomly, whitespace can be optional). Therefore, the specific Base64-encoded string generated from the interactions object to initiate the session must be stored and reused in all subsequent calculations. This is relevant for all device link flows, more specifically in: authCode calculation; ACSP_V2 digest calculation (authentication only) during response verification. Failing to meet the first 4 requirements above will result in an error (HTTP 400 Bad Request). Failing to follow the last recommendation can result in some dynamic link sessions failing. If authCode calculation returns a different value from what RP API calculates, then the device link will be rejected due to wrong authCode value. If ACSP_V2 digest is calculated incorrectly, a valid user authentication signature will appear to be invalid and RP will have to deny the authentication attempt. The interaction that was actually used is reported back to RP with interactionTypeUsed response parameter to the session request. If an app cannot support any interaction requested then the session is cancelled with reason code REQUIRED_INTERACTION_NOT_SUPPORTED_BY_APP. The displayText60 and displayText200 parameters are used by the Smart-ID app to display text on the screen. These parameters must be short and clear. The preferred way of writing displayText60 and displayText200 is to explain the action user is taking. Interaction type must also be considered when writing a good display text. The following are a few examples of good displayText60 and displayText200: You are logging in to internet bank Log in to mobile banking Sign internet banking contract Sign document Contract.asice Transfer 1000€ to Jane Doe the RP name is not written explicitly as for all interaction types, the RP name is always displayed to the user together with the display text. Before sending the RP API request, interactions array must be turned into a string and then must be Base64 encoded. interactions should be minified to lower the overhead. The Base64 encoding can be done as follows: interactions := BASE64-ENCODE(TO-STRING(MINIFY(interactionsJson))) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.util.Base64; public class InteractionsBase64Encode { public static void main(String[] args) { String interactions = \"\"\" [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}]\"\"\"; String interactionsBase64 = Base64.getEncoder().encodeToString( interactions.getBytes(StandardCharsets.UTF_8) ); System.out.println(interactionsBase64); } } <?php $interactionsJsonStr = <<<EOD [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}] EOD; $interactionsBase64 = base64_encode($interactionsJsonStr); echo $interactionsBase64; ?> import base64 import json interactions = [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}] interactions_string = json.dumps(interactions, separators=(',', ':')) interactions_base64 = base64.b64encode(interactions_string.encode('utf-8')) print(interactions_base64) package main import ( \"encoding/base64\" \"encoding/json\" \"fmt\" ) type Interactions struct { Type string `json:\"type\"` DisplayText200 string `json:\"displayText200,omitempty\"` DisplayText60 string `json:\"displayText60,omitempty\"` } func main() { var interactions []Interactions = []Interactions{{Type: \"confirmationMessage\", DisplayText200: \"Longer description of the transaction context\"}, {Type: \"displayTextAndPIN\", DisplayText60: \"Short description of the transaction context\"}} interactionsBytes, err := json.Marshal(interactions) if err != nil { fmt.Printf(\"error: %s\\n\", err) return } var interactionsBase64 []byte = []byte(base64.StdEncoding.EncodeToString(interactionsBytes)) fmt.Printf(\"%q\\n\", interactionsBase64) } use base64::Engine as _; use serde::{Deserialize, Serialize}; type Interactions<'a> = Vec<Interaction<'a>>; #[derive(Debug, Deserialize, Serialize)] enum DisplayText<'a> { #[serde(rename = \"displayText200\")] DisplayText200(&'a str), #[serde(rename = \"displayText60\")] DisplayText60(&'a str), } #[derive(Serialize, Deserialize)] struct Interaction<'a> { #[serde(rename = \"type\")] type_field: &'a str, #[serde(flatten)] display_text: DisplayText<'a>, } fn main() { let interactions: Interactions = vec![Interaction{type_field: \"confirmationMessage\", display_text: DisplayText::DisplayText200(\"Longer description of the transaction context\")}, Interaction{type_field: \"displayTextAndPIN\", display_text: DisplayText::DisplayText60(\"Short description of the transaction context\")}]; let interactions_base64: String = base64::engine::general_purpose::STANDARD.encode(serde_json::to_string(&interactions).unwrap().into_bytes()); println!(\"{:?}\", interactions_base64); } import java.nio.charset.StandardCharsets import java.util.Base64 fun main() { val interactions: String = \"\"\" [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}]\"\"\".trimIndent() val interactionsBase64: String = Base64.getEncoder().encodeToString( interactions.toByteArray(StandardCharsets.UTF_8) ) println(interactionsBase64) } using System; using System.Text; public class InteractionsBase64Encode { public static void Main(string[] args) { String interactionsJson = \"\"\"[{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}]\"\"\"; String interactionsBase64 = Convert.ToBase64String(Encoding.UTF8.GetBytes(interactionsJson)); Console.WriteLine(interactionsBase64); } } const interactions = [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}]; const interactionsString = JSON.stringify(interactions); const interactionsBase64 = Buffer.from(interactionsString).toString('base64'); console.log(interactions_base64); require 'base64' require 'json' interactions = [{\"type\":\"confirmationMessage\",\"displayText200\":\"Longer description of the transaction context\"},{\"type\":\"displayTextAndPIN\",\"displayText60\":\"Short description of the transaction context\"}] interactions_string = JSON.generate(interactions) interactions_base64 = Base64.strict_encode64(interactions_string) puts interactions_base64 Example 1. interactions parameter W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d Example 2. confirmationMessage only, if not available then fail (device link flow). Before encoding [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" } ] Base64 encoded { \"interactions\": \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9XQ==\" } App visualization - confirmation message Initial screen PIN entry screen Watch visualization - confirmation message Initial screen (scrolls down) PIN entry screen Example 3. displayTextAndPIN only, if not available then fail (device link flow). Before encoding [ { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ] Base64 encoded { \"interactions\": \"W3sidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" } App visualization - display text and PIN Initial screen Watch visualization - display text and PIN Initial screen (scrolls down) PIN entry screen Example 4. RP first choice is confirmationMessage, if not available then fall back to displayTextAndPIN (device link flow). Before encoding [ { \"type\": \"confirmationMessage\", \"displayText200\": \"Longer description of the transaction context\" }, { \"type\": \"displayTextAndPIN\", \"displayText60\": \"Short description of the transaction context\" } ] Base64 encoded { \"interactions\": \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" } App visualization - confirmation message Initial screen PIN entry screen Watch visualization - confirmation message Initial screen (scrolls down) PIN entry screen Example 5. confirmationMessageAndVerificationCodeChoice only, if not available then fail (notification based flow). Before encoding [ { \"type\": \"confirmationMessageAndVerificationCodeChoice\", \"displayText200\": \"Longer description of the transaction context\" } ] Base64 encoded { \"interactions\": \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2VBbmRWZXJpZmljYXRpb25Db2RlQ2hvaWNlIiwiZGlzcGxheVRleHQyMDAiOiJMb25nZXIgZGVzY3JpcHRpb24gb2YgdGhlIHRyYW5zYWN0aW9uIGNvbnRleHQifV0=\" } App visualization - confirmation message and VC choice Initial screen PIN entry screen Watch visualization - confirmation message and VC choice Initial screen (scrolls down) PIN entry screen","title":"Interactions","component":"rp-api","version":"3.1.3","name":"interactions","url":"/rp-api/interactions.html","titles":[{"text":"Requirements for interactions object","hash":"_requirements_for_interactions_object","id":1},{"text":"Guidance for writing display texts","hash":"_guidance_for_writing_display_texts","id":2},{"text":"Base64 encoding interactions","hash":"_base64_encoding_interactions","id":3},{"text":"interactions elements examples","hash":"_interactions_elements_examples","id":4}]},"26":{"id":26,"text":"This document describes the relying party interface protocol of Smart-ID service and provides information for integration. The interface offers the entry point to Smart-ID main use cases, i.e. authentication and signing. The main Smart-ID use case is of a relying party (RP) starting a session by calling the Smart-ID service RP API with a challenge when the user wishes to authenticate with the relying party’s service or a hash to create a digital signature. Depending on the chosen RP API endpoint, either the user scans a dynamic QR code or (in the same-device use case) the user clicks a link that launches the Smart-ID application, or the Smart-ID server sends a push notification to the application. The user then verifies the details of the transaction displayed by the Smart-ID application and confirms it. The Smart-ID application communicates with the Smart-ID server to generate the digital signature which makes it available for the relying party to be fetched. Meanwhile, the relying party has been waiting for a reply from the Smart-ID server using a long poll connection. In the case of success, it receives the signature and the user’s certificate to validate the result. The service creates digital signatures as proof of authentication and signing. However, to create electronic signatures (ASiC-E with XAdES/CAdES signatures or PDF with PAdES signatures) the relying party must create the required document structure themselves, calculate the hash and have that signed using this API. The latest version of the API introduces new flows collectively referred to as \"device link flows\". for cross-device use cases — dynamic QR codes that the user must scan; for same-device use cases where the user is visiting an RP webpage using a mobile browser — device links which the user must click; for same-device use cases where the user is using an RP app — device links which the user must click. The guiding principle in designing the API has been to unify the three aforementioned flows as much as possible to minimize the integration efforts for RPs. Because of this, they mostly share the same security mechanisms and principles, even though the methods used to launch the Smart-ID application are completely different. This also means it is possible for an RP to offer multiple alternative methods of authentication at the same time without making multiple requests to the RP API. In the latest RP API version 3, the notification based flows will still be available, but for maximum security, it is recommended they are only used if the particular user has been authenticated at least once before on the device by one of the more secure device link flows. This can be accomplished by utilizing the client device’s local storage (e.g. browser cookies, local app storage). Device link based flows must always be used in the same-device use case for both usability and security reasons. Brokers of the Smart-ID service are treated similarly to relying parties and there is no extra configuration compared to previous RP API versions. Throughout this document, there will be some blocks of text as shown below. IMPORTANT Important blocks like these must be followed by every RP without exceptions. These blocks show important points of the API which might lead to security issues or failures if implemented wrongly. NOTE Note blocks present additional information and optional features. They also link to other related sections in the guide.","title":"Introduction","component":"rp-api","version":"3.1.3","name":"introduction","url":"/rp-api/introduction.html","titles":[{"text":"About RP API v3","hash":"_about_rp_api_v3","id":1},{"text":"About this document","hash":"_about_this_document","id":2}]},"27":{"id":27,"text":"In general, notification based flows are similar to the flows from RP API v2 in the sense that they rely on the push notifications mechanism. The main differences with regard to RP API v2 are: For signature requests, verification codes are returned to the RP from server, not calculated by the RP; There are changes to the signature protocols of authentication and signature requests. Below, sequence diagrams are given along with explanations of the differences. The following diagram describes the notification based flow for the authentication session. The following sequence diagram illustrates the notification based signing flow. The following sequence diagram illustrates the device link based certificate choice flow being linked to a notification based signing flow. There are separate signing protocols for authentication and signature requests (see signature protocols for details). In RP API v3 notification based authentication requests, RP must compute verification codes (VC) for each authentication request, so the user can bind together the session on the browser or RP app and the authentication request on the Smart-ID app. The VC is computed as follows: Calculate SHA-256 from the rpChallenge, extract 2 rightmost bytes from the result, interpret them as a big-endian unsigned integer and take the last 4 digits in decimal form for display. SHA-256 must be used to calculate the VC. Please keep in mind that the rpChallenge is the real rpChallenge byte value (for example, the byte array returned from the SecureRandom() or equivalent method), not the Base64 encoded form used for transport or the popular hexadecimal representation. The VC value must be displayed to the user in the browser together with a message asking the end user to verify the code matches with the one displayed on their mobile device. The user must not proceed if these don’t match. integer(SHA-256(rpChallenge)[-2:-1]) mod 10000 Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.math.BigInteger; import java.nio.charset.StandardCharsets; import java.security.MessageDigest; import java.util.Base64; public class NotificationVerificationCode { public static void main(String[] args) throws Exception { String rpChallengeBase64 = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; byte[] rpChallengeBytes = Base64.getDecoder().decode( rpChallengeBase64 ); MessageDigest md = MessageDigest.getInstance(\"SHA-256\"); md.update(rpChallengeBytes); byte[] sha256Hash = md.digest(); BigInteger LAST_2_BYTES_BITMASK = new BigInteger(\"65535\"); BigInteger result = new BigInteger(sha256Hash) .and(LAST_2_BYTES_BITMASK) .mod(new BigInteger(\"10000\")); String verificationCode = String.format(\"%04d\", result); System.out.println(verificationCode); } } <?php $rpChallengeBase64 = base64_decode('GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='); $sha256Hash = hash('sha256', $rpChallengeBase64, true); $result = hexdec(bin2hex(substr($sha256Hash, -2))) % 10000; $verificationCode = sprintf('%04d', $result); echo $verificationCode; ?> import base64 import hashlib rp_challenge_base64 = b\"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" rp_challenge_bytes = base64.b64decode(rp_challenge_base64) sha256_hash = hashlib.sha256(rp_challenge_bytes).digest() result = int.from_bytes(sha256_hash[-2:], byteorder='big') % 10000 verification_code = f\"{result:04d}\" print(verification_code) package main import ( \"crypto/sha256\" \"encoding/base64\" \"fmt\" ) func main() { var rpChallengeBase64 string = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" var rpChallengeBytes, err = base64.StdEncoding.DecodeString(rpChallengeBase64) if err != nil { panic(err) } var sha256Hash [32]byte = sha256.Sum256(rpChallengeBytes) var result int = int(sha256Hash[len(sha256Hash)-2])<<8 + int(sha256Hash[len(sha256Hash)-1]) result %= 10000 var verificationCode string = fmt.Sprintf(\"%04d\", result) fmt.Printf(\"%s\\n\",verificationCode) } use base64::decode; use sha2::{Sha256, Digest}; fn main() { let rp_challenge_base64: &str = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; let rp_challenge_bytes = decode(rp_challenge_base64).unwrap(); let sha256_hash = Sha256::digest(&rp_challenge_bytes); let result = (((sha256_hash[30] as u16) << 8) + (sha256_hash[31] as u16)) % 10000; let verification_code: String = format!(\"{:04}\", result); println!(\"{}\", verification_code); } import java.math.BigInteger import java.nio.charset.StandardCharsets import java.security.MessageDigest import java.util.Base64 fun main() { val rpChallengeBase64: String = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" val rpChallengeBytes: ByteArray = Base64.getDecoder().decode(rpChallengeBase64) val sha256Hash: ByteArray = MessageDigest .getInstance(\"SHA-256\") .digest(rpChallengeBytes) val LAST_2_BYTES_BITMASK: BigInteger = BigInteger(\"65535\") val result: BigInteger = BigInteger(sha256Hash) .and(LAST_2_BYTES_BITMASK) .mod(BigInteger(\"10000\")) val verificationCode = \"%04d\".format(result) println(verificationCode) } using System; using System.Security.Cryptography; public class NotificationVerificationCode { public static void Main(string[] args) { string rpChallengeBase64 = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; byte[] rpChallengeBytes = Convert.FromBase64String(rpChallengeBase64); using (SHA256 sha256 = SHA256.Create()) { byte[] sha256Hash = sha256.ComputeHash(rpChallengeBytes); int result = ((sha256Hash[30] << 8) + (sha256Hash[31])) % 10000; string verificationCode = result.ToString(\"D4\"); Console.WriteLine(verificationCode); } } } const crypto = require('crypto'); const rpChallenge = Buffer.from('GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==', 'base64'); const sha256 = crypto.createHash('sha256'); sha256.update(rpChallenge); const sha256Hash = sha256.digest(); const result = sha256Hash.readUInt16BE(30) % 10000 .toString() .padStart(4, '0'); console.log(result); require 'base64' require 'digest' rp_challenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" sha256_hash = Digest::SHA256.digest(Base64.decode64(rp_challenge)) last_2_bytes = sha256_hash[-2..-1].unpack('n*').first result = (last_2_bytes % 10_000).to_s.rjust(4, '0') puts result Example 1. Verification code 7180 In RP API v3 notification based signature requests, verification codes (VC) are not generated by RP based on the DTBS (data-to-be-signed), but are returned from the server to RP for security reasons. Verification codes are only relevant for the notification based flows. Currently, there is only one supported verification code type: numeric4 The returned verification code consists of 4 numbers. It must be shown to the user as it is received from the server.","title":"Notification based flows","component":"rp-api","version":"3.1.3","name":"notification_based_flows","url":"/rp-api/notification_based_flows.html","titles":[{"text":"Flow diagrams","hash":"_flow_diagrams","id":1},{"text":"Signature protocols","hash":"_signature_protocols","id":2},{"text":"Verification codes for authentication requests","hash":"verification_codes_for_authentication_requests","id":3},{"text":"Verification codes for signature requests","hash":"verification_codes_for_signature_requests","id":4}]},"28":{"id":28,"text":"The Relying Party API provides five different types of endpoints. The first four are POST requests that return a sessionID and the fifth is a GET request used to query for the result based on the sessionID. The POST v3/authentication/* session endpoints are used to log a user onto a system or otherwise verify the identity of a user; the POST v3/signature/* session endpoints are used to create digital signatures; the POST v3/signature/certificate-choice/* session endpoints are used when the document number is not known immediately prior to the signature session and the user’s signing certificate is required to create the object that will be signed; the POST v3/signature/certificate/{document-number} endpoint is used to obtain the signing certificate of the requested document number; finally, the GET v3/session/{sessionID} status endpoint provides the result of the above sessions. The implementation details are described on the OpenAPI specification page. There are two types of flows that can be used in v3/authentication/*, v3/signature/* and v3/signature/certificate-choice/* sessions - the device link based flow and the notification based flow. IMPORTANT In order to improve security and prevent phishing attacks, it is recommended to only use device link based flows or only allow notification based flows on devices and browsers that have successfully completed a device link based flow beforehand. It is up to the RP to decide how to securely identify such devices/browsers and tie them to the Smart-ID document-number by utilizing browser cookies, local app storage or other means. For example using the User-Agent field for device/browser identification is not secure and should be avoided as it can be easily spoofed by a malicious party. There are different ways to reference users - via their issued identifier, a document number linking a specific account or even not at all (in case of device link based flows). The different object references are described on the OpenAPI specification page. IMPORTANT Once a user has been identified within the RP session, then in subsequent signing, certificate-choice and re-authentication session requests the document number reference should be used. The main use cases and which sessions and flows to use are described below. Utilizing the RP API as described below provides the best user experience and security. In the URL examples below and other pages BASE refers to the RP API base address https://rp-api.smart-id.com The following diagram shows main authentication flows and which endpoints to use. The following diagram shows main signature flows and which endpoints to use. Use case: The RP session is on a separate device from the mobile phone where the Smart-ID app is installed. For example, the user is using a PC browser to access an RP website or a tablet to access an RP application. Use case: The RP frontend (whether an RP app or website accessed by a mobile browser) resides on the same mobile device as the Smart-ID app. The end user is using a mobile app or RP detects that the user is on a mobile browser so it can be assumed that the user intends to use the Smart-ID app on a same device. Strongly prefer the BASE/v3/*/device-link/anonymous endpoints for same-device use cases unless the user’s document-number has already been established for the current session. These endpoints provide a superior user experience as no user identifier entry is required while the device-links with callbacks provide the best security protections. However, a fallback option should also be provided to switch to the cross-device use cases. Using the device link based flow with QR codes is the most secure option and should be preferred. RP may call the anonymous device link based authentication session endpoint and display a dynamic QR code that the user must scan with the Smart-ID app or show a same-device (Web2App, App2App) link the user can interact with. BASE/v3/authentication/device-link/anonymous Instead of using the anonymous authentication session endpoint, the RP may request the user to enter their user identifier and utilize the non-anonymous authentication session endpoint. This may be beneficial when the RP utilizes custom usernames and has the users' identifiers stored internally. The RP may simply always ask the user for the identifier as well. BASE/v3/authentication/device-link/etsi/{id-etsi-qcs-SemanticsId-Natural} If there is a need to re-authenticate the user, the following endpoint should be used with the previously obtained document-number instead: BASE/v3/authentication/device-link/document/{document-number} Notification based authentication session endpoint can also be used for the same purpose. Using a notification based authentication session endpoint triggers a push notification to all the user’s devices instead of the user scanning the QR code or clicking the same-device link. BASE/v3/authentication/notification/etsi/{id-etsi-qcs-SemanticsId-Natural} If there is a need to re-authenticate the user, the following endpoint can be used with the previously obtained document-number instead: BASE/v3/authentication/notification/document/{document-number} If a user has already logged onto the RP app or website using Smart-ID authentication, the RP can call the certificate session endpoint to obtain the user’s signing certificate. As the document number is attained from the preceding authentication call, no user interaction is required for the certificate-choice session and the RP API can immediately provide the certificate. BASE/v3/signature/certificate/{document-number} The RP can then call the device link based signature session endpoint to sign using the same Smart-ID account that was used for authentication. BASE/v3/signature/device-link/document/{document-number} The notification based signature session endpoint can also be used for the same purpose. BASE/v3/signature/notification/document/{document-number} If possible, the Smart-ID authentication should be performed before signing and (and after that is completed, instructions in Signing with prior Smart-ID authentication should be followed). In case no prior Smart-ID authentication has taken place, and certificate is required, the anonymous device link based certificate-choice session endpoint should be used. BASE/v3/signature/certificate-choice/device-link/anonymous Immediately after receiving the response with the certificate, RP must call the notification based linked signature session endpoint and provide the mandatory linkedSessionID parameter (session ID of the previous certificate-choice session) to connect the signature and certificate-choice sessions. BASE/v3/signature/notification/linked/{document-number} The combination of device link based certificate-choice and notification based linked signature session endpoints provides the optimal user experience where Smart-ID app is launched only once and a VC code is not shown. If the certificate-choice session was completed using a same-device device link, after the flow is completed, the Smart-ID app will launch the callbackUrl given in the device link based certificate-choice. NOTE In the flow described above, it is recommended to stop showing the QR code, Web2App or App2App link in the RP UI after the certificate is obtained. If the certificate is not required, or is already known, the device link based signature session endpoint should be called instead. BASE/v3/signature/device-link/etsi/{id-etsi-qcs-SemanticsId-Natural} NOTE There is no anonymous device link based signature session endpoint, since in all practical signing use cases the user’s identity is known beforehand. Notification based certificate-choice session endpoint can also be used for the same purpose but is not recommended. BASE/v3/signature/certificate-choice/notification/etsi/{id-etsi-qcs-SemanticsId-Natural} Immediately after receiving the response with the certificate, RP must display the VC and call notification based signature session endpoint. BASE/v3/signature/notification/document/{document-number} IMPORTANT Notification based certificate-choice cannot be connected to notification based linked signature session endpoint with linkedSessionID. If notification based certificate-choice is used, VC code must still be shown to the user, and in same-device use cases, there might be usability issues with VC being shown too fast or not being shown at all (this is especially problematic for interactions involving confirmationMessageAndVerificationCodeChoice).","title":"Overview","component":"rp-api","version":"3.1.3","name":"overview","url":"/rp-api/overview.html","titles":[{"text":"Cross-device use cases","hash":"cross_device_use_cases","id":1},{"text":"Same-device use cases","hash":"same_device_use_cases","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Notification based authentication","hash":"_notification_based_authentication","id":4},{"text":"Signing","hash":"_signing","id":5},{"text":"Signing with prior Smart-ID authentication","hash":"signing_with_prior_authentication","id":6},{"text":"Notification based signing with prior Smart-ID authentication","hash":"_notification_based_signing_with_prior_smart_id_authentication","id":7},{"text":"Signing without prior Smart-ID authentication","hash":"_signing_without_prior_smart_id_authentication","id":8},{"text":"Notification based signing without prior Smart-ID authentication","hash":"_notification_based_signing_without_prior_smart_id_authentication","id":9}]},"29":{"id":29,"text":"After receiving the transaction response from the session status API call the following algorithm must be used to decide if the authentication result is trustworthy and what the identity of the authenticating end user is, if the signature result is valid. In App2App and Web2App flows, the response verification step must be performed after the user has returned via the callback URL, as described in Callback URLs page. The following steps perform the response verification algorithm. Note that the algorithm is applicable to both authentication and signature session flows. Specific differences, such as the conditional execution of Steps 1 and 2, are noted within the steps. Session secret verification (applicable only for sessions with flow type Web2App or App2App): Calculate the SHA-256 digest of the sessionSecret string received in the initial request. Encode the raw bytes of the calculated hash using Base64URL. Obtain the sessionSecretDigest value from the callback URL parameter visited by the user upon returning to the RP website or application. Verify that this Base64URL encoded hash result exactly matches the sessionSecretDigest obtained from the callback URL. User challenge verification (applicable only for authentication sessions with flow type Web2App or App2App): Obtain the userChallengeVerifier value from the callback URL parameter visited by the user upon returning to the RP website or application. Calculate the SHA-256 digest of the received userChallengeVerifier string. Encode the raw bytes of the calculated hash using Base64URL. Verify that this Base64URL encoded hash result exactly matches the signature.userChallenge string provided in the JSON response’s signature object. Initial session response check: Verify the state field in the JSON response is exactly COMPLETE. Verify the result.endResult field is exactly OK. Verify the signatureProtocol field is exactly ACSP_V2 in case of authentication or RAW_DIGEST_SIGNATURE in case of signature. Ensure the cert, signature, and result objects are present and not null. Certificate Chain Validation and Trust: Decode the Base64 encoded end-entity certificate string from cert.value and parse it into a standard X.509 certificate representation. The RP API provides only the end-entity certificate, the Relying Party must have the necessary root and intermediate CA certificates configured locally to allow the library to build the full certificate chain. For these certificates, see Certificates page. Using a standard cryptographic library, initiate the validation of the certificate chain starting from the end-entity certificate. Provide the end-entity certificate to the library, along with configuring it with the set of trusted CA certificates (trust anchors). It’s important to note that some libraries use the system certificate store in addition to the provided CA certificates, this should be disabled and only the explicitly configured CA certificates should be used. For each certificate in the constructed chain (end-entity certificate and all intermediate CA certificates), perform the following checks. A standard cryptographic library will typically perform the following checks as part of its overall chain validation routine and report the result as a success or failure. Verify the certificate’s digital signature using the public key of its issuer certificate. Verify the certificate’s validity period against the current time, i.e., not before the notBefore date and not after the notAfter date. Verify that the certificate has not been revoked. This check should be performed using the Online Certificate Status Protocol (OCSP), utilizing the Authority Information Access (AIA) extension within the certificate to locate the OCSP responder URL. If OCSP fails or is unavailable, Certificate Revocation List (CRL) checking should be used as fallback. Note: Revocation checks (OCSP/CRL) are not performed on self-signed root CA certificates configured as trust anchors. Intermediate CA certificates can be revoked and must be checked. Note: OCSP responses are digitally signed. The certificate chain of the OCSP responder itself should also be verified, ensuring it is trusted and authorized to provide status for the certificate being checked. Verify basic constraints are appropriate: Intermediate CA certificates must have the Basic Constraints extension present with the cA boolean set to TRUE. For end-entity certificates, the Basic Constraints extension should either absent, or if present, its cA boolean should be set to FALSE. Smart-ID Scheme Identification (End-Entity Certificate): Before checking specific purposes, verify that the end-entity certificate belongs to the Smart-ID scheme. Examine the Certificate Policies extension of the end-entity certificate. The certificate must contain all the specific policy OIDs designated by SK ID Solutions for the Smart-ID scheme (as defined in Chapter 2.2.3 of the \"Smart-ID Certificate and OCSP Profile\" in Certificate Profiles page). These OIDs differentiate Smart-ID certificates from other types of certificates (e.g., Mobile-ID, Estonian ID-card). The Relying Party must consult the current official SK ID Solutions Certificate Policies for the definitive list of Smart-ID scheme policy OIDs. For these certificate policies, see Certificate Policies page. If not all the recognized Smart-ID scheme policy OIDs are present, the certificate should not be processed as a Smart-ID certificate, and the verification should fail for this context. End-Entity Certificate Purpose Validation (Smart-ID Context): Examine the end-entity certificate for extensions and attributes required by the certificate profile. For these certificate profiles, see Certificate Profiles page. For Smart-ID authentication: To confirm the certificate is suitable for authentication, it must contain one of the following: The digitalSignature key usage and the Smart-ID authentication (1.3.6.1.4.1.62306.5.7.0) Extended Key Usage which is present in certificates issued April 2025 onwards. The digitalSignature, keyEncipherment, dataEncipherment key usages and the id-kp-clientAuth (1.3.6.1.5.5.7.3.2) Extended Key Usage which is found in older, still valid certificates issued before April 2025. For digital signing: Check for appropriate key usage nonRepudiation. Assurance Level Check: Extract the assurance level string from cert.certificateLevel (e.g., ADVANCED, QUALIFIED). For qualified certificates, check that the extension values as defined by the certificate profile exist within the certificate from cert.value. Compare this level against the minimum assurance level required by the RP for the specific context or transaction. Ensure the certificate’s level meets or exceeds the required level (note that ADVANCED < QUALIFIED). Identity Match Check: Extract the authenticated user’s identifier from the end-entity certificate. For Smart-ID certificates serialNumber (OID 2.5.4.5) under Subject DN contain the national identity code, for example PNOEE-30001010004. If the RP initiated the authentication or signing for a specific known user, verify that the extracted identifier matches the expected identity for that session. Verification of signature Object (authentication/signature session): Only for authentication session: Reconstruct the exact ACSP_V2_payload string that was signed, as described under ACSP_V2 digest calculation. This is done by concatenating the fields in order, separated by the vertical bar character '|' (U+007C): 'smart-id'|'ACSP_V2'|serverRandom|rpChallenge|userChallenge|BASE64(relyingPartyName)|BASE64(brokeredRpName)|BASE64(SHA-256(interactions))|interactionTypeUsed|initialCallbackUrl|flowType Only for signature session: Use the data-to-be-signed, a digest of which was initially sent when initiating the signature session (as described in RAW_DIGEST_SIGNATURE signature protocol). Decode the signature value from signature.value using Base64 decoding. Obtain the public key from the parsed end-entity user certificate (from Step 4). Only for authentication session: Using a cryptographic library, verify the decoded signature against the UTF-8 bytes of the reconstructed ACSP_V2_payload string. Only for signature session: Using a cryptographic library, verify the decoded signature against either the data-to-be-signed or the hash of the data-to-be-signed (there are libraries that provide options for either). Ensure the verification uses the algorithm specified in signature.signatureAlgorithm (e.g., rsassa-pss) and correctly applies the parameters from signature.signatureAlgorithmParameters (e.g., hash algorithm like SHA-512, MGF1 hash like SHA-512, salt length like 64, and the trailer field 0xbc). Session Management (Only for authentication sessions. Important: only perform if all the preceding steps (1-9) were successful): Invalidate any previous, unauthenticated session identifier associated with the user’s interaction (e.g., browser cookie or API token used before successful authentication). Generate a new, secure, and unique session identifier representing the now authenticated state. Associate the authenticated user’s identity (from Step 8) and potentially the assurance level (from Step 7) with this new session identifier in your server-side session store. For further details and security considerations see also the Secure implementation guide.","title":"Response verification","component":"rp-api","version":"3.1.3","name":"response_verification","url":"/rp-api/response_verification.html","titles":[{"text":"Response verification steps","hash":"_response_verification_steps","id":1}]},"30":{"id":30,"text":"IMPORTANT This document has not been updated for RP version 3. After the updates it will be restructured and integrated into the rest of the RP API documentation. Although ID-card, Mobile-ID and Smart-ID are all secure technologies for authentication and digital signing, e-service providers (Relying Parties, RPs) need to consider potential risks, which are associated with digital authentication solutions. It is important that RPs implement additional security mechanisms to help users to understand the context of their actions and to protect them from possible attacks. For example, there might be a malicious phishing website controlled by attacker between user’s browser and the RP’s website. This document lists attacks that can be launched against RP’s website or RP’s app, when the RP is using ID-card, Mobile-ID or Smart-ID for authentication and digital signatures. Both user interface options (browser and app) are considered and when it is not specifically stated, attacks and proposed countermeasures are relevant for both cases. Effective security measures for mitigating attacks are described in the following sections. Some security conscious RPs have already deployed them. Others should also consider implementing and deploying these measures and defences to prevent cybercriminals from being successful in their actions. Guidelines are written in affirmative and imperative mood, however, not all security measures are considered mandatory for all RPs. Nevertheless, there’s nobody else, who can implement those defences and security measures on their behalf. It is the relying party’s opportunity and responsibility to carefully assess these risks and select appropriate countermeasures. All feedback to this document and proposed security measures is much appreciated. Please send it to the e-mail address support@sk.ee on the Secure Implementation Guidance. This section describes common attacks, which have been tried in the past against RPs, against their users and against SK ID Solutions. Giving a brief overview of the attacks is necessary as it may be the case some RPs are not aware of some of the attacks and may erroneously think they are safe. Also, not all countermeasures are effective against every possible attack. RPs will need to consider, which attacks could have the most devastating impact on their business and therefore, which countermeasures should be deployed first. Attacks are described in a generic way and don’t differentiate between browser, app, ID-cards, Mobile-ID and Smart-ID. User starts the login process on the RP’s website or app. They enter national identity code, but sometimes make a small error in the code. By random chance the entered incorrect code corresponds to another real person, who also has a Smart-ID or Mobile-ID account. Smart-ID/Mobile-ID system initiates the authentication transaction for the wrong user and the phone of another user wakes up and displays the authentication consent screen. It has occurred in the past the other user accepted the foreign consent dialog without verifying it and without having second thoughts confirmed it by entering PIN1, behaving almost like on auto-pilot. The session of the original user was then authenticated by the RP’s website, although the original user is logged into the wrong person’s account. There was no malicious attempt in the beginning, it was purely accidental error by both users. In this case, an attacker is specifically targeting some particular user. The attacker tries to irritate and to annoy the user by repeatedly initiating an authentication session with the user’s identity. This sends nefarious Smart-ID/Mobile-ID notifications to the user’s phone and disturbs normal phone usage. Attacker could ask for a ransom to cease the attack or simply cause inconvenience as a revenge. In a more advanced situation, an attacker targets the RP itself and starts many authentication sessions with the app or website of RP, using some scripted and automated tools. The attacker could use random usernames and generated national identity codes and this results nefarious notifications on phones of multiple users and disturbs normal phone usage. Not only does this cause inconvenience to users, but also, this kind of attack could result in a large number of complaints to SK ID Solutions and SK could be forced to temporarily cut off the Smart-ID and/or Mobile-ID service to the RP. This results in the outage of the RP’s website or app, because other users cannot login either. Attacker could ask for a ransom to cease the attack or simply cause damage as a revenge. An advanced version of this attack targets multiple RP’s and in such a widespread attack, SK could be forced to temporarily cut off the Smart-ID and/or Mobile-ID service to those RPs, who are not able to filter the malicious authentication attempts by themselves. An attacker is trying to extract and deduce information about Mobile-ID/Smart-ID users through the RP’s website or other information systems or software. For example, the attacker initiates a Smart-ID authentication session on the RP’s website with a generated national identity code. If no error message is returned, the attacker can deduce that this particular user has a Smart-ID account and it may be worthwhile to try some further attacks against that particular user. In more advanced situation, the attacker may be able to use the RP’s information system to download the user’s signing certificate. Phishing attacks are intended to confuse users and to gain access to the RP’s e-service under the user’s name. Usually, these attacks are automated and distributed in large quantities via spam e-mails. The attacker hopes some percentage of users, who are not aware of risks and are not careful, will \"take the bait\" and be \"hooked\". Hence, the name \"phishing\" (fishing). However, e-mail and browsers are not the only attack vector. In case the RP requires digital signatures in order to commit an operation or transaction on the e-service, the attacker tries to further confuse the user and will try to get the user to enter PIN2 for the signing request as well. Previously, phishing has been attempted in a manual (non-automated) ways and with simple (static) counterfeit websites. However, with advances in attack tools, more powerful attackers must be considered. Nowadays, they are able to build authentic looking and well-functioning dynamic websites, which proxy authentic HTML pages and images from the original website of the RP. General steps of such kind of phishing attacks are following: An attacker sends users a phishing e-mail with a URL to the proxy website and waits until the user connects to the attacker’s website. Automatic tools then connect from the proxy website to the original website of the RP. The user enters all the required information (username, national identity code, …​) and starts authenticating on the attacker’s website. The proxy website sends the same information to the original website and starts the same kind of authentication session there as well and mediates back the correct Mobile-ID/Smart-ID verification code and any other displayed information. The user sees the authentication dialog on the mobile device, with correct serviceName, correct displayText and correct verification code. The user will consent to the authentication dialog and enters PIN1, although the attacker’s proxy will be logged in to the user’s account at the RP’s website. After logging in, the attacker’s proxy waits until the user initiates the operation or transaction and changes details of the transaction on the fly (for example, change the destination bank account number of the transfer order) and starts the changed transaction on the original website. The user enters the PIN2 to confirm the transaction, but it will be the attacker’s changed transaction that will be executed. An attacker makes a phone call to a user, posing as an employee of the RP (or some other authoritative person, for example, police officer) and persuades the user that they need to perform a Mobile-ID/Smart-ID authentication in order to confirm something fictional. General steps of such kind of phishing attacks are following: An attacker gathers the required information (username, national identity code, …​) from the user or has already them at hand before the phone call. The attacker navigates with the browser to the RP’s original website and starts the authentication session under the name of the user. Website initiates the Mobile-ID/Smart-ID authentication and displays the verification code to the attacker. (Instead of the website, the attacker could use the RP’s app as well.) The attacker informs the user that Mobile-ID/Smart-ID authentication needs to be performed and tells them the verification code and asks to complete the authentication on the mobile device. The user verifies the authentication dialog on the device, consents and enters PIN1. The Browser of the attacker is logged into the RP’s website under the user’s identity. The attacker starts an operation (for example, a transfer order) on the RP’s website. The website initiates the Mobile-ID/Smart-ID digital signature operation and displays the verification code to the attacker. The attacker informs the user, still on the phone call, that Mobile-ID/Smart-ID digital signature needs to be created as well, and tells them the verification code and asks to complete the signing operation on the mobile device. The user verifies the digital signature dialog on the mobile device, consents and enters PIN2. The operation on the website of the RP is executed. This section lists security measures, which can be deployed by the RP itself in order to protect from threats and attacks listed in the previous section. This table describes proposed security measures. It includes the following information: In case the proposed security measure is considered mandatory for customers of SK ID Solutions, it is marked as \"MUST\". In case it is recommended, it is marked as \"SHOULD\". Information whether the security measure can be applied to websites and/or apps. Most of the measures are universal, but there are specific measures, such as \"keeping track of trusted browsers\" that apply only in certain situations. Information whether the security measure can be applied in case of ID-card, Mobile-ID and/or Smart-ID integration. Security measure Mandatory Applicable with websites Applicable with mobile apps Applicable with Smart-ID Applicable with Mobile-ID Applicable with ID-card secure TLS-CCA SHOULD yes no no no yes good serviceName and displayText MUST yes yes yes yes no select correct VC SHOULD yes yes yes no no display last authentication details SHOULD yes yes yes yes yes display history of operations SHOULD yes yes yes yes yes display generic error messages MUST yes yes yes yes no include details in displayText MUST yes yes yes no no ask for non-public id SHOULD yes yes yes yes no track trusted browsers SHOULD yes no yes yes no track suspicious IP-addresses SHOULD yes yes yes yes yes monitor e-service usage MUST yes yes yes yes yes respond to incidents MUST yes yes yes yes yes This table gives an overview of security measure relations to the described threats. In case there’s a direct mitigation effect and the measure helps to prevent the attack, the cell has \"yes\". In case the effect is not as strong or in case the security measure only helps to detect the attack, the cell has \"some\". In case there’s no relation, the cell has \"no\". Security measure Login by mistake User annoyance DOS against RP User data mining Phishing with proxy website Social engineering over the phone secure TLS-CCA no no no no some no good serviceName and displayText yes no no no some some select correct VC yes no no no no no display last authentication details some no no no some some display history of operations some no no no some some display generic error messages no some some some some some include details in displayText some no no no yes yes ask for non-public id yes yes yes yes no some track trusted browsers some no no no some no track suspicious IP-addresses some some some some some no monitor e-service usage no some some some some some respond to incidents yes yes yes yes yes yes If RP uses TLS Client Certificate Authentication (TLS-CCA) with smart-cards, issued by Estonian government as identity cards, it is important to implement the authentication securely. RP must implement the following checks and controls. Using simple means just to include a number of CA certificates in the TLS server configuation is not enough. SK ID Solutions uses many CAs and TLS server needs information about them all in order to build trust chains. However, not all of the CAs are used to issue ID-card certificates and this information needs to be manually added. It is important to explicitly specify, which CA-s are trusted to issue the certificates for the CCA authentication and which CAs are not trusted to do that. For example the OpenSSL utility can be used for that: cd /path/to/trusted_certificates_directory/ wget https://c.sk.ee/EE-GovCA2018.pem.crt wget https://www.sk.ee/upload/files/EE_Certification_Centre_Root_CA.pem.crt wget https://c.sk.ee/esteid2018.pem.crt ... openssl x509 -addreject clientAuth -trustout -in EE-GovCA2018.pem.crt -out EE-GovCA2018_trusted.pem.crt openssl x509 -addreject clientAuth -trustout -in EE_Certification_Centre_Root_CA.pem.crt -out EE_Certification_Centre_Root_CA_trusted.pem.crt openssl x509 -addtrust clientAuth -trustout -in esteid2018.pem.crt -out esteid2018_trusted.pem.crt ... rm EE-GovCA2018.pem.crt rm EE_Certification_Centre_Root_CA.pem.crt rm esteid2018.pem.crt Note that it is important to include the certificate of root CAs and implicitly configure clientAuth reject for them. When configuring Apache in this way, it is also neccessary to use the SSLCADNRequestPath directive, which specifies the list of acceptable CA-s, which are sent to the client over the TLS handshake. cd /path/to/client_request_CAs_directory/ wget https://c.sk.ee/esteid2018.pem.crt openssl rehash /path/to/client_request_CAs_directory/ After specifying trust settings for individual certificates, allow TLS server to only trust these CAs and to request specific certificates from clients (configuration example is given for Apache mod_ssl): #... SSLEngine on SSLCertificateFile ... SSLCertificateKeyFile ... SSLCACertificatePath /path/to/trusted_certificates_directory/ SSLCADNRequestPath /path/to/client_request_CAs_directory/ #... Web-eID provides authentication using a custom protocol instead of TLS CCA. When implementing it adhere to the requirements and configuration outlined in the documentation. Web-eID validation libraries handle correct verification of ID-card certificates on your behalf. Keeping the Web-eID software libraries updated is critical. https://web-eid.eu/ SK Identity Solutions provides OCSP service to check for the validity of issued certificates. More details are available at https://www.skidsolutions.eu/en/services/validity-confirmation-services/ Configuration example is given for Apache mod_ssl: #... SSLEngine on SSLOCSPEnable leaf SSLOCSPDefaultResponder \"http://responder.example.com:8888/responder\" SSLOCSPOverrideResponder on #... It is important to only accept these certificates, which correspond to production ID-cards, Digi-ID and other identity documents. An attacker could present other certificates as well and in some cases this might lead to a vulnerability. Issuance policy is recorded in the certificate extension X509v3 Certificate Policies and contains an OID identifier. Identifier values of issuance policies are listed at the page https://www.skidsolutions.eu/en/repository/CP/ and https://www.skidsolutions.eu/upload/files/SK-CPR-ESTEID2018-EN-v1_2_20200630.pdf. Following table compiles a helpful list of policies relevant to accept in the TLS-CCA authentication sessions. Name of the CP Issuing CA OID value (authentication certificate) CP for newer ID-card of Estonian citizen ESTEID2018 1.3.6.1.4.1.51361.1.1.1 CP for newer ID-card of EU citizen ESTEID2018 1.3.6.1.4.1.51361.1.1.2 CP for newer Digi-ID ESTEID2018 1.3.6.1.4.1.51361.1.1.3 CP for digital identity card of e-resident ESTEID2018 1.3.6.1.4.1.51361.1.1.4 CP for residence card of long-term resident ESTEID2018 1.3.6.1.4.1.51361.1.1.5 CP for residence card of temporary resident ESTEID2018 1.3.6.1.4.1.51361.1.1.6 CP for residence card of family members of citizen of EU ESTEID2018 1.3.6.1.4.1.51361.1.1.7 CP for diplomatic identity card ESTEID2018 1.3.6.1.4.1.51455.1.1.1 Unfortunately, filtering is not possible with only a TLS-server configuration. RP would need to export the full client certificate from the TLS session to the application server and then apply filtering with PHP or other applications. Configuration example with Apache mod_ssl: #... SSLEngine on #... SSLOptions +ExportCertData #... and source code example with PHP: $cert = getenv('SSL_CLIENT_CERT'); $x509 = openssl_x509_parse($cert); $certificatePolicies = 'Policy: 1.3.6.1.4.1.51361.1.1.1'; if(preg_match(\"/$certificatePolicies$/m\", $x509['extensions']['certificatePolicies']) == 0) { echo \"OK\\n\"; } Note that demo code examples only use a single OID value. Production systems would have to use the whole table. It is important to only accept these certificates, which have the \"TLS Web Client Authentication\" extension and are issued by trusted CAs. Partial configuration example for Apache: #... <Location \"/\"> Require expr \"TLS Web Client Authentication, E-mail Protection\" in PeerExtList('extendedKeyUsage') </Location> #... and partial configuration example for F5 BIG-IP loadbalancer: when CLIENTSSL_CLIENTCERT { HTTP::release if { [SSL::cert count] < 1 } { reject } set client_cert [SSL::cert 0] set clientCA [X509::cert_fields $client_cert [SSL::verify_result] issuer ] #If issuer contains \"-SK 20\" assume it is a SK certificate and process further if {($clientCA contains \"-SK 20\") } { if {($clientCA contains \"ESTEID-SK 20\") } { #If issued by ESTEID check if it is mobile-id or not, mobile-ID profile doesn't have TLS web auth enabled if { !([X509::extensions $client_cert] contains \"TLS Web Client Authentication\") } { log local0. \"Invalid certificate used for authentication, IP: [IP::client_addr], Issued by: $clientCA\" reject } } else { #Not issued by ESTEID, shouldn't allow TLS auth log local0. \"Invalid certificate used for authentication, IP: [IP::client_addr], Issued by: $clientCA\" reject } } } serviceName is a short text string, displayed to the user in the Mobile-ID/Smart-ID authentication or digital signature consent dialog. It helps user to verify that the request is coming from a trusted source. serviceName will be displayed on the top of the consent screen, in bold letters. SK ID Solutions have established basic requirements that serviceName should contain one of the following: name of the company, a DNS domain which your website is using, a registered trademark, associated with the website or app, which the user is interacting with, a brand name, associated with the website or app, which the user is interacting with. Generic serviceName, which does not help user to distinguish between different RP-s, are not accepted (such as \"login\", \"authentication\", etc). displayText is a short text string, displayed to the user in the Mobile-ID or Smart-ID authentication or digital signature consent dialog. It helps the user understand the context of the operation. displayText will be displayed on the authentication or signing consent screen, under the verification code number. The RP can use this to distinguish between the different information systems or different services within the RP, when requesting the authentication. When requesting a digital signature, the RP can use this to give information about the nature of signature, such as the name of the document to be signed or information about the transfer order to be executed. For example, in case the RP is using Mobile-ID or Smart-ID to authenticate users, who are calling the RP’s helpdesk via phone, these authentication requests must use different displayText than requests sent by the RP’s website. This way the user has greater confidence, that the person on the phone (a helpdesk agent, who might be out-sourced from an external company) is not logging into the website of the RP under the name of the user. With signing operations, there’s also possibility to use much longer and descriptive displayText. For more details, see section Defence: show details of transactions in the displayText. At the basic security level, Smart-ID is using a 4-digit verification code, which is displayed to a user on the RP’s website and on the Smart-ID app. The user is expected to match these and thus verify they consent to the correct authentication or signature request. At more advanced security level, the RP can request the Smart-ID app should display three verification codes (one correct code and two random codes) and the user is required to select the correct code, which is displayed by the RP’s website or app. In case the user doesn’t choose the correct code, the Smart-ID app aborts the request. This can be requested in the Smart-ID RP API call using the confirmationMessageAndVerificationCodeChoice interaction type. More information in the API documentation: https://github.com/SK-EID/smart-id-documentation/tree/v2 In case the RP is using an app it is recommended to include a small delay after showing the verification code to user and before starting the transaction on the RP API. This way, the user has additional time to look at the verification code on the RP’s app, before the screen of the Smart-ID app is displayed. In order to increase trust and confidence in users, it is useful to show details of the last successful session. The RP must prominently display the information about the last authentication, including such elements: Date and time of the last successful authentication. Geographic location (country) of the last successful authentication. Short human readable description of the browser last used for successful authentication (such as \"Chrome on Windows\", \"Safari on Mac\"), deduced from the browser’s user-Agent header. This will help users to recognise the last login details and increase their confidence that nobody else has accessed their account after their last login. If they don’t recognise the last session, the user can contact the RP’s user support and raise the alarm. With password-based authentication systems, it was a good practice (https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#authentication-responses) to show same error message for two cases: username was incorrect and the account didn’t exist, and username was correct, but the password was incorrect. This helps to prevent the user account enumeration (WSTG-IDNT-04). With Mobile-ID and Smart-ID services, following the same principle helps to prevent data mining for attack preparation. It also makes some phishing attacks more difficult. Mobile-ID RP API and Smart-ID RP API return different error codes to help debuging: Mobile-ID RP API, HTTP 200, \"result\": \"NOT_MID_CLIENT\" — \"Given user has no active certificates and is not MID client\" Smart-ID RP API, HTTP 404 — \"object described in URL was not found, essentially meaning that the user does not have an account in Smart-ID system\" Smart-ID RP API, HTTP 471 — \"No suitable account of requested type found, but user has some other accounts\" However, it is the reponsibility of the RP not to show different UI messages for those cases, but to follow generic, uniform pattern: Request new authentication session from the Mobile-ID or Smart-ID API with the user identifier. In case the API responded with the new authentication session: Display the text \"Authentication session started, verification code 1234\" with the value of the verification code given by Mobile-ID or Smart-ID API In case the authentication is successful, continue with the login In case the authentication session is timed out after 120 seconds, show the error message \"User account not found or user didn’t responded in time\" In case the API responded with \"NOT_MID_CLIENT\" or \"HTTP 404\" or \"HTTP 471\": Generate random verification code value Display the text \"Authentication session started, verification code 1234\" Wait for 120 seconds and then show the error message \"User account not found or user didn’t responded in time\" Good design of the website should include a way for a user to see the history of their actions. For example when the user logged in, what operations the user has executed, what orders the user has placed and so on. This provides the user visibility and transparency about what is happening on the user’s account. It also provides an opportunity to see actions or operations the user doesn’t recognise and that could point to security incidents. On the other hand, when the user does recognise all the history, it will increase the trust in the website and services of the RP. Also, the RP must allow the user to download digitally signed documents that were created after entering PIN2. This applies to any operation that uses PIN2 for additional consent. For example, after signing the terms and conditions for the e-service or when signing a transfer order on the RP’s website the user must be allowed to download the signed document. This allows the signer to verify contents of the signed document. displayText is a short text string, displayed to a user in the Smart-ID signing consent dialog that helps the user understand the context of the operation. There are two options for the string length of the displayText: short displayText string can be up to 60 characters and it will be displayed as a single line below the verification code, on the same screen as the keypad for entering PIN2. longer displayText string can be up to 200 characters and it will be displayed on a separate screen to gain the user’s attention. In case there’s an advanced phishing attack in progress and an attacker is presenting a modified website to the user, with the modified operation details, such as destination account number of the transfer order, the user cannot detect the attack solely with the user’s browser. However, the string of the displayText is coming directly from the RP and the attacker cannot modify it to deceive the user. This way, the RP can use a secondary authentic channel to allow the user to verify and confirm the operation. A common way to start the Mobile-ID or Smart-ID authentication is to ask for a user identifier, either the phone number or national identity number. However, these numbers are not secret and even though they are not outright published, there are ways for an attacker to obtain the national identity number of the user and start authenticating on their behalf. It is also possible for the attacker to create automated scripts to simply generate a list of numbers and try them all to start many authentication sessions under the name of multiple users. A better approach is to ask for an additional identifier. With Mobile-ID, a good option is to ask for both phone number and national identity number. The Mobile-ID API verifies that those identifiers match with each other and doesn’t initiate the authentication session otherwise. With Smart-ID, a good option is to ask for national identity number and some not-so-public identifier as well. It could be a username, which the users can select by themselves, the account contract number or something else only the user knows and is convenient for them to remember and type. A useful security measure is to keep track of trusted browser instances for each user. This allows the RP to take different actions whether the user is connecting from their usual (trusted) browser or attempting to login from a previously unseen, unknown browser. In case of the latter an attacker may be attempting a phishing attack and the RP could ask for more information or alert the user. The tracking should be done with the HTTP cookie (or with similar client-side storage feature supported by modern browsers) with the content of randomly generated identifier. The status of each browser instance for the user is then tracked in the RP’s website database. The fact about placing such a cookie in the browser of the user must be declared in the public cookie policy. The browser cookie has to be set with Secure and HttpOnly flags. The scope of the cookie has to be the URL of the RP’s website. In case of a phishing attack, the proxied website will be setup on a different URL and the browser will not send the value of that cookie to the attacker’s website. Therefore, the attacker cannot pose to the RP’s website as the trusted browser. In order to manage the data associated with the tracking, each user account must have the following extra data for each browser which the user has connected from in the past: displayName — Human recognisable description of the browser, like \"Chrome on Windows\" or \"Safari on my work Mac\", etc. Simple names with tolerable errors could be generated automatically from the browser’s User-Agent header with the help of software libraries and toolkits. The RP could also allow the user to edit this field, so that the user can provide their own meaningful names. lastSeen — Timestamp, when that browser was last used by the user to connect to the RP’s website. hashedTrackingID — Hashed value of the randomly generated identifier. Length of the identifier should be at least 32 bytes. The Base64 encoded clear-text value of the identifier is placed in the browser’s cookie and the hashed value is stored in the database. Storing only hashed values makes the database leak less dangerous. Salting hashes, a common practice when when storing passwords, is not required, because trackingID is already long enough with random bytes and additional protection against brute-forcing is not essential. trustLevel — Information about whether that browser instance could be considered trusted or not. Proposed algorithm uses values \"seenOnce\", \"seenTwice\" and \"trusted\". The RP could use more levels if required. Note that in case multiple users are using the same browser instance then the same hashedTrackingID value will be stored for multiple user accounts. Care must be taken to lookup the correct record, based on the user account, which is starting the authentication. A general algorithm to keep track of the browsers and to manage the trustLevel is described below. When the user navigates with the browser to the RP’s website and requests the Smart-ID authentication, the following cases are possible: If the connecting browser’s trustLevel is not known (i.e. the browser didn’t send the cookie value or the cookie value doesn’t match any value of hashedTrackingID in the user’s account) and the user doesn’t have any other browser’s trustLevel as \"trusted\", proceed with the authentication as usual. After the successful authentication, the RP should update the browser’s trustLevel as \"seenOnce\". If the connecting browser’s trustLevel is not known and the user already has at least one other browser as \"trusted\", then the situation indicates a possible phishing attack. The RP should perform additional checks and controls. If the connecting browser’s trustLevel is \"trusted\", then the RP should proceed with the authentication. The situation indicates somewhat lower risk and the RP could decide not to execute some security measures, which are required otherwise, for example, asking the user to enter multiple identifiers. After successful authentication, the RP should update the lastSeen timestamp. If the connecting browser’s trustLevel is \"seenOnce\", then the RP should proceed with the authentication as usual. After the successful authentication, if the lastSeen timestamp was older than 24 hours, the browser’s trustLevel will be updated as \"seenTwice\". If the connecting browser’s trustLevel is \"seenTwice\", then the RP should proceed with the authentication as usual. After the successful authentication, if the lastSeen timestamp was older than 24 hours, the browser’s trustLevel will be set as \"trusted\". The described algorithm can be implemented and silently deployed by the RP without any additional security measures or checks actually performed in the first phase. Those browsers, which are regularly used by users, will eventually move to the \"trusted\" classification. In the next phase, additional security measures could be put into place and when the new connection is being made from an unknown browser, additional security measures will kick in and protect users. The following sections describe such additional security measures. When the RP detects that a user has started authenticating from a known browser, the RP could withhold the requirement to ask for multiple user identifiers. Good simplification is to only require one identifier, such as the username of the user. After the username is entered on the RP’s website, the RP can lookup the user’s account information from the internal database and then initiate the Smart-ID authentication with the national identity number. However, when the RP detects the user has started an authentication session from an unknown browser, while he usually connects to the website from a different browser, the RP can ask for additional details from the user, to verify that it is indeed the user who is starting the authentication. Such details could be to the national identity number or something else, which the user knows, but the attacker might not know. When the RP detects that a user has started authentication from an unknown browser, while he usually connects to the website from a different browser, the RP can use the longer displayText and send an alert to the user. The alert would be sent in the same authentication session request as usual, but it will be displayed on a separate screen to the user during the authentication consent dialog. The RP could use a message, such as: \"Authentication started from an unknown browser. Are you using a new computer?\", or \"It seems that you are not using your regular browser. Are you using a new computer and are you sure that you are on the correct website www.example-rp.com?\" or something similar. The message will be displayed on a separate screen from the usual PIN1 entry dialog and the user will be asked to either confirm or cancel. In case the user is really connecting from a new computer and is aware of this, they can press \"Confirm\". The authentication then proceeds, the user can enter PIN1 and the user’s browser will be logged in to the user’s account. However, if this comes to the user as a surprise and the user is actually using their regular computer, the user can press \"Cancel\" and investigate further. When a user connects to the RP’s e-service, either with a browser or with the RP’s app, it connects from the IP-address of the user’s device. In case an attacker makes the connection by itself or in case the attacker proxies the connection, the RP will see the attacker’s IP-address. There are commercial services, which provide the general information about IP-addresses. For example, they can tell if the IP-address is known to be used for the following: Sending spam messages, which may indicate the user connecting from such an IP-address might be using a compromised computer. Is known to be an open HTTP proxy host, which may indicate the user connecting from such an IP-address might be using a compromised computer or that the attacker is using this host to proxy their connection to the RP’s website. Is known to be used as a TOR exit node or an anonymising VPN service, which may indicate that the attacker could be using this to hide their connection to the RP’s website. Is known to be an IP-address of a hosting provider, data-centre or content delivery network. This may indicate that the requests coming from such IP-addresses are used to perform denial of service or data mining attack. In addition to such commercial services, the RP’s own incident resolution team or security monitoring team could provide a list of IP-addresses that are related to known incidents or suspicious activities. The following sections describe possible actions to take when there’s suspicion of an attack. RP can use the longer displayText and send an alert to the user. RP could use a message text, such as \"Authentication started from an IP-address with open proxy service. Are you sure that you are on the correct website www.example-rp.com?\", or something similar. The message will be displayed on a separate screen from the usual PIN1 entry and the user will be asked to either confirm or cancel. There could be legitimate reasons why the user is using such IP-address or VPN service and if the user is aware of this, they can press \"Confirm\". However, if this comes to the user as a surprise, the user can press \"Cancel\" and investigate further. In case the source IP-address is used to send many authentication requests and there’s suspicion that a denial of service attack is in progress, RP can perform additional verification on the browser with a CAPTCHA. This can slow down the attackers and forces them to change their scripts and tactics. In case the source IP-address is associated with a previous fraud case and is known to be malicious, the RP can block this connection and deny service. The RP must first record enough information about connections and operations users regularly attempt on the RP’s website. It is then possible to apply log analysis and other security intelligence to the available information (and cross-reference with other data sources) to deduce with some certainty: there is an ongoing attack; some source (IP-address, browser, phone number, e-mail address) behaves in a weird way and perhaps should be more closely monitored or added to the list of suspicious IP-addresses or malicious IP-addresses; some logs might indicate that there’s an unknown vulnerability in the RP’s website. Procedures to respond to fraud and security incidents must be developed and communicated and practiced within the RP organization. When it is known that the RP responds quickly to attacks and attackers are caught by the law enforcement it also acts as a deterrent to future attackers. The RP must be familiar with services and guidelines from law enforcement authorities and other bodies. It is useful to establish contacts with these organisations before the urgent need arises. Good opportunity to do that is to participate in exercise sessions with the local cyber defence league unit. Some security measures described in this document require processing additional data about users (for example, which IP-addresses they have used) and require placing additional information on their browser cookies. This means that the RP must re-evaluate their personal data processing guidelines and public policies. For using cookies a cookie consent must be asked from the data subject and the information about using such cookie must be declared in the public cookie policy. For processing personal data the RP must make sure that they have a lawful basis for doing so (see GDPR art 6(1)). In case the processing is likely to result in a high risk to the rights and freedoms of data subjects a data protection impact assessment (DPIA) must be carried out. It is also useful to review the RP’s privacy policy and update it with relevant information.","title":"Secure Implementation Guide","component":"rp-api","version":"3.1.3","name":"secure","url":"/rp-api/secure.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. Feedback","hash":"_feedback","id":2},{"text":"2. Threats and attacks","hash":"_threats_and_attacks","id":3},{"text":"2.1. User mistakes","hash":"_user_mistakes","id":4},{"text":"2.1.1. Risk: Login by mistake","hash":"_risk_login_by_mistake","id":5},{"text":"2.2. Harassment and coercion attacks","hash":"_harassment_and_coercion_attacks","id":6},{"text":"2.2.1. Attack: User annoyance","hash":"_attack_user_annoyance","id":7},{"text":"2.2.2. Attack: Denial of service attack against RP","hash":"_attack_denial_of_service_attack_against_rp","id":8},{"text":"2.3. Data leaks","hash":"_data_leaks","id":9},{"text":"2.3.1. Attack: User data mining","hash":"_attack_user_data_mining","id":10},{"text":"2.4. Phishing attacks","hash":"_phishing_attacks","id":11},{"text":"2.4.1. Attack: Phishing with fully automated website","hash":"_attack_phishing_with_fully_automated_website","id":12},{"text":"2.4.2. Attack: Social engineering over phone","hash":"_attack_social_engineering_over_phone","id":13},{"text":"3. Security measures for RPs","hash":"_security_measures_for_rps","id":14},{"text":"3.1. Effectiveness of proposed security measures","hash":"_effectiveness_of_proposed_security_measures","id":15},{"text":"3.1.1. Requiredness and applicability","hash":"_requiredness_and_applicability","id":16},{"text":"3.1.2. Mitigation of threats","hash":"_mitigation_of_threats","id":17},{"text":"3.2. Defence: implement ID-card authentication securely","hash":"_defence_implement_id_card_authentication_securely","id":18},{"text":"3.2.1. Explicitly trust and reject CA certificates","hash":"_explicitly_trust_and_reject_ca_certificates","id":19},{"text":"3.2.2. ID-card authentication using Web-eID","hash":"_id_card_authentication_using_web_eid","id":20},{"text":"3.2.3. Use OCSP to check for the validity of certificate","hash":"_use_ocsp_to_check_for_the_validity_of_certificate","id":21},{"text":"3.2.4. Only accept certificates with trusted issuance policy","hash":"_only_accept_certificates_with_trusted_issuance_policy","id":22},{"text":"3.2.5. Only accept certificates with trusted key usage","hash":"_only_accept_certificates_with_trusted_key_usage","id":23},{"text":"3.3. Defence: use distinguishing and well-known serviceName and displayText","hash":"_defence_use_distinguishing_and_well_known_servicename_and_displaytext","id":24},{"text":"3.4. Defence: ask users to select correct verification code with Smart-ID app","hash":"_defence_ask_users_to_select_correct_verification_code_with_smart_id_app","id":25},{"text":"3.5. Defence: display information about last authentication to users","hash":"_defence_display_information_about_last_authentication_to_users","id":26},{"text":"3.6. Defence: display generic error messages","hash":"_defence_display_generic_error_messages","id":27},{"text":"3.7. Defence: show history of operations on the website","hash":"_defence_show_history_of_operations_on_the_website","id":28},{"text":"3.8. Defence: show details of transactions in the displayText with Smart-ID","hash":"_defence_show_details_of_transactions_in_the_displaytext_with_smart_id","id":29},{"text":"3.9. Defence: ask for multiple or non-public user identifiers","hash":"_defence_ask_for_multiple_or_non_public_user_identifiers","id":30},{"text":"3.10. Defence: keep track of trusted and unknown browsers","hash":"_defence_keep_track_of_trusted_and_unknown_browsers","id":31},{"text":"3.10.1. Description","hash":"_description","id":32},{"text":"3.10.2. Algorithm","hash":"_algorithm","id":33},{"text":"3.10.3. Ask national identity number when connecting from unknown browser","hash":"_ask_national_identity_number_when_connecting_from_unknown_browser","id":34},{"text":"3.10.4. Alert user with Smart-ID when connecting from an unknown browser","hash":"_alert_user_with_smart_id_when_connecting_from_an_unknown_browser","id":35},{"text":"3.11. Defence: keep track of suspicious and malicious IP-addresses","hash":"_defence_keep_track_of_suspicious_and_malicious_ip_addresses","id":36},{"text":"3.11.1. Alert user with Smart-ID when connecting from suspicious IP-address","hash":"_alert_user_with_smart_id_when_connecting_from_suspicious_ip_address","id":37},{"text":"3.11.2. Verify human users with connections from suspicious IP-addresses","hash":"_verify_human_users_with_connections_from_suspicious_ip_addresses","id":38},{"text":"3.11.3. Block connections from malicious IP-addresses.","hash":"_block_connections_from_malicious_ip_addresses","id":39},{"text":"3.12. Defence: carefully monitor website usage","hash":"_defence_carefully_monitor_website_usage","id":40},{"text":"3.13. Defence: respond swiftly and decisively to security incidents","hash":"_defence_respond_swiftly_and_decisively_to_security_incidents","id":41},{"text":"4. Personal data processing","hash":"_personal_data_processing","id":42}]},"31":{"id":31,"text":"The primary use case of RP API is to provide digital signatures. In RP API v3, new signature protocols for authentication and signing use cases have been introduced in order to maximize the security benefits for each use case: Signature protocol ACSP_V2 - for authentication requests, Signature protocol RAW_DIGEST_SIGNATURE - for signing requests. The primary reason why different signature protocols are needed is that for signing requests (RAW_DIGEST_SIGNATURE protocol), the data-to-be-signed object cannot be modified in any way. On the other hand, for authentication requests, the final data-to-be-signed object in ACSP_V2 protocol contains multiple factors, including (but not limited to) a challenge provided by RP (rpChallenge), random factor provided by the server (serverRandom) and a random factor provided by the mobile device (userChallenge). For ACSP_V2 signatureProtocol and signatureProtocolParameters parameters in the authentication requests and examples, see the OpenAPI specification authentication request parameters. Generation of rpChallenge can be done as follows: rpChallenge := BASE64-ENCODE(CRYPTO-RANDOM(64)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.security.SecureRandom; import java.util.Base64; public class RandomGenerateBase64Encode { public static void main(String[] args) { byte[] rpChallengeBytes = new byte[64]; new SecureRandom().nextBytes(rpChallengeBytes); String rpChallenge = Base64.getEncoder() .encodeToString(rpChallengeBytes); System.out.println(rpChallenge); } } <?php $rpChallengeBytes = random_bytes(64); $rpChallenge = base64_encode($rpChallengeBytes); echo $rpChallenge; ?> import os import base64 rp_challenge_bytes = os.urandom(64) rp_challenge = base64.b64encode(rp_challenge_bytes) print(rp_challenge) package main import ( \"crypto/rand\" \"encoding/base64\" \"fmt\" ) func main() { var rpChallengeBytes []byte = make([]byte, 64) _, err := rand.Read(rpChallengeBytes) if err != nil { fmt.Printf(\"error: %s\\n\", err) return } var rpChallenge []byte = []byte(base64.StdEncoding.EncodeToString([]byte(rpChallengeBytes))) fmt.Printf(\"%q\\n\", rpChallenge) } use base64::Engine as _; use rand::RngCore; use rand::rngs::OsRng; fn main() { let mut rp_challenge_bytes: [u8; 64] = [0u8; 64]; OsRng.fill_bytes(&mut rp_challenge_bytes); let rp_challenge_string: String = base64::engine::general_purpose::STANDARD.encode(rp_challenge_bytes); let rp_challenge: &[u8] = rp_challenge_string.as_bytes(); println!(\"{:?}\\n{}\", rp_challenge, rp_challenge_string); } import java.security.SecureRandom import java.util.Base64 fun main() { val random = SecureRandom() val rpChallengeBytes: ByteArray = ByteArray(64) random.nextBytes(rpChallengeBytes) val rpChallenge: String = Base64.getEncoder() .encodeToString(rpChallengeBytes) println(rpChallenge) } using System; public class RandomGenerateBase64Encode { public static void Main(string[] args) { byte[] rpChallengeBytes = new byte[64]; new Random().NextBytes(rpChallengeBytes); string rpChallenge = Convert.ToBase64String(rpChallengeBytes); Console.WriteLine(rpChallenge); } } const crypto = require('crypto'); const rpChallengeBytes = crypto.randomBytes(64); const rpChallenge = rpChallengeBytes.toString('base64'); console.log(rp_challenge); require 'base64' require 'securerandom' rp_challenge_bytes = SecureRandom.random_bytes(64) rp_challenge = Base64.strict_encode64(rp_challenge_bytes) puts rp_challenge For ACSP_V2 signature parameter in the authentication response and examples, see the API spec session status response parameters. To verify the signature.value the RP must first reconstruct its input digest (hash). The digest is calculated over the ACSP_V2_payload, and ACSP_V2_payload is assembled using vertical bar '|' (U+007C) as a separator. Rules of generating the digest value: in case initialCallbackUrl does not exist (for QR and Notification flows), this field must be empty and the separator must still be used, i.e. ||; in case the RP is not acting as a broker, the brokeredRpName must be empty and the separator must still be used, i.e. ||; interactions must be the same Base64-encoded byte string value that was used to initiate the session. Since JSON to Base64 encoding is non-deterministic (parameters may be ordered randomly, whitespace can be optional), trying to encode the same object again might return a different value; the digest must be calculated from UTF-8 encoded byte array that consists of the described elements joined in the specified order with vertical bar '|' (U+007C) as a separator, this also applies to Base64 encoded values, they must be used as is without Base64 decoding; Base64 encoding must also make sure that the unused bits are set to 0 and that the resulting values are correctly padded with = signs; the hash algorithm to use is specified in signature.signatureAlgorithmParameters.hashAlgorithm. The signature scheme that was used to generate the signature based on the digest is specified in signature.signatureAlgorithm. message := STR-CONCAT( 'smart-id', '|', 'ACSP_V2', '|', serverRandom, '|', rpChallenge, '|', userChallenge, '|', BASE64-ENCODE(relyingPartyName), '|', BASE64-ENCODE(brokeredRpName), '|', BASE64-ENCODE(SHA-256(interactions)), '|', interactionTypeUsed, '|', initialCallbackUrl, '|', flowType) digest := HASH(UTF8-ENCODE(message)) Java PHP Python Go Rust Kotlin C# Node.js Ruby import java.nio.charset.StandardCharsets; import java.security.MessageDigest; import java.util.Base64; public class AcspV2DigestCalculator { public static void main(String[] args) throws Exception { String separator = \"|\"; String schemeName = \"smart-id\"; String signatureProtocol = \"ACSP_V2\"; String serverRandom = \"MTlop6EXCrQ6FOErcKjxUhbV\"; String rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; String userChallenge = \"GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00\"; String relyingPartyNameBase64 = \"QmFuayAxMjM=\"; String brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; String interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; String interactionTypeUsed = \"confirmationMessage\"; String initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; String flowType = \"Web2App\"; MessageDigest md256 = MessageDigest.getInstance(\"SHA-256\"); md256.update(interactions.getBytes(StandardCharsets.UTF_8)); byte[] interactionsHash = md256.digest(); String interactionsBase64 = Base64.getEncoder().encodeToString(interactionsHash); String[] payloadParts = { schemeName, signatureProtocol, serverRandom, rpChallenge, userChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactionsBase64, interactionTypeUsed, initialCallbackUrl, flowType }; byte[] acspV2Payload = String .join(separator, payloadParts) .getBytes(StandardCharsets.UTF_8); MessageDigest md512 = MessageDigest.getInstance(\"SHA-512\"); md512.update(acspV2Payload); byte[] digest = md512.digest(); System.out.println(Base64.getEncoder().encodeToString(digest)); } } <?php $separator = '|'; $hashAlgorithm = 'sha512'; $schemeName = 'smart-id'; $signatureProtocol = 'ACSP_V2'; $serverRandom = 'MTlop6EXCrQ6FOErcKjxUhbV'; $rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; $userChallenge = 'GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00'; $relyingPartyNameBase64 = 'QmFuayAxMjM='; $brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; $interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; $interactionTypeUsed = 'confirmationMessage'; $initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; $flowType = 'Web2App'; $interactionsHash = hash('sha256', $interactions, true); $interactionsBase64 = base64_encode($interactionsHash); $acspV2Payload = implode($separator, [ $schemeName, $signatureProtocol, $serverRandom, $rpChallenge, $userChallenge, $relyingPartyNameBase64, $brokeredRpNameBase64, $interactionsBase64, $interactionTypeUsed, $initialCallbackUrl, $flowType ]); $digest = hash($hashAlgorithm, $acspV2Payload, true); echo base64_encode($digest); ?> import base64 import hashlib separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' server_random = 'MTlop6EXCrQ6FOErcKjxUhbV' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' user_challenge = 'GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' interaction_type_used = 'confirmationMessage' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' flow_type = 'Web2App' interactions_hash = hashlib.sha256(interactions.encode('utf-8')).digest() interactions_base64 = base64.b64encode(interactions_hash).decode('utf-8') acsp_v2_payload = separator.join([ scheme_name, signature_protocol, server_random, rp_challenge, user_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions_base64, interaction_type_used, initial_callback_url, flow_type ]).encode('utf-8') digest = hashlib.sha512(acsp_v2_payload).digest() print(base64.b64encode(digest)) package main import ( \"bytes\" \"crypto/sha512\" \"encoding/base64\" \"fmt\" ) func main() { var separator string = \"|\" var schemeName string = \"smart-id\" var signatureProtocol string = \"ACSP_V2\" var serverRandom string = \"MTlop6EXCrQ6FOErcKjxUhbV\" var rpChallenge string = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" var userChallenge string = \"GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00\" var relyingPartyNameBase64 string = \"QmFuayAxMjM=\" var brokeredRpNameBase64 string = \"RXhhbXBsZSBSUA==\" var interactions string = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" var interactionTypeUsed string = \"confirmationMessage\" var initialCallbackUrl string = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" var flowType string = \"Web2App\" var interactionsHash [32]byte = sha256.Sum256([]byte(interactions)) var interactionsBase64 string = base64.StdEncoding.EncodeToString(interactionsHash[:]) var acspv2Payload string = strings.Join([]string{ schemeName, signatureProtocol, serverRandom, rpChallenge, userChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactionsBase64, interactionTypeUsed, initialCallbackUrl, flowType, }, separator) var digest [64]byte = sha512.Sum512([]byte(acspv2Payload)) fmt.Printf(\"%q\\n\", base64.StdEncoding.EncodeToString(digest[:])) } use base64::Engine as _; use sha2::{Sha256, Sha512, Digest}; fn main() { let separator: &str = \"|\"; let scheme_name: &str = \"smart-id\"; let signature_protocol: &str = \"ACSP_V2\"; let server_random: &str = \"MTlop6EXCrQ6FOErcKjxUhbV\"; let rp_challenge: &str = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; let user_challenge: &str = \"GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00\"; let relying_party_name_base64: &str = \"QmFuayAxMjM=\"; let brokered_rp_name_base64: &str = \"RXhhbXBsZSBSUA==\"; let interactions: &str = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; let interaction_type_used: &str = \"confirmationMessage\"; let initial_callback_url: &str = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; let flow_type: &str = \"Web2App\"; let interactions_hash = Sha256::digest(interactions.as_bytes()); let interactions_base64 = &base64::engine::general_purpose::STANDARD.encode(interactions_hash); let acsp_v2_payload_parts: [&str; 10] = [ scheme_name, signature_protocol, server_random, rp_challenge, user_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions_base64, interaction_type_used, initial_callback_url, flow_type ]; let acsp_v2_payload: String = acsp_v2_payload_parts.join(separator); let mut hasher = Sha512::new(); hasher.update(acsp_v2_payload.as_bytes()); let digest: Vec<u8> = hasher.finalize().to_vec(); println!(\"{:?}\", base64::engine::general_purpose::STANDARD.encode(digest)) } import java.nio.charset.StandardCharsets import java.security.MessageDigest import java.util.Base64 fun main() { val separator: String = \"|\" val schemeName: String = \"smart-id\" val signatureProtocol: String = \"ACSP_V2\" val serverRandom: String = \"MTlop6EXCrQ6FOErcKjxUhbV\" val rpChallenge: String = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\" val userChallenge: String = \"GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00\" val relyingPartyNameBase64: String = \"QmFuayAxMjM=\" val brokeredRpNameBase64: String = \"RXhhbXBsZSBSUA==\" val interactions: String = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\" val interactionTypeUsed: String = \"confirmationMessage\" val initialCallbackUrl: String = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\" val flowType: String = \"Web2App\" val interactionsHash: ByteArray = MessageDigest .getInstance(\"SHA-256\") .digest(interactions.toByteArray(StandardCharsets.UTF_8)) val interactionsBase64: String = Base64 .getEncoder() .encodeToString(interactionsHash) val acspV2Payload: ByteArray = listOf( schemeName, signatureProtocol, serverRandom, rpChallenge, userChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactionsBase64, interactionTypeUsed, initialCallbackUrl, flowType ) .joinToString(separator) .toByteArray(StandardCharsets.UTF_8) val acspV2Digest: ByteArray = MessageDigest .getInstance(\"SHA-512\") .digest(acspV2Payload) println(Base64.getEncoder().encodeToString(acspV2Digest)) } using System; using System.Security.Cryptography; using System.Text; public class AcspV2DigestCalculator { public static void Main(string[] args) { string separator = \"|\"; string schemeName = \"smart-id\"; string signatureProtocol = \"ACSP_V2\"; string serverRandom = \"MTlop6EXCrQ6FOErcKjxUhbV\"; string rpChallenge = \"GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==\"; string userChallenge = \"GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00\"; string relyingPartyNameBase64 = \"QmFuayAxMjM=\"; string brokeredRpNameBase64 = \"RXhhbXBsZSBSUA==\"; string interactions = \"W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d\"; string interactionTypeUsed = \"confirmationMessage\"; string initialCallbackUrl = \"https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ\"; string flowType = \"Web2App\"; byte[] interactionsHash = SHA256.Create().ComputeHash(Encoding.UTF8.GetBytes(interactions)); string interactionsBase64 = Convert.ToBase64String(interactionsHash); string[] payloadParts = { schemeName, signatureProtocol, serverRandom, rpChallenge, userChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactionsBase64, interactionTypeUsed, initialCallbackUrl, flowType }; byte[] acspV2Payload = Encoding.UTF8.GetBytes( string.Join(separator, payloadParts) ); byte[] digest = SHA512.Create().ComputeHash(acspV2Payload); string base64Digest = Convert.ToBase64String(digest); Console.WriteLine(base64Digest); } } const crypto = require('crypto'); const separator = '|'; const schemeName = 'smart-id'; const signatureProtocol = 'ACSP_V2'; const serverRandom = 'MTlop6EXCrQ6FOErcKjxUhbV'; const rpChallenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg=='; const userChallenge = 'GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00'; const relyingPartyNameBase64 = 'QmFuayAxMjM='; const brokeredRpNameBase64 = 'RXhhbXBsZSBSUA=='; const interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d'; const interactionTypeUsed = 'confirmationMessage'; const initialCallbackUrl = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ'; const flowType = 'Web2App'; const interactionsBase64 = crypto.createHash('sha256').update(interactions).digest('base64'); const acspV2Payload = [ schemeName, signatureProtocol, serverRandom, rpChallenge, userChallenge, relyingPartyNameBase64, brokeredRpNameBase64, interactionsBase64, interactionTypeUsed, initialCallbackUrl, flowType ].join(separator); const digest = crypto.createHash('sha512').update(acspV2Payload).digest('base64'); console.log(digest); require 'base64' require 'digest' separator = '|' scheme_name = 'smart-id' signature_protocol = 'ACSP_V2' server_random = 'MTlop6EXCrQ6FOErcKjxUhbV' rp_challenge = 'GYS+yoah6emAcVDNIajwSs6UB/M95XrDxMzXBUkwQJ9YFDipXXzGpPc7raWcuc2+TEoRc7WvIZ/7dU/iRXenYg==' user_challenge = 'GnsWXXEjTCKR89fj9uo5u5ReBZ9JR7_pezLAI5jMS00' relying_party_name_base64 = 'QmFuayAxMjM=' brokered_rp_name_base64 = 'RXhhbXBsZSBSUA==' interactions = 'W3sidHlwZSI6ImNvbmZpcm1hdGlvbk1lc3NhZ2UiLCJkaXNwbGF5VGV4dDIwMCI6IkxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24gY29udGV4dCJ9LHsidHlwZSI6ImRpc3BsYXlUZXh0QW5kUElOIiwiZGlzcGxheVRleHQ2MCI6IlNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbiBjb250ZXh0In1d' interaction_type_used = 'confirmationMessage' initial_callback_url = 'https://rp.example.com/callback-url?value=RrKjjT4aggzu27YBddX1bQ' flow_type = 'Web2App' interactions_hash = Digest::SHA256.digest(interactions) interactions_base64 = Base64.strict_encode64(interactions_hash) acsp_v2_payload = [ scheme_name, signature_protocol, server_random, rp_challenge, user_challenge, relying_party_name_base64, brokered_rp_name_base64, interactions_base64, interaction_type_used, initial_callback_url, flow_type ].join(separator) digest = Digest::SHA512.digest(acsp_v2_payload) puts Base64.strict_encode64(digest) Example 1. ACSP_V2 signature digest (in Base64 format) ForpWzIGtGPvivuCWiDXv1U01qBnaf7ob2wjGEtRKpYO/atx7707vsG3o2jdTuezTHJvUvM2V9TKEAIhor+nng== Full verification of the signature and response is described in Response verification. For RAW_DIGEST_SIGNATURE signatureProtocol and signatureProtocolParameters parameters in the signature requests and examples, see the API spec signature request parameters. The digest value sent with the initial RP request is the digest value of the data-to-be-signed. One of the supported hash algorithms must be used. The signature is directly generated on the digest value and the verification must be done using the data-to-be-signed. For RAW_DIGEST_SIGNATURE signature parameter in the signature response and examples, see the API spec session status response parameters. Full verification of the signature and response is described in Response verification.","title":"Signature protocols","component":"rp-api","version":"3.1.3","name":"signature_protocols","url":"/rp-api/signature_protocols.html","titles":[{"text":"ACSP_V2 signature protocol","hash":"acsp_v2_signature_protocol","id":1},{"text":"ACSP_V2 signature request parameters","hash":"acsp_v2_signature_request_parameters","id":2},{"text":"rpChallenge generation","hash":"_rpchallenge_generation","id":3},{"text":"ACSP_V2 signature response parameters","hash":"_acsp_v2_signature_response_parameters","id":4},{"text":"ACSP_V2 digest calculation","hash":"acsp_v2_digest_calculation","id":5},{"text":"RAW_DIGEST_SIGNATURE signature protocol","hash":"raw_digest_signature_protocol","id":6},{"text":"RAW_DIGEST_SIGNATURE signature request parameters","hash":"raw_digest_signature_request_parameters","id":7},{"text":"RAW_DIGEST_SIGNATURE digest value","hash":"raw_digest_signature_digest_calculation","id":8},{"text":"RAW_DIGEST_SIGNATURE signature response parameters","hash":"_raw_digest_signature_signature_response_parameters","id":9}]},"32":{"id":32,"text":"Start your Smart-ID integration with new RP API v3.1 which is available in DEMO environment RP-API v3.1 Implementation guide. Date Description 2025-05-16 RP API v3.1 is available in demo 2025-05-20 RP API v3.1 documentation is available at https://sk-eid.github.io/smart-id-documentation/ 2025-05-22 Android app v29 is available in DEMO (supports RP API v3.1) 2025-06-10 iOS app v29 is available in DEMO (supports RP API v3.1) 2025-06-20 RP API v3.1 is available in PRODUCTION 2025-06-20 App v29 is published Smart-ID RP API v1/v2 will remain working as is. Still we encourage you to start your developments to implement new end-user friendly and more secure usage flows. No. For end-user to be able to use new flows app must be updated to at least version 29. User may see the following error messages when using old Smart-ID app with new flows: Same-device flows - fallback page Cross-device flow - Invalid QR code","title":"Smart-ID integration","component":"ROOT","version":"","name":"implementation","url":"/implementation.html","titles":[{"text":"Timeline","hash":"_timeline","id":1},{"text":"FAQ","hash":"_faq","id":2},{"text":"When I need to be ready with my integration?","hash":"_when_i_need_to_be_ready_with_my_integration","id":3},{"text":"Do new flows work with all Smart-ID app versions?","hash":"_do_new_flows_work_with_all_smart_id_app_versions","id":4}]},"33":{"id":33,"text":"Ask for an offer or for more information: e-mail sales@smart-id.com phone +372 610 1885 (Estonian) +371 2612 7964 (Latvian) +370 5245 6897 (Lithuanian) In case of technical questions or errors: e-mail support@smart-id.com phone +372 610 1888 If you have problems with transactions and receive an error, please include: date and time of the transaction, personal code used, your external IP, environment (production, demo).","title":"Contact","component":"ROOT","version":"","name":"contact","url":"/contact.html","titles":[{"text":"Support (in English)","hash":"_support_in_english","id":1}]},"34":{"id":34,"text":"IMPORTANT We do not have client libraries available for latest RP API v3 yet! NOTE New documentation includes many code samples in different languages. See for authentication requests and for signature requests. Smart-ID PHP client - authentication NOTE This PHP client cannot be used to create digitally signed containers because PHP does not have a library like DigiDoc4J. Smart-ID PHP demo application - authentication Smart-ID JAVA client Smart-ID JAVA demo application Smart-ID JAVA (DigiDoc4J Smart-ID adapter) - sign documents Smart-ID Ruby client - authentication https://github.com/zippyvision/smart-id-ruby Smart-ID NET client https://github.com/bogatykh/smart-id-net-client Smart-ID Go Library https://github.com/dknight/go-smartid Smart-ID Rust client https://crates.io/crates/smart-id-rust-client Examples in different languages for authentication requests and for signature requests.","title":"Client libraries","component":"ROOT","version":"","name":"client_libraries","url":"/client_libraries.html","titles":[{"text":"Available examples","hash":"_available_examples","id":1},{"text":"3rd Party libraries","hash":"_3rd_party_libraries","id":2},{"text":"Verification code calculation examples","hash":"_verification_code_calculation_examples","id":3}]},"35":{"id":35,"text":"This page will give you short overview of the Smart-ID and help you get started. Smart-ID is the next generation solution for managing your identity online. With Smart-ID you can log into 3rd party websites and give legally valid digital signature. Smart-ID works in your mobile phone or tablet and doesn’t require specially issued SIM-card. The demo version has the following functionality: User can use Smart-ID to log into the website (bank123 demo portal). User can log in Smart-ID self-service portal https://sid.demo.sk.ee/portal and get an overview of accounts and to delete an account. User can log in to any test e-service which is integrated with Smart-ID demo service. For using demo environment there is need to install Smart-ID demo app. Getting Smart-ID up and running is easy. Follow those easy 4 steps: Registration & Installation Install demo app on Android platform (minimum Android 5 required): https://play.google.com/apps/testing/com.stagnationlab.sk Steps to install on iOS (minimum iOS13 required): Download Testflight https://itunes.apple.com/us/app/testflight/id899247664?mt=8 Join Smart-ID demo beta app in https://testflight.apple.com/join/DoWddZjR Start the app Start the Smart-ID app and choose the Register button. Prove your identity For beta version, you can choose to prove your identity via provided bank links. Just make your selection, and you’ll be redirected to the bank’s Internet bank, and you are asked to log in with different tokens. Using bank link as a registration method means, that you will be granted Smart-ID Basic account. Using ID-card or mobile-ID means, that you will be receiving a Smart-ID Qualified account. Smart-ID Basic can be used only by IDP-s (banks), so we suggest preferring ID-card or Mobile-ID as a registration. After successful login, you’ll arrive back in the app, just confirm that your name and national identification number is correct. If you don’t have supported bank account, you can still try out the app by entering your personal data manually. If you do have Estonian personal ID-code, then you are not eligible for manual registration. Use 'Other country' instead if you prefer manual registration. Negative side here is, that you will receive randomly generated personal code, which makes testing more difficult (have to remember that personal code). Enter your PIN1 and PIN2 The app asks for your PIN1 and PIN2 code. PIN1 is for protecting your authentication key pair and PIN2 is for protecting your signature key pair, same way as with ID-card and Mobile-ID. You can choose the random codes, generated by app, or enter your own favorite PIN code Either way, make sure you remember the codes afterwards. Your Smart-ID account is now ready to use. If you have iOS watch with watchOS 8.5 or later, then you can test Smart-ID from the watch as well. To see the Smart-ID in action and to actually use it to log into a website and give the digital signature, you can try the following beta services. https://smid.demo.sk.ee Bank123 demo portal to demonstrate Smart-ID for online banking services https://beta.dokobit.com/ Dokobit BETA to demonstrate Smart-ID usage for signing NOTE For demo purposes, some of the security features of the Smart-ID demo environment are not identical with the production environment. The Smart-ID demo environment is not intended to be used for security testing. NOTE Smart-ID demo certificates are not automatically available for DEMO AIA OCSP - aia.demo.sk.ee There is a special interface that enables uploading certificates with an option to set the status. The upload page is available at https://demo.sk.ee/upload_cert/. Smart-ID demo certificates can be downloaded from https://sid.demo.sk.ee/portal/login Additional info about DEMO OCSP https://github.com/SK-EID/ocsp/wiki/SK-OCSP-Demo-environment Contact All feedback to the Smart-ID DEMO version is much appreciated. Please send it to the e-mail address support@sk.ee. When you report a problem, please include at least the following information: E-mail subject: Smart-ID DEMO feedback detailed description of the problem (if possible with screenshots) date and time when the problem occurred your device model and version of the operating system your personal code your account UUID, you will find it on Smart-ID App account management section","title":"Welcome to Smart-ID demo page","component":"ROOT","version":"","name":"demo","url":"/demo.html","titles":[{"text":"Smart-ID description","hash":"_smart_id_description","id":1},{"text":"Getting started","hash":"_getting_started","id":2},{"text":"Try it out","hash":"_try_it_out","id":3},{"text":"Give us feedback","hash":"_give_us_feedback","id":4}]},"36":{"id":36,"text":"Parameter Value base URL v1 https://rp-api.smart-id.com/v1/ base URL v2 https://rp-api.smart-id.com/v2/ base URL v3 https://rp-api.smart-id.com/v3/ We recommend Implementing HTTPS pinning but if you have IP address whitelisting in use: DNS name IP addresses rp-api.smart-id.com 62.65.42.57 (deprecated on 09.12.2024) rp-api.smart-id.com 195.13.185.55 81.16.238.22 91.223.243.57 Add Smart-ID to your e-service! Order now! Contact Parameter Value base URL v1 https://sid.demo.sk.ee/smart-id-rp/v1/ base URL v2 https://sid.demo.sk.ee/smart-id-rp/v2/ base URL v3 https://sid.demo.sk.ee/smart-id-rp/v3/ relyingPartyUUID 00000000-0000-4000-8000-000000000000 relyingPartyName DEMO DEMO relyingPartyUUID has no access to Smart-ID Basic accounts. If you would like to test with Smart-ID Basic accounts please write to support@sk.ee. If \"certificateLevel\":\"ADVANCED\" is used with wrong relyingPartyUUID in requests then HTTP error 403 Forbidden is returned. If the user only has a Smart-ID Basic account then HTTP error 404 Not Found is returned.","title":"Environment technical parameters","component":"ROOT","version":"","name":"environments","url":"/environments.html","titles":[{"text":"LIVE","hash":"_live","id":1},{"text":"DEMO","hash":"_demo","id":2},{"text":"Smart-ID Basic (ADVANCED) level accounts","hash":"_smart_id_basic_advanced_level_accounts","id":3}]},"37":{"id":37,"text":"In some cases user may end up in device link fallback page. For better user experience there is possibility to view that page in different languages. Page supports ISO 639-2 codes with lang parameter: 'eng' - English (default) 'est' - Estonian 'rus' - Russian 'lit' - Lithuanian 'lav' - Latvian 'nld' - Dutch 'fra' - French 'deu' - German More info about constructing device link URLs can be found here.","title":"Device link fallback page","component":"ROOT","version":"","name":"device_link","url":"/device_link.html","titles":[]},"38":{"id":38,"text":"Anyone who is using Smart-ID API needs to make sure that the connection endpoint is authentic and that the connection is secure. This is required to prevent MITM attacks for the authentication and signature protocols. This requirement is also described in RP API endpoint authentication page. Serial number (HEX) Validity Status Download 0E20714E18D8C3BEE183CC07F74EA14E 2024.09.18 00:00.00 2025.10.20 23:59:59 in use from 10.10.2024 DER, PEM IMPORTANT New certificate is issued by new intermediate certificate (DigiCert Global G2 TLS RSA SHA256 2020 CA1), which itself is issued by new root (DigiCert Global Root G2) certificate. Certificates are found here. Serial number (HEX) Validity Status Download 07FFF49BD963A210A7F0B079283704D6 2024.10.03 00:00.00 2025.10.15 23:59:59 in use from 03.10.2024 DER, PEM Using smart-id-java-client one can comply with the requirement without importing anything directly to Java. But it requires changes in the code. Samples: https://github.com/SK-EID/smart-id-java-client/blob/master/README.md#verifying-the-ssl-connection-to-application-provider-sk Same functionality as Smart-ID-Java-Client is available with the new smart-id-php-client. https://github.com/SK-EID/smart-id-php-client/blob/master/README.md#configure-client-details-and-https-pinning Systems running on other platforms must achieve the same result using methods suitable for these particular platforms. SK ID Solutions is not providing sample client libraries for other platforms besides Java and PHP.","title":"Implementing HTTPS pinning","component":"ROOT","version":"","name":"https_pinning","url":"/https_pinning.html","titles":[{"text":"rp-api.smart-id.com certificates","hash":"_rp_api_smart_id_com_certificates","id":1},{"text":"sid.demo.sk.ee certificates","hash":"_sid_demo_sk_ee_certificates","id":2},{"text":"smart-id-java-client","hash":"_smart_id_java_client","id":3},{"text":"smart-id-php-client","hash":"_smart_id_php_client","id":4},{"text":"Other means","hash":"_other_means","id":5}]},"39":{"id":39,"text":"For developers, demos and testing If you are here to get full experience how Smart-ID works, then try it out by starting here. Start your Smart-ID integration with new RP API v3.1 which is available in DEMO environment RP-API v3.1 Implementation guide. Date Description 2025-05-16 RP API v3.1 is available in demo 2025-05-20 RP API v3.1 documentation is available at https://sk-eid.github.io/smart-id-documentation/ 2025-05-22 Android app v29 is available in DEMO (supports RP API v3.1) 2025-06-10 iOS app v29 is available in DEMO (supports RP API v3.1) 2025-06-20 RP API v3.1 is available in PRODUCTION 2025-06-20 App v29 is published Smart-ID RP API v1/v2 will remain working as is. Still we encourage you to start your developments to implement new end-user friendly and more secure usage flows. No. For end-user to be able to use new flows app must be updated to at least version 29. User may see the following error messages when using old Smart-ID app with new flows: Same-device flows - fallback page Cross-device flow - Invalid QR code","title":"Welcome","component":"ROOT","version":"","name":"index","url":"/index.html","titles":[{"text":"Try out","hash":"_try_out","id":1},{"text":"Smart-ID integration","hash":"_smart_id_integration","id":2},{"text":"Timeline","hash":"_timeline","id":3},{"text":"FAQ","hash":"_faq","id":4},{"text":"When I need to be ready with my integration?","hash":"_when_i_need_to_be_ready_with_my_integration","id":5},{"text":"Do new flows work with all Smart-ID app versions?","hash":"_do_new_flows_work_with_all_smart_id_app_versions","id":6}]},"40":{"id":40,"text":"Smart-ID login buttons. Free to use! Download here Check for some extras here: https://www.smart-id.com/e-service-providers/smart-id-branding/","title":"Logos and buttons","component":"ROOT","version":"","name":"logos","url":"/logos.html","titles":[]},"41":{"id":41,"text":"IMPORTANT These test numbers work only with RP API v1/v2! NOTE Account numbers with EndResult!=OK have changed on 05.11.2024 (New CA chains!) EndResult Country Document Number Comment OK EE LT LV BE PNOEE-40504040001-MOCK-Q PNOLT-40504040001-MOCK-Q PNOLV-050405-13330-MOCK-Q PNOBE-05040400032-MOCK-Q Issued using: TEST of SK ID Solutions EID-Q 2024E OK LT LV PNOLT-40504049999-MOCK-NQ PNOLV-050404-19993-MOCK-NQ Issued using: TEST of SK ID Solutions EID-NQ 2021E OK LT LV BE PNOLT-50001029996-MOCK-Q PNOLV-020100-29990-MOCK-Q PNOBE-00010299944-MOCK-Q Adult OK EE LT LV PNOEE-30303039914-MOCK-Q PNOLT-30303039914-MOCK-Q PNOLV-030303-10012-MOCK-Q OK EE LT LV PNOEE-30303039816-MOCK-Q PNOLT-39901012239-MOCK-Q PNOLV-030303-10215-MOCK-Q User has other active account OK EE LT LV PNOEE-61101012257-MOCK-Q PNOLT-61101012257-MOCK-Q PNOLV-010111-23474-MOCK-Q PNOLV-050405-12223-MOCK-Q User age is under 18 (01.01.2011) OK EE LT LV PNOEE-30303039903-MOCK-Q PNOLT-30303039903-MOCK-Q PNOLV-030303-10004-MOCK-Q No numbers in names OK EE LT LV PNOEE-40404049996-MOCK-Q PNOLT-40404049996-MOCK-Q PNOLV-040404-19999-MOCK-Q OK EE LT LV PNOEE-40404049985-MOCK-Q PNOLT-40404049985-MOCK-Q PNOLV-040404-19980-MOCK-Q OK LV PNOLV-311299-19993-MOCK-Q PNOLV-329999-99901-MOCK-Q dateOfBirth in separate field OK LV PNOLV-329999-99709-MOCK-Q No dateOfBirth in separate field OK LT LV PNOLT-49912318881-MOCK-NQ PNOLV-311299-18886-MOCK-NQ USER_REFUSED EE LT LV BE PNOEE-30403039917-MOCK-Q PNOLT-30403039917-MOCK-Q PNOLV-030403-10016-MOCK-Q PNOBE-00010238349-MOCK-Q USER_REFUSED _DISPLAYTEXTANDPIN EE LT LV BE PNOEE-30403039928-MOCK-Q PNOLT-30403039928-MOCK-Q PNOLV-030403-10024-MOCK-Q PNOBE-00010267350-MOCK-Q v1 response USER_REFUSED USER_REFUSED _VC_CHOICE EE LT LV BE PNOEE-30403039939-MOCK-Q PNOLT-30403039939-MOCK-Q PNOLV-030403-10032-MOCK-Q PNOBE-00010266756-MOCK-Q v1 response USER_REFUSED USER_REFUSED _CONFIRMATIONMESSAGE EE LT LV BE PNOEE-30403039946-MOCK-Q PNOLT-30403039946-MOCK-Q PNOLV-030403-10040-MOCK-Q PNOBE-00010232708-MOCK-Q v1 response USER_REFUSED USER_REFUSED _CONFIRMATIONMESSAGE _WITH_VC_CHOICE EE LT LV BE PNOEE-30403039950-MOCK-Q PNOLT-30403039950-MOCK-Q PNOLV-030403-10059-MOCK-Q PNOBE-00010211724-MOCK-Q v1 response USER_REFUSED USER_REFUSED _CERT_CHOICE EE LT LV BE PNOEE-30403039961-MOCK-Q PNOLT-30403039961-MOCK-Q PNOLV-030403-10067-MOCK-Q PNOBE-00010221523-MOCK-Q v1 response USER_REFUSED WRONG_VC EE LT LV BE PNOEE-30403039972-MOCK-Q PNOLT-30403039972-MOCK-Q PNOLV-030403-10075-MOCK-Q PNOBE-00010216276-MOCK-Q TIMEOUT EE LT LV BE PNOEE-30403039983-MOCK-Q PNOLT-30403039983-MOCK-Q PNOLV-030403-10083-MOCK-Q PNOBE-00010220335-MOCK-Q","title":"Test accounts for automated testing","component":"ROOT","version":"","name":"test_accounts","url":"/test_accounts.html","titles":[]}},"components":{},"componentVersions":{"rp-api/3.1.3":{"displayVersion":"3.1.3","title":"Relying Party API","version":"3.1.3","name":"rp-api","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Smart-ID documentation","site-url":"https://sk-eid.github.io/smart-id-documentation/","example-sourcedir":"example$","partial-sourcedir":"partial$","examples-file":"device-link-examples-sk.adoc","examples-qr-code":"qr.svg","kroki-server-url":"http://localhost:8000","kroki-fetch-diagram":true,"kroki-default-format":"svg","tabs-sync-option":true,"page-content-title":"Relying Party API","private-obj-reference":false,"security-field-descriptions":false,"service-name":"Smart-ID","scheme-name":"smart-id","device-link-baseurl":"https://smart-id.com","rp-api-baseurl":"https://rp-api.smart-id.com","rp-callback-baseurl":"https://rp.example.com","rp-name":"DEMO","brokered-rp-name":"Example RP","link-version":"1.0","rp-api-domain":"https://rp-api.smart-id.com","dynamic-link-domain":"https://smart-id.com","openapi-allow-server":true,"openapi-server-url":"https://sid.demo.sk.ee/smart-id-rp","openapi-demo-rp-uuid":"00000000-0000-4000-8000-000000000000","openapi-contact-name":"SK ID Solutions","openapi-contact-url":"https://www.skidsolutions.eu/","openapi-contact-email":"support@smart-id.com","openapi-terms-of-service":"https://www.skidsolutions.eu/resources/general-terms-of-subscriber-agreement/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{},{}]},"url":"/rp-api/introduction.html","navigation":[{"items":[{"content":"Smart-ID Documentation"},{"content":"Getting started","url":"/index.html","urlType":"internal","items":[{"content":"Try out","url":"/demo.html","urlType":"internal"},{"content":"Smart-ID integration","url":"/implementation.html","urlType":"internal","items":[{"content":"Environments","url":"/environments.html","urlType":"internal"},{"content":"Device-link fallback page","url":"/device_link.html","urlType":"internal"},{"content":"Implementing HTTPS pinning","url":"/https_pinning.html","urlType":"internal"},{"content":"Client libraries","url":"/client_libraries.html","urlType":"internal"},{"content":"Logos","url":"/logos.html","urlType":"internal"},{"content":"Test accounts","url":"/test_accounts.html","urlType":"internal"}]}]},{"content":"Contact","url":"/contact.html","urlType":"internal"},{"content":"Relying Party API"},{"content":"Introduction","url":"/rp-api/introduction.html","urlType":"internal"},{"content":"Overview","url":"/rp-api/overview.html","urlType":"internal"},{"content":"Changes","url":"/rp-api/changes.html","urlType":"internal"},{"content":"Glossary","url":"/rp-api/glossary.html","urlType":"internal"},{"content":"Device link flows","url":"/rp-api/device_link_flows.html","urlType":"internal","items":[{"content":"<code>authCode</code> calculation","url":"/rp-api/authcode.html","urlType":"internal"}]},{"content":"Notification based flows","url":"/rp-api/notification_based_flows.html","urlType":"internal"},{"content":"OpenAPI specification","url":"/rp-api/api_specification.html","urlType":"internal"},{"content":"API technical description","url":"/rp-api/api_details.html","urlType":"internal"},{"content":"Interactions","url":"/rp-api/interactions.html","urlType":"internal"},{"content":"Signature protocols","url":"/rp-api/signature_protocols.html","urlType":"internal"},{"content":"Callback URLs","url":"/rp-api/callback_urls.html","urlType":"internal"},{"content":"Response verification","url":"/rp-api/response_verification.html","urlType":"internal"},{"content":"Secure Implementation Guide","url":"/rp-api/secure.html","urlType":"internal"}],"root":true,"order":0}]},"rp-api/3.0.3":{"displayVersion":"3.0.3","title":"RP API documentation","version":"3.0.3","name":"rp-api","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Smart-ID documentation","site-url":"https://sk-eid.github.io/smart-id-documentation/","example-sourcedir":"example$","partial-sourcedir":"partial$","examples-file":"device-link-examples-sk.adoc","examples-qr-code":"qr.svg","kroki-server-url":"http://localhost:8000","kroki-fetch-diagram":true,"kroki-default-format":"svg","tabs-sync-option":true,"page-content-title":"Relying Party API","private-obj-reference":false,"security-field-descriptions":false,"service-name":"Smart-ID","scheme-name":"smart-id","device-link-baseurl":"https://smart-id.com","rp-api-baseurl":"https://rp-api.smart-id.com","rp-callback-baseurl":"https://rp.example.com","rp-name":"DEMO","brokered-rp-name":"Example RP","link-version":"1.0","rp-api-domain":"https://rp-api.smart-id.com","dynamic-link-domain":"https://smart-id.com","openapi-allow-server":true,"openapi-server-url":"https://sid.demo.sk.ee/smart-id-rp","openapi-demo-rp-uuid":"00000000-0000-4000-8000-000000000000","openapi-contact-name":"SK ID Solutions","openapi-contact-url":"https://www.skidsolutions.eu/","openapi-contact-email":"support@smart-id.com","openapi-terms-of-service":"https://www.skidsolutions.eu/resources/general-terms-of-subscriber-agreement/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{},{}]},"url":"/rp-api/3.0.3/introduction.html","navigation":[{"items":[{"content":"Introduction","url":"/rp-api/3.0.3/introduction.html","urlType":"internal","items":[{"content":"Terms and glossary","url":"/rp-api/3.0.3/glossary.html","urlType":"internal"},{"content":"Changes","url":"/rp-api/3.0.3/changes.html","urlType":"internal"}]},{"content":"Session types","url":"/rp-api/3.0.3/sessions.html","urlType":"internal","items":[{"content":"<code>authentication</code> session","url":"/rp-api/3.0.3/authentication_session.html","urlType":"internal"},{"content":"<code>signature</code> session","url":"/rp-api/3.0.3/signature_session.html","urlType":"internal"},{"content":"<code>certificatechoice</code> session","url":"/rp-api/3.0.3/certificatechoice_session.html","urlType":"internal"},{"content":"<code>session</code> status","url":"/rp-api/3.0.3/session_status.html","urlType":"internal"}]},{"content":"Dynamic link flows","url":"/rp-api/3.0.3/dynamic_link_flows.html","urlType":"internal"},{"content":"Notification based flows","url":"/rp-api/3.0.3/notification_based_flows.html","urlType":"internal"},{"content":"Response verification","url":"/rp-api/3.0.3/response_verification.html","urlType":"internal"},{"content":"REST object references","url":"/rp-api/3.0.3/object_references.html","urlType":"internal"},{"content":"Signature protocols","url":"/rp-api/3.0.3/signature_protocols.html","urlType":"internal"},{"content":"Interactions","url":"/rp-api/3.0.3/interactions.html","urlType":"internal"},{"content":"Additional request properties","url":"/rp-api/3.0.3/request_properties.html","urlType":"internal"},{"content":"REST API details","url":"/rp-api/3.0.3/api_details.html","urlType":"internal"},{"content":"Secure Implementation Guide","url":"/rp-api/3.0.3/secure.html","urlType":"internal"}],"root":true,"order":0}]},"ROOT/":{"displayVersion":"default","title":"Documentation","version":"","name":"ROOT","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Smart-ID documentation","site-url":"https://sk-eid.github.io/smart-id-documentation/","example-sourcedir":"example$","partial-sourcedir":"partial$","examples-file":"device-link-examples-sk.adoc","examples-qr-code":"qr.svg","kroki-server-url":"http://localhost:8000","kroki-fetch-diagram":true,"kroki-default-format":"svg","tabs-sync-option":true,"page-content-title":"Relying Party API","private-obj-reference":false,"security-field-descriptions":false,"service-name":"Smart-ID","scheme-name":"smart-id","device-link-baseurl":"https://smart-id.com","rp-api-baseurl":"https://rp-api.smart-id.com","rp-callback-baseurl":"https://rp.example.com","rp-name":"DEMO","brokered-rp-name":"Example RP","link-version":"1.0","rp-api-domain":"https://rp-api.smart-id.com","dynamic-link-domain":"https://smart-id.com","openapi-allow-server":true,"openapi-server-url":"https://sid.demo.sk.ee/smart-id-rp","openapi-demo-rp-uuid":"00000000-0000-4000-8000-000000000000","openapi-contact-name":"SK ID Solutions","openapi-contact-url":"https://www.skidsolutions.eu/","openapi-contact-email":"support@smart-id.com","openapi-terms-of-service":"https://www.skidsolutions.eu/resources/general-terms-of-subscriber-agreement/"},"sourcemap":false,"extensions":[{},{},{}]},"url":"/index.html","navigation":[{"items":[{"content":"Smart-ID Documentation"},{"content":"Getting started","url":"/index.html","urlType":"internal","items":[{"content":"Try out","url":"/demo.html","urlType":"internal"},{"content":"Smart-ID integration","url":"/implementation.html","urlType":"internal","items":[{"content":"Environments","url":"/environments.html","urlType":"internal"},{"content":"Device link fallback page","url":"/device_link.html","urlType":"internal"},{"content":"Implementing HTTPS pinning","url":"/https_pinning.html","urlType":"internal"},{"content":"Client libraries","url":"/client_libraries.html","urlType":"internal"},{"content":"Logos","url":"/logos.html","urlType":"internal"},{"content":"Test accounts","url":"/test_accounts.html","urlType":"internal"}]}]},{"content":"Contact","url":"/contact.html","urlType":"internal"},{"content":"Relying Party API"},{"content":"Introduction","url":"/rp-api/introduction.html","urlType":"internal"},{"content":"Overview","url":"/rp-api/overview.html","urlType":"internal"},{"content":"Changes","url":"/rp-api/changes.html","urlType":"internal"},{"content":"Glossary","url":"/rp-api/glossary.html","urlType":"internal"},{"content":"Device link flows","url":"/rp-api/device_link_flows.html","urlType":"internal","items":[{"content":"<code>authCode</code> calculation","url":"/rp-api/authcode.html","urlType":"internal"}]},{"content":"Notification based flows","url":"/rp-api/notification_based_flows.html","urlType":"internal"},{"content":"OpenAPI specification","url":"/rp-api/api_specification.html","urlType":"internal"},{"content":"API technical description","url":"/rp-api/api_details.html","urlType":"internal"},{"content":"Interactions","url":"/rp-api/interactions.html","urlType":"internal"},{"content":"Signature protocols","url":"/rp-api/signature_protocols.html","urlType":"internal"},{"content":"Callback URLs","url":"/rp-api/callback_urls.html","urlType":"internal"},{"content":"Response verification","url":"/rp-api/response_verification.html","urlType":"internal"},{"content":"Secure Implementation Guide","url":"/rp-api/secure.html","urlType":"internal"}],"root":true,"order":0}]}}}})